// Code generated by go-swagger; DO NOT EDIT.

package photo

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// DeleteOKCode is the HTTP code returned for type DeleteOK
const DeleteOKCode int = 200

/*DeleteOK SUCCESS

swagger:response deleteOK
*/
type DeleteOK struct {

	/*
	  In: Body
	*/
	Payload *DeleteOKBody `json:"body,omitempty"`
}

// NewDeleteOK creates DeleteOK with default headers values
func NewDeleteOK() *DeleteOK {

	return &DeleteOK{}
}

// WithPayload adds the payload to the delete o k response
func (o *DeleteOK) WithPayload(payload *DeleteOKBody) *DeleteOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete o k response
func (o *DeleteOK) SetPayload(payload *DeleteOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteBadRequestCode is the HTTP code returned for type DeleteBadRequest
const DeleteBadRequestCode int = 400

/*DeleteBadRequest Ошибка валидации

swagger:response deleteBadRequest
*/
type DeleteBadRequest struct {

	/*
	  In: Body
	*/
	Payload *DeleteBadRequestBody `json:"body,omitempty"`
}

// NewDeleteBadRequest creates DeleteBadRequest with default headers values
func NewDeleteBadRequest() *DeleteBadRequest {

	return &DeleteBadRequest{}
}

// WithPayload adds the payload to the delete bad request response
func (o *DeleteBadRequest) WithPayload(payload *DeleteBadRequestBody) *DeleteBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete bad request response
func (o *DeleteBadRequest) SetPayload(payload *DeleteBadRequestBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteNotFoundCode is the HTTP code returned for type DeleteNotFound
const DeleteNotFoundCode int = 404

/*DeleteNotFound Not found

swagger:response deleteNotFound
*/
type DeleteNotFound struct {

	/*
	  In: Body
	*/
	Payload *DeleteNotFoundBody `json:"body,omitempty"`
}

// NewDeleteNotFound creates DeleteNotFound with default headers values
func NewDeleteNotFound() *DeleteNotFound {

	return &DeleteNotFound{}
}

// WithPayload adds the payload to the delete not found response
func (o *DeleteNotFound) WithPayload(payload *DeleteNotFoundBody) *DeleteNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete not found response
func (o *DeleteNotFound) SetPayload(payload *DeleteNotFoundBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteMethodNotAllowedCode is the HTTP code returned for type DeleteMethodNotAllowed
const DeleteMethodNotAllowedCode int = 405

/*DeleteMethodNotAllowed Invalid Method

swagger:response deleteMethodNotAllowed
*/
type DeleteMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *DeleteMethodNotAllowedBody `json:"body,omitempty"`
}

// NewDeleteMethodNotAllowed creates DeleteMethodNotAllowed with default headers values
func NewDeleteMethodNotAllowed() *DeleteMethodNotAllowed {

	return &DeleteMethodNotAllowed{}
}

// WithPayload adds the payload to the delete method not allowed response
func (o *DeleteMethodNotAllowed) WithPayload(payload *DeleteMethodNotAllowedBody) *DeleteMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete method not allowed response
func (o *DeleteMethodNotAllowed) SetPayload(payload *DeleteMethodNotAllowedBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteInternalServerErrorCode is the HTTP code returned for type DeleteInternalServerError
const DeleteInternalServerErrorCode int = 500

/*DeleteInternalServerError Internal server error

swagger:response deleteInternalServerError
*/
type DeleteInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *DeleteInternalServerErrorBody `json:"body,omitempty"`
}

// NewDeleteInternalServerError creates DeleteInternalServerError with default headers values
func NewDeleteInternalServerError() *DeleteInternalServerError {

	return &DeleteInternalServerError{}
}

// WithPayload adds the payload to the delete internal server error response
func (o *DeleteInternalServerError) WithPayload(payload *DeleteInternalServerErrorBody) *DeleteInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete internal server error response
func (o *DeleteInternalServerError) SetPayload(payload *DeleteInternalServerErrorBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
