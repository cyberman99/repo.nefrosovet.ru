// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "#### RESTFUL RECOGNITION API\n",
    "title": "Recognition API",
    "version": "1.0.0"
  },
  "host": "recognition.maximus.lan",
  "basePath": "/",
  "paths": {
    "/photos": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Photo"
        ],
        "summary": "Коллекция фотографий",
        "operationId": "Collection",
        "parameters": [
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/Photo_response_200"
          },
          "400": {
            "$ref": "#/responses/Base_response_400"
          },
          "404": {
            "$ref": "#/responses/Base_response_404"
          },
          "405": {
            "$ref": "#/responses/Base_response_405"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      },
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Photo"
        ],
        "summary": "Загрузка фотографии",
        "operationId": "Create",
        "parameters": [
          {
            "type": "file",
            "description": "The file to upload.",
            "name": "file",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "description": "person GUID",
            "name": "personID",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/Photo_response_200"
          },
          "400": {
            "$ref": "#/responses/Base_response_400"
          },
          "404": {
            "$ref": "#/responses/Base_response_404"
          },
          "405": {
            "$ref": "#/responses/Base_response_405"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      }
    },
    "/photos/{photoID}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Photo"
        ],
        "summary": "Информация о фотографии",
        "operationId": "View",
        "responses": {
          "200": {
            "$ref": "#/responses/Photo_response_200"
          },
          "400": {
            "$ref": "#/responses/Base_response_400"
          },
          "404": {
            "$ref": "#/responses/Base_response_404"
          },
          "405": {
            "$ref": "#/responses/Base_response_405"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      },
      "delete": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Photo"
        ],
        "summary": "Удаление фотографии",
        "operationId": "Delete",
        "responses": {
          "200": {
            "$ref": "#/responses/Base_response_200"
          },
          "400": {
            "$ref": "#/responses/Base_response_400"
          },
          "404": {
            "$ref": "#/responses/Base_response_404"
          },
          "405": {
            "$ref": "#/responses/Base_response_405"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/photoID"
        }
      ]
    },
    "/recognize": {
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Recognize"
        ],
        "summary": "Загрузка фотографии для поиска совпадений",
        "operationId": "Recognize",
        "parameters": [
          {
            "type": "file",
            "description": "The file to upload.",
            "name": "file",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/Recognize_response_200"
          },
          "400": {
            "$ref": "#/responses/Base_response_400"
          },
          "404": {
            "$ref": "#/responses/Base_response_404"
          },
          "405": {
            "$ref": "#/responses/Base_response_405"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      }
    }
  },
  "definitions": {
    "Base_data": {
      "description": "Возвращает статус ответа",
      "type": "object",
      "required": [
        "version"
      ],
      "properties": {
        "version": {
          "description": "Версия ответа сервиса",
          "type": "string",
          "example": "2.0.0"
        }
      }
    },
    "Error_400_data": {
      "allOf": [
        {
          "$ref": "#/definitions/Error_data"
        },
        {
          "type": "object",
          "title": "Error_Error_400_data",
          "required": [
            "message",
            "errors"
          ],
          "properties": {
            "errors": {
              "type": "object",
              "required": [
                "validation"
              ],
              "properties": {
                "validation": {
                  "type": "object"
                }
              }
            },
            "message": {
              "type": "string",
              "example": "Validation error"
            }
          }
        }
      ]
    },
    "Error_404_data": {
      "allOf": [
        {
          "$ref": "#/definitions/Error_data"
        },
        {
          "type": "object",
          "title": "Error_Error_404_data",
          "properties": {
            "errors": {},
            "message": {
              "description": "сообщение ответа",
              "type": "string",
              "example": "${ITEM} Not found"
            }
          }
        }
      ]
    },
    "Error_405_data": {
      "allOf": [
        {
          "$ref": "#/definitions/Error_data"
        },
        {
          "type": "object",
          "title": "Error_Error_405_data",
          "properties": {
            "errors": {},
            "message": {
              "description": "сообщение ответа",
              "type": "string",
              "example": "Method ${METHOD} not allowed"
            }
          }
        }
      ]
    },
    "Error_500_data": {
      "allOf": [
        {
          "$ref": "#/definitions/Error_data"
        },
        {
          "type": "object",
          "title": "Error_Error_500_data",
          "properties": {
            "errors": {},
            "message": {
              "description": "сообщение ответа",
              "type": "string",
              "example": "Internal server error"
            }
          }
        }
      ]
    },
    "Error_data": {
      "description": "Все плохо",
      "allOf": [
        {
          "$ref": "#/definitions/Base_data"
        },
        {
          "type": "object",
          "title": "Error_data",
          "required": [
            "data"
          ],
          "properties": {
            "data": {}
          }
        }
      ]
    },
    "Photo_object": {
      "title": "Person_object",
      "required": [
        "ID"
      ],
      "properties": {
        "ID": {
          "description": "Идентификатор фотографии",
          "type": "string",
          "format": "uuid",
          "example": "c4455363-d263-447f-9c56-6f7c39b4771a"
        },
        "URL": {
          "description": "URL фото на сервисе",
          "type": "string",
          "x-nullable": true,
          "x-omitempty": false,
          "example": "https://storage.com/photos/id"
        },
        "extService": {
          "description": "Имя внешнего сервиса распознавания",
          "type": "string",
          "enum": [
            "AWS"
          ],
          "x-omitempty": false,
          "example": "AWS"
        },
        "personID": {
          "description": "Идентификатор индивидуума",
          "type": "string",
          "format": "uuid",
          "x-omitempty": false,
          "example": "f2596011-1502-4fe2-bb49-42ff209cc6c2"
        }
      }
    },
    "Recognize_object": {
      "title": "Recognize_object",
      "required": [
        "Similarity"
      ],
      "properties": {
        "Similarity": {
          "description": "Сходство фотографии с образцом",
          "type": "number",
          "example": 88
        }
      }
    },
    "Success_data": {
      "description": "Все хорошо",
      "allOf": [
        {
          "$ref": "#/definitions/Base_data"
        },
        {
          "type": "object",
          "title": "Success_data",
          "required": [
            "message",
            "errors"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {}
            },
            "message": {
              "description": "сообщение ответа",
              "type": "string",
              "example": "SUCCESS"
            }
          }
        }
      ]
    }
  },
  "parameters": {
    "limit": {
      "minimum": 1,
      "type": "integer",
      "description": "Лимит",
      "name": "limit",
      "in": "query"
    },
    "offset": {
      "type": "integer",
      "description": "Шаг",
      "name": "offset",
      "in": "query"
    },
    "personID": {
      "type": "string",
      "format": "uuid",
      "description": "Идентификатор пациента",
      "name": "personID",
      "in": "path",
      "required": true
    },
    "photoID": {
      "minLength": 1,
      "type": "string",
      "format": "uuid",
      "description": "Идентификатор фотографии",
      "name": "photoID",
      "in": "path",
      "required": true
    }
  },
  "responses": {
    "Base_response_200": {
      "description": "SUCCESS",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Success_data"
          },
          {
            "type": "object",
            "required": [
              "data"
            ],
            "properties": {
              "data": {
                "type": "array",
                "items": {}
              }
            }
          }
        ]
      }
    },
    "Base_response_400": {
      "description": "Ошибка валидации",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Error_400_data"
          },
          {
            "type": "object",
            "required": [
              "message",
              "errors"
            ],
            "properties": {
              "errors": {
                "type": "object",
                "properties": {
                  "core": {
                    "type": "string"
                  },
                  "json": {
                    "type": "string"
                  },
                  "validation": {
                    "type": "object"
                  }
                }
              },
              "message": {
                "type": "string",
                "example": "Authentication failure"
              }
            }
          }
        ]
      }
    },
    "Base_response_404": {
      "description": "Not found",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Error_404_data"
          }
        ]
      }
    },
    "Base_response_405": {
      "description": "Invalid Method",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Error_405_data"
          }
        ]
      }
    },
    "Base_response_500": {
      "description": "Internal server error",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Error_500_data"
          }
        ]
      }
    },
    "Photo_response_200": {
      "description": "Объект фотографии",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Success_data"
          },
          {
            "type": "object",
            "required": [
              "data"
            ],
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/definitions/Photo_object"
                    }
                  ]
                }
              }
            }
          }
        ]
      }
    },
    "Recognize_response_200": {
      "description": "Объект фотографии",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Success_data"
          },
          {
            "type": "object",
            "required": [
              "data"
            ],
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/definitions/Photo_object"
                    },
                    {
                      "$ref": "#/definitions/Recognize_object"
                    }
                  ]
                }
              }
            }
          }
        ]
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "#### RESTFUL RECOGNITION API\n",
    "title": "Recognition API",
    "version": "1.0.0"
  },
  "host": "recognition.maximus.lan",
  "basePath": "/",
  "paths": {
    "/photos": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Photo"
        ],
        "summary": "Коллекция фотографий",
        "operationId": "Collection",
        "parameters": [
          {
            "type": "integer",
            "description": "Шаг",
            "name": "offset",
            "in": "query"
          },
          {
            "minimum": 1,
            "type": "integer",
            "description": "Лимит",
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Объект фотографии",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "$ref": "#/definitions/Photo_object"
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Ошибка валидации",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_400_data"
                },
                {
                  "type": "object",
                  "required": [
                    "message",
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {
                        "core": {
                          "type": "string"
                        },
                        "json": {
                          "type": "string"
                        },
                        "validation": {
                          "type": "object"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Authentication failure"
                    }
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_404_data"
                }
              ]
            }
          },
          "405": {
            "description": "Invalid Method",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_405_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      },
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Photo"
        ],
        "summary": "Загрузка фотографии",
        "operationId": "Create",
        "parameters": [
          {
            "type": "file",
            "description": "The file to upload.",
            "name": "file",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "description": "person GUID",
            "name": "personID",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Объект фотографии",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "$ref": "#/definitions/Photo_object"
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Ошибка валидации",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_400_data"
                },
                {
                  "type": "object",
                  "required": [
                    "message",
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {
                        "core": {
                          "type": "string"
                        },
                        "json": {
                          "type": "string"
                        },
                        "validation": {
                          "type": "object"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Authentication failure"
                    }
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_404_data"
                }
              ]
            }
          },
          "405": {
            "description": "Invalid Method",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_405_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      }
    },
    "/photos/{photoID}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Photo"
        ],
        "summary": "Информация о фотографии",
        "operationId": "View",
        "responses": {
          "200": {
            "description": "Объект фотографии",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "$ref": "#/definitions/Photo_object"
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Ошибка валидации",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_400_data"
                },
                {
                  "type": "object",
                  "required": [
                    "message",
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {
                        "core": {
                          "type": "string"
                        },
                        "json": {
                          "type": "string"
                        },
                        "validation": {
                          "type": "object"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Authentication failure"
                    }
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_404_data"
                }
              ]
            }
          },
          "405": {
            "description": "Invalid Method",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_405_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      },
      "delete": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Photo"
        ],
        "summary": "Удаление фотографии",
        "operationId": "Delete",
        "responses": {
          "200": {
            "description": "SUCCESS",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {}
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Ошибка валидации",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_400_data"
                },
                {
                  "type": "object",
                  "required": [
                    "message",
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {
                        "core": {
                          "type": "string"
                        },
                        "json": {
                          "type": "string"
                        },
                        "validation": {
                          "type": "object"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Authentication failure"
                    }
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_404_data"
                }
              ]
            }
          },
          "405": {
            "description": "Invalid Method",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_405_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      },
      "parameters": [
        {
          "minLength": 1,
          "type": "string",
          "format": "uuid",
          "description": "Идентификатор фотографии",
          "name": "photoID",
          "in": "path",
          "required": true
        }
      ]
    },
    "/recognize": {
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Recognize"
        ],
        "summary": "Загрузка фотографии для поиска совпадений",
        "operationId": "Recognize",
        "parameters": [
          {
            "type": "file",
            "description": "The file to upload.",
            "name": "file",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Объект фотографии",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "$ref": "#/definitions/Photo_object"
                          },
                          {
                            "$ref": "#/definitions/Recognize_object"
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Ошибка валидации",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_400_data"
                },
                {
                  "type": "object",
                  "required": [
                    "message",
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {
                        "core": {
                          "type": "string"
                        },
                        "json": {
                          "type": "string"
                        },
                        "validation": {
                          "type": "object"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Authentication failure"
                    }
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_404_data"
                }
              ]
            }
          },
          "405": {
            "description": "Invalid Method",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_405_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Base_data": {
      "description": "Возвращает статус ответа",
      "type": "object",
      "required": [
        "version"
      ],
      "properties": {
        "version": {
          "description": "Версия ответа сервиса",
          "type": "string",
          "example": "2.0.0"
        }
      }
    },
    "Error_400_data": {
      "allOf": [
        {
          "$ref": "#/definitions/Error_data"
        },
        {
          "type": "object",
          "title": "Error_Error_400_data",
          "required": [
            "message",
            "errors"
          ],
          "properties": {
            "errors": {
              "type": "object",
              "required": [
                "validation"
              ],
              "properties": {
                "validation": {
                  "type": "object"
                }
              }
            },
            "message": {
              "type": "string",
              "example": "Validation error"
            }
          }
        }
      ]
    },
    "Error_404_data": {
      "allOf": [
        {
          "$ref": "#/definitions/Error_data"
        },
        {
          "type": "object",
          "title": "Error_Error_404_data",
          "properties": {
            "errors": {},
            "message": {
              "description": "сообщение ответа",
              "type": "string",
              "example": "${ITEM} Not found"
            }
          }
        }
      ]
    },
    "Error_405_data": {
      "allOf": [
        {
          "$ref": "#/definitions/Error_data"
        },
        {
          "type": "object",
          "title": "Error_Error_405_data",
          "properties": {
            "errors": {},
            "message": {
              "description": "сообщение ответа",
              "type": "string",
              "example": "Method ${METHOD} not allowed"
            }
          }
        }
      ]
    },
    "Error_500_data": {
      "allOf": [
        {
          "$ref": "#/definitions/Error_data"
        },
        {
          "type": "object",
          "title": "Error_Error_500_data",
          "properties": {
            "errors": {},
            "message": {
              "description": "сообщение ответа",
              "type": "string",
              "example": "Internal server error"
            }
          }
        }
      ]
    },
    "Error_data": {
      "description": "Все плохо",
      "allOf": [
        {
          "$ref": "#/definitions/Base_data"
        },
        {
          "type": "object",
          "title": "Error_data",
          "required": [
            "data"
          ],
          "properties": {
            "data": {}
          }
        }
      ]
    },
    "Photo_object": {
      "title": "Person_object",
      "required": [
        "ID"
      ],
      "properties": {
        "ID": {
          "description": "Идентификатор фотографии",
          "type": "string",
          "format": "uuid",
          "example": "c4455363-d263-447f-9c56-6f7c39b4771a"
        },
        "URL": {
          "description": "URL фото на сервисе",
          "type": "string",
          "x-nullable": true,
          "x-omitempty": false,
          "example": "https://storage.com/photos/id"
        },
        "extService": {
          "description": "Имя внешнего сервиса распознавания",
          "type": "string",
          "enum": [
            "AWS"
          ],
          "x-omitempty": false,
          "example": "AWS"
        },
        "personID": {
          "description": "Идентификатор индивидуума",
          "type": "string",
          "format": "uuid",
          "x-omitempty": false,
          "example": "f2596011-1502-4fe2-bb49-42ff209cc6c2"
        }
      }
    },
    "Recognize_object": {
      "title": "Recognize_object",
      "required": [
        "Similarity"
      ],
      "properties": {
        "Similarity": {
          "description": "Сходство фотографии с образцом",
          "type": "number",
          "example": 88
        }
      }
    },
    "Success_data": {
      "description": "Все хорошо",
      "allOf": [
        {
          "$ref": "#/definitions/Base_data"
        },
        {
          "type": "object",
          "title": "Success_data",
          "required": [
            "message",
            "errors"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {}
            },
            "message": {
              "description": "сообщение ответа",
              "type": "string",
              "example": "SUCCESS"
            }
          }
        }
      ]
    }
  },
  "parameters": {
    "limit": {
      "minimum": 1,
      "type": "integer",
      "description": "Лимит",
      "name": "limit",
      "in": "query"
    },
    "offset": {
      "type": "integer",
      "description": "Шаг",
      "name": "offset",
      "in": "query"
    },
    "personID": {
      "type": "string",
      "format": "uuid",
      "description": "Идентификатор пациента",
      "name": "personID",
      "in": "path",
      "required": true
    },
    "photoID": {
      "minLength": 1,
      "type": "string",
      "format": "uuid",
      "description": "Идентификатор фотографии",
      "name": "photoID",
      "in": "path",
      "required": true
    }
  },
  "responses": {
    "Base_response_200": {
      "description": "SUCCESS",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Success_data"
          },
          {
            "type": "object",
            "required": [
              "data"
            ],
            "properties": {
              "data": {
                "type": "array",
                "items": {}
              }
            }
          }
        ]
      }
    },
    "Base_response_400": {
      "description": "Ошибка валидации",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Error_400_data"
          },
          {
            "type": "object",
            "required": [
              "message",
              "errors"
            ],
            "properties": {
              "errors": {
                "type": "object",
                "properties": {
                  "core": {
                    "type": "string"
                  },
                  "json": {
                    "type": "string"
                  },
                  "validation": {
                    "type": "object"
                  }
                }
              },
              "message": {
                "type": "string",
                "example": "Authentication failure"
              }
            }
          }
        ]
      }
    },
    "Base_response_404": {
      "description": "Not found",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Error_404_data"
          }
        ]
      }
    },
    "Base_response_405": {
      "description": "Invalid Method",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Error_405_data"
          }
        ]
      }
    },
    "Base_response_500": {
      "description": "Internal server error",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Error_500_data"
          }
        ]
      }
    },
    "Photo_response_200": {
      "description": "Объект фотографии",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Success_data"
          },
          {
            "type": "object",
            "required": [
              "data"
            ],
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/definitions/Photo_object"
                    }
                  ]
                }
              }
            }
          }
        ]
      }
    },
    "Recognize_response_200": {
      "description": "Объект фотографии",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Success_data"
          },
          {
            "type": "object",
            "required": [
              "data"
            ],
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/definitions/Photo_object"
                    },
                    {
                      "$ref": "#/definitions/Recognize_object"
                    }
                  ]
                }
              }
            }
          }
        ]
      }
    }
  }
}`))
}
