// Package local_sms_db contains the types for schema 'sms'.
package localsmsdb

// Code generated by xo. DO NOT EDIT.

import (
	"database/sql/driver"
	"errors"
)

// Receive is the 'Receive' enum type from schema 'sms'.
type Receive uint16

const (
	// ReceiveYes is the 'yes' Receive.
	ReceiveYes = Receive(1)

	// ReceiveNo is the 'no' Receive.
	ReceiveNo = Receive(2)
)

// String returns the string value of the Receive.
func (r Receive) String() string {
	var enumVal string

	switch r {
	case ReceiveYes:
		enumVal = "yes"

	case ReceiveNo:
		enumVal = "no"
	}

	return enumVal
}

// MarshalText marshals Receive into text.
func (r Receive) MarshalText() ([]byte, error) {
	return []byte(r.String()), nil
}

// UnmarshalText unmarshals Receive from text.
func (r *Receive) UnmarshalText(text []byte) error {
	switch string(text) {
	case "yes":
		*r = ReceiveYes

	case "no":
		*r = ReceiveNo

	default:
		return errors.New("invalid Receive")
	}

	return nil
}

// Value satisfies the sql/driver.Valuer interface for Receive.
func (r Receive) Value() (driver.Value, error) {
	return r.String(), nil
}

// Scan satisfies the database/sql.Scanner interface for Receive.
func (r *Receive) Scan(src interface{}) error {
	buf, ok := src.([]byte)
	if !ok {
		return errors.New("invalid Receive")
	}

	return r.UnmarshalText(buf)
}
