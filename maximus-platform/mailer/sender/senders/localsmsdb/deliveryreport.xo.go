// Package local_sms_db contains the types for schema 'sms'.
package localsmsdb

// Code generated by xo. DO NOT EDIT.

import (
	"database/sql/driver"
	"errors"
)

// Deliveryreport is the 'DeliveryReport' enum type from schema 'sms'.
type Deliveryreport uint16

const (
	// DeliveryreportDefault is the 'default' Deliveryreport.
	DeliveryreportDefault = Deliveryreport(1)

	// DeliveryreportYes is the 'yes' Deliveryreport.
	DeliveryreportYes = Deliveryreport(2)

	// DeliveryreportNo is the 'no' Deliveryreport.
	DeliveryreportNo = Deliveryreport(3)
)

// String returns the string value of the Deliveryreport.
func (d Deliveryreport) String() string {
	var enumVal string

	switch d {
	case DeliveryreportDefault:
		enumVal = "default"

	case DeliveryreportYes:
		enumVal = "yes"

	case DeliveryreportNo:
		enumVal = "no"
	}

	return enumVal
}

// MarshalText marshals Deliveryreport into text.
func (d Deliveryreport) MarshalText() ([]byte, error) {
	return []byte(d.String()), nil
}

// UnmarshalText unmarshals Deliveryreport from text.
func (d *Deliveryreport) UnmarshalText(text []byte) error {
	switch string(text) {
	case "default":
		*d = DeliveryreportDefault

	case "yes":
		*d = DeliveryreportYes

	case "no":
		*d = DeliveryreportNo

	default:
		return errors.New("invalid Deliveryreport")
	}

	return nil
}

// Value satisfies the sql/driver.Valuer interface for Deliveryreport.
func (d Deliveryreport) Value() (driver.Value, error) {
	return d.String(), nil
}

// Scan satisfies the database/sql.Scanner interface for Deliveryreport.
func (d *Deliveryreport) Scan(src interface{}) error {
	buf, ok := src.([]byte)
	if !ok {
		return errors.New("invalid Deliveryreport")
	}

	return d.UnmarshalText(buf)
}
