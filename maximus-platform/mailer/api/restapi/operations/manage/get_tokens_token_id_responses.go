// Code generated by go-swagger; DO NOT EDIT.

package manage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// GetTokensTokenIDOKCode is the HTTP code returned for type GetTokensTokenIDOK
const GetTokensTokenIDOKCode int = 200

/*GetTokensTokenIDOK Коллекция токенов

swagger:response getTokensTokenIdOK
*/
type GetTokensTokenIDOK struct {

	/*
	  In: Body
	*/
	Payload *GetTokensTokenIDOKBody `json:"body,omitempty"`
}

// NewGetTokensTokenIDOK creates GetTokensTokenIDOK with default headers values
func NewGetTokensTokenIDOK() *GetTokensTokenIDOK {

	return &GetTokensTokenIDOK{}
}

// WithPayload adds the payload to the get tokens token Id o k response
func (o *GetTokensTokenIDOK) WithPayload(payload *GetTokensTokenIDOKBody) *GetTokensTokenIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get tokens token Id o k response
func (o *GetTokensTokenIDOK) SetPayload(payload *GetTokensTokenIDOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTokensTokenIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetTokensTokenIDForbiddenCode is the HTTP code returned for type GetTokensTokenIDForbidden
const GetTokensTokenIDForbiddenCode int = 403

/*GetTokensTokenIDForbidden Forbidden

swagger:response getTokensTokenIdForbidden
*/
type GetTokensTokenIDForbidden struct {

	/*
	  In: Body
	*/
	Payload *GetTokensTokenIDForbiddenBody `json:"body,omitempty"`
}

// NewGetTokensTokenIDForbidden creates GetTokensTokenIDForbidden with default headers values
func NewGetTokensTokenIDForbidden() *GetTokensTokenIDForbidden {

	return &GetTokensTokenIDForbidden{}
}

// WithPayload adds the payload to the get tokens token Id forbidden response
func (o *GetTokensTokenIDForbidden) WithPayload(payload *GetTokensTokenIDForbiddenBody) *GetTokensTokenIDForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get tokens token Id forbidden response
func (o *GetTokensTokenIDForbidden) SetPayload(payload *GetTokensTokenIDForbiddenBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTokensTokenIDForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetTokensTokenIDNotFoundCode is the HTTP code returned for type GetTokensTokenIDNotFound
const GetTokensTokenIDNotFoundCode int = 404

/*GetTokensTokenIDNotFound Not found

swagger:response getTokensTokenIdNotFound
*/
type GetTokensTokenIDNotFound struct {

	/*
	  In: Body
	*/
	Payload *GetTokensTokenIDNotFoundBody `json:"body,omitempty"`
}

// NewGetTokensTokenIDNotFound creates GetTokensTokenIDNotFound with default headers values
func NewGetTokensTokenIDNotFound() *GetTokensTokenIDNotFound {

	return &GetTokensTokenIDNotFound{}
}

// WithPayload adds the payload to the get tokens token Id not found response
func (o *GetTokensTokenIDNotFound) WithPayload(payload *GetTokensTokenIDNotFoundBody) *GetTokensTokenIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get tokens token Id not found response
func (o *GetTokensTokenIDNotFound) SetPayload(payload *GetTokensTokenIDNotFoundBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTokensTokenIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetTokensTokenIDMethodNotAllowedCode is the HTTP code returned for type GetTokensTokenIDMethodNotAllowed
const GetTokensTokenIDMethodNotAllowedCode int = 405

/*GetTokensTokenIDMethodNotAllowed Invalid Method

swagger:response getTokensTokenIdMethodNotAllowed
*/
type GetTokensTokenIDMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *GetTokensTokenIDMethodNotAllowedBody `json:"body,omitempty"`
}

// NewGetTokensTokenIDMethodNotAllowed creates GetTokensTokenIDMethodNotAllowed with default headers values
func NewGetTokensTokenIDMethodNotAllowed() *GetTokensTokenIDMethodNotAllowed {

	return &GetTokensTokenIDMethodNotAllowed{}
}

// WithPayload adds the payload to the get tokens token Id method not allowed response
func (o *GetTokensTokenIDMethodNotAllowed) WithPayload(payload *GetTokensTokenIDMethodNotAllowedBody) *GetTokensTokenIDMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get tokens token Id method not allowed response
func (o *GetTokensTokenIDMethodNotAllowed) SetPayload(payload *GetTokensTokenIDMethodNotAllowedBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTokensTokenIDMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
