// Code generated by go-swagger; DO NOT EDIT.

package service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// GetStatusOKCode is the HTTP code returned for type GetStatusOK
const GetStatusOKCode int = 200

/*GetStatusOK Успех

swagger:response getStatusOK
*/
type GetStatusOK struct {

	/*
	  In: Body
	*/
	Payload *GetStatusOKBody `json:"body,omitempty"`
}

// NewGetStatusOK creates GetStatusOK with default headers values
func NewGetStatusOK() *GetStatusOK {

	return &GetStatusOK{}
}

// WithPayload adds the payload to the get status o k response
func (o *GetStatusOK) WithPayload(payload *GetStatusOKBody) *GetStatusOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get status o k response
func (o *GetStatusOK) SetPayload(payload *GetStatusOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetStatusOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetStatusInternalServerErrorCode is the HTTP code returned for type GetStatusInternalServerError
const GetStatusInternalServerErrorCode int = 500

/*GetStatusInternalServerError Ошибка

swagger:response getStatusInternalServerError
*/
type GetStatusInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *GetStatusInternalServerErrorBody `json:"body,omitempty"`
}

// NewGetStatusInternalServerError creates GetStatusInternalServerError with default headers values
func NewGetStatusInternalServerError() *GetStatusInternalServerError {

	return &GetStatusInternalServerError{}
}

// WithPayload adds the payload to the get status internal server error response
func (o *GetStatusInternalServerError) WithPayload(payload *GetStatusInternalServerErrorBody) *GetStatusInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get status internal server error response
func (o *GetStatusInternalServerError) SetPayload(payload *GetStatusInternalServerErrorBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetStatusInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
