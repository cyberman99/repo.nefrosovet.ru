// Code generated by go-swagger; DO NOT EDIT.

package channels

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	errors "github.com/go-openapi/errors"
	middleware "github.com/go-openapi/runtime/middleware"
	strfmt "github.com/go-openapi/strfmt"
	swag "github.com/go-openapi/swag"
	validate "github.com/go-openapi/validate"

	models "repo.nefrosovet.ru/maximus-platform/mailer/api/models"
)

// DeleteChannelsChannelIDHandlerFunc turns a function with the right signature into a delete channels channel ID handler
type DeleteChannelsChannelIDHandlerFunc func(DeleteChannelsChannelIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DeleteChannelsChannelIDHandlerFunc) Handle(params DeleteChannelsChannelIDParams) middleware.Responder {
	return fn(params)
}

// DeleteChannelsChannelIDHandler interface for that can handle valid delete channels channel ID params
type DeleteChannelsChannelIDHandler interface {
	Handle(DeleteChannelsChannelIDParams) middleware.Responder
}

// NewDeleteChannelsChannelID creates a new http.Handler for the delete channels channel ID operation
func NewDeleteChannelsChannelID(ctx *middleware.Context, handler DeleteChannelsChannelIDHandler) *DeleteChannelsChannelID {
	return &DeleteChannelsChannelID{Context: ctx, Handler: handler}
}

/*DeleteChannelsChannelID swagger:route DELETE /channels/{channelID} Channels deleteChannelsChannelId

Удаление канала

*/
type DeleteChannelsChannelID struct {
	Context *middleware.Context
	Handler DeleteChannelsChannelIDHandler
}

func (o *DeleteChannelsChannelID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewDeleteChannelsChannelIDParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

// DeleteChannelsChannelIDForbiddenBody delete channels channel ID forbidden body
// swagger:model DeleteChannelsChannelIDForbiddenBody
type DeleteChannelsChannelIDForbiddenBody struct {
	models.Error403Data
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (o *DeleteChannelsChannelIDForbiddenBody) UnmarshalJSON(raw []byte) error {
	// DeleteChannelsChannelIDForbiddenBodyAO0
	var deleteChannelsChannelIDForbiddenBodyAO0 models.Error403Data
	if err := swag.ReadJSON(raw, &deleteChannelsChannelIDForbiddenBodyAO0); err != nil {
		return err
	}
	o.Error403Data = deleteChannelsChannelIDForbiddenBodyAO0

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (o DeleteChannelsChannelIDForbiddenBody) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 1)

	deleteChannelsChannelIDForbiddenBodyAO0, err := swag.WriteJSON(o.Error403Data)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, deleteChannelsChannelIDForbiddenBodyAO0)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this delete channels channel ID forbidden body
func (o *DeleteChannelsChannelIDForbiddenBody) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with models.Error403Data
	if err := o.Error403Data.Validate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (o *DeleteChannelsChannelIDForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteChannelsChannelIDForbiddenBody) UnmarshalBinary(b []byte) error {
	var res DeleteChannelsChannelIDForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// DeleteChannelsChannelIDMethodNotAllowedBody delete channels channel ID method not allowed body
// swagger:model DeleteChannelsChannelIDMethodNotAllowedBody
type DeleteChannelsChannelIDMethodNotAllowedBody struct {
	models.Error405Data
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (o *DeleteChannelsChannelIDMethodNotAllowedBody) UnmarshalJSON(raw []byte) error {
	// DeleteChannelsChannelIDMethodNotAllowedBodyAO0
	var deleteChannelsChannelIDMethodNotAllowedBodyAO0 models.Error405Data
	if err := swag.ReadJSON(raw, &deleteChannelsChannelIDMethodNotAllowedBodyAO0); err != nil {
		return err
	}
	o.Error405Data = deleteChannelsChannelIDMethodNotAllowedBodyAO0

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (o DeleteChannelsChannelIDMethodNotAllowedBody) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 1)

	deleteChannelsChannelIDMethodNotAllowedBodyAO0, err := swag.WriteJSON(o.Error405Data)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, deleteChannelsChannelIDMethodNotAllowedBodyAO0)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this delete channels channel ID method not allowed body
func (o *DeleteChannelsChannelIDMethodNotAllowedBody) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with models.Error405Data
	if err := o.Error405Data.Validate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (o *DeleteChannelsChannelIDMethodNotAllowedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteChannelsChannelIDMethodNotAllowedBody) UnmarshalBinary(b []byte) error {
	var res DeleteChannelsChannelIDMethodNotAllowedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// DeleteChannelsChannelIDNotFoundBody delete channels channel ID not found body
// swagger:model DeleteChannelsChannelIDNotFoundBody
type DeleteChannelsChannelIDNotFoundBody struct {
	models.Error404Data
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (o *DeleteChannelsChannelIDNotFoundBody) UnmarshalJSON(raw []byte) error {
	// DeleteChannelsChannelIDNotFoundBodyAO0
	var deleteChannelsChannelIDNotFoundBodyAO0 models.Error404Data
	if err := swag.ReadJSON(raw, &deleteChannelsChannelIDNotFoundBodyAO0); err != nil {
		return err
	}
	o.Error404Data = deleteChannelsChannelIDNotFoundBodyAO0

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (o DeleteChannelsChannelIDNotFoundBody) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 1)

	deleteChannelsChannelIDNotFoundBodyAO0, err := swag.WriteJSON(o.Error404Data)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, deleteChannelsChannelIDNotFoundBodyAO0)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this delete channels channel ID not found body
func (o *DeleteChannelsChannelIDNotFoundBody) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with models.Error404Data
	if err := o.Error404Data.Validate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (o *DeleteChannelsChannelIDNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteChannelsChannelIDNotFoundBody) UnmarshalBinary(b []byte) error {
	var res DeleteChannelsChannelIDNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// DeleteChannelsChannelIDOKBody delete channels channel ID o k body
// swagger:model DeleteChannelsChannelIDOKBody
type DeleteChannelsChannelIDOKBody struct {
	models.SuccessData

	// data
	// Required: true
	Data []interface{} `json:"data"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (o *DeleteChannelsChannelIDOKBody) UnmarshalJSON(raw []byte) error {
	// DeleteChannelsChannelIDOKBodyAO0
	var deleteChannelsChannelIDOKBodyAO0 models.SuccessData
	if err := swag.ReadJSON(raw, &deleteChannelsChannelIDOKBodyAO0); err != nil {
		return err
	}
	o.SuccessData = deleteChannelsChannelIDOKBodyAO0

	// DeleteChannelsChannelIDOKBodyAO1
	var dataDeleteChannelsChannelIDOKBodyAO1 struct {
		Data []interface{} `json:"data"`
	}
	if err := swag.ReadJSON(raw, &dataDeleteChannelsChannelIDOKBodyAO1); err != nil {
		return err
	}

	o.Data = dataDeleteChannelsChannelIDOKBodyAO1.Data

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (o DeleteChannelsChannelIDOKBody) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 2)

	deleteChannelsChannelIDOKBodyAO0, err := swag.WriteJSON(o.SuccessData)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, deleteChannelsChannelIDOKBodyAO0)

	var dataDeleteChannelsChannelIDOKBodyAO1 struct {
		Data []interface{} `json:"data"`
	}

	dataDeleteChannelsChannelIDOKBodyAO1.Data = o.Data

	jsonDataDeleteChannelsChannelIDOKBodyAO1, errDeleteChannelsChannelIDOKBodyAO1 := swag.WriteJSON(dataDeleteChannelsChannelIDOKBodyAO1)
	if errDeleteChannelsChannelIDOKBodyAO1 != nil {
		return nil, errDeleteChannelsChannelIDOKBodyAO1
	}
	_parts = append(_parts, jsonDataDeleteChannelsChannelIDOKBodyAO1)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this delete channels channel ID o k body
func (o *DeleteChannelsChannelIDOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with models.SuccessData
	if err := o.SuccessData.Validate(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DeleteChannelsChannelIDOKBody) validateData(formats strfmt.Registry) error {

	if err := validate.Required("deleteChannelsChannelIdOK"+"."+"data", "body", o.Data); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *DeleteChannelsChannelIDOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteChannelsChannelIDOKBody) UnmarshalBinary(b []byte) error {
	var res DeleteChannelsChannelIDOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
