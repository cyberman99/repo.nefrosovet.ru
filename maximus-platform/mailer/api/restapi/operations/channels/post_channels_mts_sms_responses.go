// Code generated by go-swagger; DO NOT EDIT.

package channels

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// PostChannelsMtsSmsOKCode is the HTTP code returned for type PostChannelsMtsSmsOK
const PostChannelsMtsSmsOKCode int = 200

/*PostChannelsMtsSmsOK Коллекция каналов

swagger:response postChannelsMtsSmsOK
*/
type PostChannelsMtsSmsOK struct {

	/*
	  In: Body
	*/
	Payload *PostChannelsMtsSmsOKBody `json:"body,omitempty"`
}

// NewPostChannelsMtsSmsOK creates PostChannelsMtsSmsOK with default headers values
func NewPostChannelsMtsSmsOK() *PostChannelsMtsSmsOK {

	return &PostChannelsMtsSmsOK{}
}

// WithPayload adds the payload to the post channels mts sms o k response
func (o *PostChannelsMtsSmsOK) WithPayload(payload *PostChannelsMtsSmsOKBody) *PostChannelsMtsSmsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post channels mts sms o k response
func (o *PostChannelsMtsSmsOK) SetPayload(payload *PostChannelsMtsSmsOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostChannelsMtsSmsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostChannelsMtsSmsBadRequestCode is the HTTP code returned for type PostChannelsMtsSmsBadRequest
const PostChannelsMtsSmsBadRequestCode int = 400

/*PostChannelsMtsSmsBadRequest Validation error

swagger:response postChannelsMtsSmsBadRequest
*/
type PostChannelsMtsSmsBadRequest struct {

	/*
	  In: Body
	*/
	Payload *PostChannelsMtsSmsBadRequestBody `json:"body,omitempty"`
}

// NewPostChannelsMtsSmsBadRequest creates PostChannelsMtsSmsBadRequest with default headers values
func NewPostChannelsMtsSmsBadRequest() *PostChannelsMtsSmsBadRequest {

	return &PostChannelsMtsSmsBadRequest{}
}

// WithPayload adds the payload to the post channels mts sms bad request response
func (o *PostChannelsMtsSmsBadRequest) WithPayload(payload *PostChannelsMtsSmsBadRequestBody) *PostChannelsMtsSmsBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post channels mts sms bad request response
func (o *PostChannelsMtsSmsBadRequest) SetPayload(payload *PostChannelsMtsSmsBadRequestBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostChannelsMtsSmsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostChannelsMtsSmsForbiddenCode is the HTTP code returned for type PostChannelsMtsSmsForbidden
const PostChannelsMtsSmsForbiddenCode int = 403

/*PostChannelsMtsSmsForbidden Forbidden

swagger:response postChannelsMtsSmsForbidden
*/
type PostChannelsMtsSmsForbidden struct {

	/*
	  In: Body
	*/
	Payload *PostChannelsMtsSmsForbiddenBody `json:"body,omitempty"`
}

// NewPostChannelsMtsSmsForbidden creates PostChannelsMtsSmsForbidden with default headers values
func NewPostChannelsMtsSmsForbidden() *PostChannelsMtsSmsForbidden {

	return &PostChannelsMtsSmsForbidden{}
}

// WithPayload adds the payload to the post channels mts sms forbidden response
func (o *PostChannelsMtsSmsForbidden) WithPayload(payload *PostChannelsMtsSmsForbiddenBody) *PostChannelsMtsSmsForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post channels mts sms forbidden response
func (o *PostChannelsMtsSmsForbidden) SetPayload(payload *PostChannelsMtsSmsForbiddenBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostChannelsMtsSmsForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostChannelsMtsSmsMethodNotAllowedCode is the HTTP code returned for type PostChannelsMtsSmsMethodNotAllowed
const PostChannelsMtsSmsMethodNotAllowedCode int = 405

/*PostChannelsMtsSmsMethodNotAllowed Invalid Method

swagger:response postChannelsMtsSmsMethodNotAllowed
*/
type PostChannelsMtsSmsMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *PostChannelsMtsSmsMethodNotAllowedBody `json:"body,omitempty"`
}

// NewPostChannelsMtsSmsMethodNotAllowed creates PostChannelsMtsSmsMethodNotAllowed with default headers values
func NewPostChannelsMtsSmsMethodNotAllowed() *PostChannelsMtsSmsMethodNotAllowed {

	return &PostChannelsMtsSmsMethodNotAllowed{}
}

// WithPayload adds the payload to the post channels mts sms method not allowed response
func (o *PostChannelsMtsSmsMethodNotAllowed) WithPayload(payload *PostChannelsMtsSmsMethodNotAllowedBody) *PostChannelsMtsSmsMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post channels mts sms method not allowed response
func (o *PostChannelsMtsSmsMethodNotAllowed) SetPayload(payload *PostChannelsMtsSmsMethodNotAllowedBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostChannelsMtsSmsMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
