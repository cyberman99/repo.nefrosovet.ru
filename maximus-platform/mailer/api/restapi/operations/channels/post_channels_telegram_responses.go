// Code generated by go-swagger; DO NOT EDIT.

package channels

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// PostChannelsTelegramOKCode is the HTTP code returned for type PostChannelsTelegramOK
const PostChannelsTelegramOKCode int = 200

/*PostChannelsTelegramOK Коллекция каналов

swagger:response postChannelsTelegramOK
*/
type PostChannelsTelegramOK struct {

	/*
	  In: Body
	*/
	Payload *PostChannelsTelegramOKBody `json:"body,omitempty"`
}

// NewPostChannelsTelegramOK creates PostChannelsTelegramOK with default headers values
func NewPostChannelsTelegramOK() *PostChannelsTelegramOK {

	return &PostChannelsTelegramOK{}
}

// WithPayload adds the payload to the post channels telegram o k response
func (o *PostChannelsTelegramOK) WithPayload(payload *PostChannelsTelegramOKBody) *PostChannelsTelegramOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post channels telegram o k response
func (o *PostChannelsTelegramOK) SetPayload(payload *PostChannelsTelegramOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostChannelsTelegramOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostChannelsTelegramBadRequestCode is the HTTP code returned for type PostChannelsTelegramBadRequest
const PostChannelsTelegramBadRequestCode int = 400

/*PostChannelsTelegramBadRequest Validation error

swagger:response postChannelsTelegramBadRequest
*/
type PostChannelsTelegramBadRequest struct {

	/*
	  In: Body
	*/
	Payload *PostChannelsTelegramBadRequestBody `json:"body,omitempty"`
}

// NewPostChannelsTelegramBadRequest creates PostChannelsTelegramBadRequest with default headers values
func NewPostChannelsTelegramBadRequest() *PostChannelsTelegramBadRequest {

	return &PostChannelsTelegramBadRequest{}
}

// WithPayload adds the payload to the post channels telegram bad request response
func (o *PostChannelsTelegramBadRequest) WithPayload(payload *PostChannelsTelegramBadRequestBody) *PostChannelsTelegramBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post channels telegram bad request response
func (o *PostChannelsTelegramBadRequest) SetPayload(payload *PostChannelsTelegramBadRequestBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostChannelsTelegramBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostChannelsTelegramForbiddenCode is the HTTP code returned for type PostChannelsTelegramForbidden
const PostChannelsTelegramForbiddenCode int = 403

/*PostChannelsTelegramForbidden Forbidden

swagger:response postChannelsTelegramForbidden
*/
type PostChannelsTelegramForbidden struct {

	/*
	  In: Body
	*/
	Payload *PostChannelsTelegramForbiddenBody `json:"body,omitempty"`
}

// NewPostChannelsTelegramForbidden creates PostChannelsTelegramForbidden with default headers values
func NewPostChannelsTelegramForbidden() *PostChannelsTelegramForbidden {

	return &PostChannelsTelegramForbidden{}
}

// WithPayload adds the payload to the post channels telegram forbidden response
func (o *PostChannelsTelegramForbidden) WithPayload(payload *PostChannelsTelegramForbiddenBody) *PostChannelsTelegramForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post channels telegram forbidden response
func (o *PostChannelsTelegramForbidden) SetPayload(payload *PostChannelsTelegramForbiddenBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostChannelsTelegramForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostChannelsTelegramMethodNotAllowedCode is the HTTP code returned for type PostChannelsTelegramMethodNotAllowed
const PostChannelsTelegramMethodNotAllowedCode int = 405

/*PostChannelsTelegramMethodNotAllowed Invalid Method

swagger:response postChannelsTelegramMethodNotAllowed
*/
type PostChannelsTelegramMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *PostChannelsTelegramMethodNotAllowedBody `json:"body,omitempty"`
}

// NewPostChannelsTelegramMethodNotAllowed creates PostChannelsTelegramMethodNotAllowed with default headers values
func NewPostChannelsTelegramMethodNotAllowed() *PostChannelsTelegramMethodNotAllowed {

	return &PostChannelsTelegramMethodNotAllowed{}
}

// WithPayload adds the payload to the post channels telegram method not allowed response
func (o *PostChannelsTelegramMethodNotAllowed) WithPayload(payload *PostChannelsTelegramMethodNotAllowedBody) *PostChannelsTelegramMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post channels telegram method not allowed response
func (o *PostChannelsTelegramMethodNotAllowed) SetPayload(payload *PostChannelsTelegramMethodNotAllowedBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostChannelsTelegramMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
