// Code generated by go-swagger; DO NOT EDIT.

package channels

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// PutChannelsLocalSmsChannelIDOKCode is the HTTP code returned for type PutChannelsLocalSmsChannelIDOK
const PutChannelsLocalSmsChannelIDOKCode int = 200

/*PutChannelsLocalSmsChannelIDOK Коллекция каналов

swagger:response putChannelsLocalSmsChannelIdOK
*/
type PutChannelsLocalSmsChannelIDOK struct {

	/*
	  In: Body
	*/
	Payload *PutChannelsLocalSmsChannelIDOKBody `json:"body,omitempty"`
}

// NewPutChannelsLocalSmsChannelIDOK creates PutChannelsLocalSmsChannelIDOK with default headers values
func NewPutChannelsLocalSmsChannelIDOK() *PutChannelsLocalSmsChannelIDOK {

	return &PutChannelsLocalSmsChannelIDOK{}
}

// WithPayload adds the payload to the put channels local sms channel Id o k response
func (o *PutChannelsLocalSmsChannelIDOK) WithPayload(payload *PutChannelsLocalSmsChannelIDOKBody) *PutChannelsLocalSmsChannelIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put channels local sms channel Id o k response
func (o *PutChannelsLocalSmsChannelIDOK) SetPayload(payload *PutChannelsLocalSmsChannelIDOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutChannelsLocalSmsChannelIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutChannelsLocalSmsChannelIDBadRequestCode is the HTTP code returned for type PutChannelsLocalSmsChannelIDBadRequest
const PutChannelsLocalSmsChannelIDBadRequestCode int = 400

/*PutChannelsLocalSmsChannelIDBadRequest Validation error

swagger:response putChannelsLocalSmsChannelIdBadRequest
*/
type PutChannelsLocalSmsChannelIDBadRequest struct {

	/*
	  In: Body
	*/
	Payload *PutChannelsLocalSmsChannelIDBadRequestBody `json:"body,omitempty"`
}

// NewPutChannelsLocalSmsChannelIDBadRequest creates PutChannelsLocalSmsChannelIDBadRequest with default headers values
func NewPutChannelsLocalSmsChannelIDBadRequest() *PutChannelsLocalSmsChannelIDBadRequest {

	return &PutChannelsLocalSmsChannelIDBadRequest{}
}

// WithPayload adds the payload to the put channels local sms channel Id bad request response
func (o *PutChannelsLocalSmsChannelIDBadRequest) WithPayload(payload *PutChannelsLocalSmsChannelIDBadRequestBody) *PutChannelsLocalSmsChannelIDBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put channels local sms channel Id bad request response
func (o *PutChannelsLocalSmsChannelIDBadRequest) SetPayload(payload *PutChannelsLocalSmsChannelIDBadRequestBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutChannelsLocalSmsChannelIDBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutChannelsLocalSmsChannelIDForbiddenCode is the HTTP code returned for type PutChannelsLocalSmsChannelIDForbidden
const PutChannelsLocalSmsChannelIDForbiddenCode int = 403

/*PutChannelsLocalSmsChannelIDForbidden Forbidden

swagger:response putChannelsLocalSmsChannelIdForbidden
*/
type PutChannelsLocalSmsChannelIDForbidden struct {

	/*
	  In: Body
	*/
	Payload *PutChannelsLocalSmsChannelIDForbiddenBody `json:"body,omitempty"`
}

// NewPutChannelsLocalSmsChannelIDForbidden creates PutChannelsLocalSmsChannelIDForbidden with default headers values
func NewPutChannelsLocalSmsChannelIDForbidden() *PutChannelsLocalSmsChannelIDForbidden {

	return &PutChannelsLocalSmsChannelIDForbidden{}
}

// WithPayload adds the payload to the put channels local sms channel Id forbidden response
func (o *PutChannelsLocalSmsChannelIDForbidden) WithPayload(payload *PutChannelsLocalSmsChannelIDForbiddenBody) *PutChannelsLocalSmsChannelIDForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put channels local sms channel Id forbidden response
func (o *PutChannelsLocalSmsChannelIDForbidden) SetPayload(payload *PutChannelsLocalSmsChannelIDForbiddenBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutChannelsLocalSmsChannelIDForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutChannelsLocalSmsChannelIDNotFoundCode is the HTTP code returned for type PutChannelsLocalSmsChannelIDNotFound
const PutChannelsLocalSmsChannelIDNotFoundCode int = 404

/*PutChannelsLocalSmsChannelIDNotFound Not found

swagger:response putChannelsLocalSmsChannelIdNotFound
*/
type PutChannelsLocalSmsChannelIDNotFound struct {

	/*
	  In: Body
	*/
	Payload *PutChannelsLocalSmsChannelIDNotFoundBody `json:"body,omitempty"`
}

// NewPutChannelsLocalSmsChannelIDNotFound creates PutChannelsLocalSmsChannelIDNotFound with default headers values
func NewPutChannelsLocalSmsChannelIDNotFound() *PutChannelsLocalSmsChannelIDNotFound {

	return &PutChannelsLocalSmsChannelIDNotFound{}
}

// WithPayload adds the payload to the put channels local sms channel Id not found response
func (o *PutChannelsLocalSmsChannelIDNotFound) WithPayload(payload *PutChannelsLocalSmsChannelIDNotFoundBody) *PutChannelsLocalSmsChannelIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put channels local sms channel Id not found response
func (o *PutChannelsLocalSmsChannelIDNotFound) SetPayload(payload *PutChannelsLocalSmsChannelIDNotFoundBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutChannelsLocalSmsChannelIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutChannelsLocalSmsChannelIDMethodNotAllowedCode is the HTTP code returned for type PutChannelsLocalSmsChannelIDMethodNotAllowed
const PutChannelsLocalSmsChannelIDMethodNotAllowedCode int = 405

/*PutChannelsLocalSmsChannelIDMethodNotAllowed Invalid Method

swagger:response putChannelsLocalSmsChannelIdMethodNotAllowed
*/
type PutChannelsLocalSmsChannelIDMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *PutChannelsLocalSmsChannelIDMethodNotAllowedBody `json:"body,omitempty"`
}

// NewPutChannelsLocalSmsChannelIDMethodNotAllowed creates PutChannelsLocalSmsChannelIDMethodNotAllowed with default headers values
func NewPutChannelsLocalSmsChannelIDMethodNotAllowed() *PutChannelsLocalSmsChannelIDMethodNotAllowed {

	return &PutChannelsLocalSmsChannelIDMethodNotAllowed{}
}

// WithPayload adds the payload to the put channels local sms channel Id method not allowed response
func (o *PutChannelsLocalSmsChannelIDMethodNotAllowed) WithPayload(payload *PutChannelsLocalSmsChannelIDMethodNotAllowedBody) *PutChannelsLocalSmsChannelIDMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put channels local sms channel Id method not allowed response
func (o *PutChannelsLocalSmsChannelIDMethodNotAllowed) SetPayload(payload *PutChannelsLocalSmsChannelIDMethodNotAllowedBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutChannelsLocalSmsChannelIDMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
