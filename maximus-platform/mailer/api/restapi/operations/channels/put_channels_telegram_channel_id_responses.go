// Code generated by go-swagger; DO NOT EDIT.

package channels

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// PutChannelsTelegramChannelIDOKCode is the HTTP code returned for type PutChannelsTelegramChannelIDOK
const PutChannelsTelegramChannelIDOKCode int = 200

/*PutChannelsTelegramChannelIDOK Коллекция каналов

swagger:response putChannelsTelegramChannelIdOK
*/
type PutChannelsTelegramChannelIDOK struct {

	/*
	  In: Body
	*/
	Payload *PutChannelsTelegramChannelIDOKBody `json:"body,omitempty"`
}

// NewPutChannelsTelegramChannelIDOK creates PutChannelsTelegramChannelIDOK with default headers values
func NewPutChannelsTelegramChannelIDOK() *PutChannelsTelegramChannelIDOK {

	return &PutChannelsTelegramChannelIDOK{}
}

// WithPayload adds the payload to the put channels telegram channel Id o k response
func (o *PutChannelsTelegramChannelIDOK) WithPayload(payload *PutChannelsTelegramChannelIDOKBody) *PutChannelsTelegramChannelIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put channels telegram channel Id o k response
func (o *PutChannelsTelegramChannelIDOK) SetPayload(payload *PutChannelsTelegramChannelIDOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutChannelsTelegramChannelIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutChannelsTelegramChannelIDBadRequestCode is the HTTP code returned for type PutChannelsTelegramChannelIDBadRequest
const PutChannelsTelegramChannelIDBadRequestCode int = 400

/*PutChannelsTelegramChannelIDBadRequest Validation error

swagger:response putChannelsTelegramChannelIdBadRequest
*/
type PutChannelsTelegramChannelIDBadRequest struct {

	/*
	  In: Body
	*/
	Payload *PutChannelsTelegramChannelIDBadRequestBody `json:"body,omitempty"`
}

// NewPutChannelsTelegramChannelIDBadRequest creates PutChannelsTelegramChannelIDBadRequest with default headers values
func NewPutChannelsTelegramChannelIDBadRequest() *PutChannelsTelegramChannelIDBadRequest {

	return &PutChannelsTelegramChannelIDBadRequest{}
}

// WithPayload adds the payload to the put channels telegram channel Id bad request response
func (o *PutChannelsTelegramChannelIDBadRequest) WithPayload(payload *PutChannelsTelegramChannelIDBadRequestBody) *PutChannelsTelegramChannelIDBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put channels telegram channel Id bad request response
func (o *PutChannelsTelegramChannelIDBadRequest) SetPayload(payload *PutChannelsTelegramChannelIDBadRequestBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutChannelsTelegramChannelIDBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutChannelsTelegramChannelIDForbiddenCode is the HTTP code returned for type PutChannelsTelegramChannelIDForbidden
const PutChannelsTelegramChannelIDForbiddenCode int = 403

/*PutChannelsTelegramChannelIDForbidden Forbidden

swagger:response putChannelsTelegramChannelIdForbidden
*/
type PutChannelsTelegramChannelIDForbidden struct {

	/*
	  In: Body
	*/
	Payload *PutChannelsTelegramChannelIDForbiddenBody `json:"body,omitempty"`
}

// NewPutChannelsTelegramChannelIDForbidden creates PutChannelsTelegramChannelIDForbidden with default headers values
func NewPutChannelsTelegramChannelIDForbidden() *PutChannelsTelegramChannelIDForbidden {

	return &PutChannelsTelegramChannelIDForbidden{}
}

// WithPayload adds the payload to the put channels telegram channel Id forbidden response
func (o *PutChannelsTelegramChannelIDForbidden) WithPayload(payload *PutChannelsTelegramChannelIDForbiddenBody) *PutChannelsTelegramChannelIDForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put channels telegram channel Id forbidden response
func (o *PutChannelsTelegramChannelIDForbidden) SetPayload(payload *PutChannelsTelegramChannelIDForbiddenBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutChannelsTelegramChannelIDForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutChannelsTelegramChannelIDNotFoundCode is the HTTP code returned for type PutChannelsTelegramChannelIDNotFound
const PutChannelsTelegramChannelIDNotFoundCode int = 404

/*PutChannelsTelegramChannelIDNotFound Not found

swagger:response putChannelsTelegramChannelIdNotFound
*/
type PutChannelsTelegramChannelIDNotFound struct {

	/*
	  In: Body
	*/
	Payload *PutChannelsTelegramChannelIDNotFoundBody `json:"body,omitempty"`
}

// NewPutChannelsTelegramChannelIDNotFound creates PutChannelsTelegramChannelIDNotFound with default headers values
func NewPutChannelsTelegramChannelIDNotFound() *PutChannelsTelegramChannelIDNotFound {

	return &PutChannelsTelegramChannelIDNotFound{}
}

// WithPayload adds the payload to the put channels telegram channel Id not found response
func (o *PutChannelsTelegramChannelIDNotFound) WithPayload(payload *PutChannelsTelegramChannelIDNotFoundBody) *PutChannelsTelegramChannelIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put channels telegram channel Id not found response
func (o *PutChannelsTelegramChannelIDNotFound) SetPayload(payload *PutChannelsTelegramChannelIDNotFoundBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutChannelsTelegramChannelIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutChannelsTelegramChannelIDMethodNotAllowedCode is the HTTP code returned for type PutChannelsTelegramChannelIDMethodNotAllowed
const PutChannelsTelegramChannelIDMethodNotAllowedCode int = 405

/*PutChannelsTelegramChannelIDMethodNotAllowed Invalid Method

swagger:response putChannelsTelegramChannelIdMethodNotAllowed
*/
type PutChannelsTelegramChannelIDMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *PutChannelsTelegramChannelIDMethodNotAllowedBody `json:"body,omitempty"`
}

// NewPutChannelsTelegramChannelIDMethodNotAllowed creates PutChannelsTelegramChannelIDMethodNotAllowed with default headers values
func NewPutChannelsTelegramChannelIDMethodNotAllowed() *PutChannelsTelegramChannelIDMethodNotAllowed {

	return &PutChannelsTelegramChannelIDMethodNotAllowed{}
}

// WithPayload adds the payload to the put channels telegram channel Id method not allowed response
func (o *PutChannelsTelegramChannelIDMethodNotAllowed) WithPayload(payload *PutChannelsTelegramChannelIDMethodNotAllowedBody) *PutChannelsTelegramChannelIDMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put channels telegram channel Id method not allowed response
func (o *PutChannelsTelegramChannelIDMethodNotAllowed) SetPayload(payload *PutChannelsTelegramChannelIDMethodNotAllowedBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutChannelsTelegramChannelIDMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
