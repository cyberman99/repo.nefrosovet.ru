// Code generated by go-swagger; DO NOT EDIT.

package messages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// GetMessagesMessageIDOKCode is the HTTP code returned for type GetMessagesMessageIDOK
const GetMessagesMessageIDOKCode int = 200

/*GetMessagesMessageIDOK Коллекция сообщений

swagger:response getMessagesMessageIdOK
*/
type GetMessagesMessageIDOK struct {

	/*
	  In: Body
	*/
	Payload *GetMessagesMessageIDOKBody `json:"body,omitempty"`
}

// NewGetMessagesMessageIDOK creates GetMessagesMessageIDOK with default headers values
func NewGetMessagesMessageIDOK() *GetMessagesMessageIDOK {

	return &GetMessagesMessageIDOK{}
}

// WithPayload adds the payload to the get messages message Id o k response
func (o *GetMessagesMessageIDOK) WithPayload(payload *GetMessagesMessageIDOKBody) *GetMessagesMessageIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get messages message Id o k response
func (o *GetMessagesMessageIDOK) SetPayload(payload *GetMessagesMessageIDOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMessagesMessageIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetMessagesMessageIDForbiddenCode is the HTTP code returned for type GetMessagesMessageIDForbidden
const GetMessagesMessageIDForbiddenCode int = 403

/*GetMessagesMessageIDForbidden Forbidden

swagger:response getMessagesMessageIdForbidden
*/
type GetMessagesMessageIDForbidden struct {

	/*
	  In: Body
	*/
	Payload *GetMessagesMessageIDForbiddenBody `json:"body,omitempty"`
}

// NewGetMessagesMessageIDForbidden creates GetMessagesMessageIDForbidden with default headers values
func NewGetMessagesMessageIDForbidden() *GetMessagesMessageIDForbidden {

	return &GetMessagesMessageIDForbidden{}
}

// WithPayload adds the payload to the get messages message Id forbidden response
func (o *GetMessagesMessageIDForbidden) WithPayload(payload *GetMessagesMessageIDForbiddenBody) *GetMessagesMessageIDForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get messages message Id forbidden response
func (o *GetMessagesMessageIDForbidden) SetPayload(payload *GetMessagesMessageIDForbiddenBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMessagesMessageIDForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetMessagesMessageIDNotFoundCode is the HTTP code returned for type GetMessagesMessageIDNotFound
const GetMessagesMessageIDNotFoundCode int = 404

/*GetMessagesMessageIDNotFound Not found

swagger:response getMessagesMessageIdNotFound
*/
type GetMessagesMessageIDNotFound struct {

	/*
	  In: Body
	*/
	Payload *GetMessagesMessageIDNotFoundBody `json:"body,omitempty"`
}

// NewGetMessagesMessageIDNotFound creates GetMessagesMessageIDNotFound with default headers values
func NewGetMessagesMessageIDNotFound() *GetMessagesMessageIDNotFound {

	return &GetMessagesMessageIDNotFound{}
}

// WithPayload adds the payload to the get messages message Id not found response
func (o *GetMessagesMessageIDNotFound) WithPayload(payload *GetMessagesMessageIDNotFoundBody) *GetMessagesMessageIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get messages message Id not found response
func (o *GetMessagesMessageIDNotFound) SetPayload(payload *GetMessagesMessageIDNotFoundBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMessagesMessageIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetMessagesMessageIDMethodNotAllowedCode is the HTTP code returned for type GetMessagesMessageIDMethodNotAllowed
const GetMessagesMessageIDMethodNotAllowedCode int = 405

/*GetMessagesMessageIDMethodNotAllowed Invalid Method

swagger:response getMessagesMessageIdMethodNotAllowed
*/
type GetMessagesMessageIDMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *GetMessagesMessageIDMethodNotAllowedBody `json:"body,omitempty"`
}

// NewGetMessagesMessageIDMethodNotAllowed creates GetMessagesMessageIDMethodNotAllowed with default headers values
func NewGetMessagesMessageIDMethodNotAllowed() *GetMessagesMessageIDMethodNotAllowed {

	return &GetMessagesMessageIDMethodNotAllowed{}
}

// WithPayload adds the payload to the get messages message Id method not allowed response
func (o *GetMessagesMessageIDMethodNotAllowed) WithPayload(payload *GetMessagesMessageIDMethodNotAllowedBody) *GetMessagesMessageIDMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get messages message Id method not allowed response
func (o *GetMessagesMessageIDMethodNotAllowed) SetPayload(payload *GetMessagesMessageIDMethodNotAllowedBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMessagesMessageIDMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
