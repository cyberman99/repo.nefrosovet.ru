// Code generated by go-swagger; DO NOT EDIT.

package messages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// GetMessagesOKCode is the HTTP code returned for type GetMessagesOK
const GetMessagesOKCode int = 200

/*GetMessagesOK Коллекция сообщений

swagger:response getMessagesOK
*/
type GetMessagesOK struct {

	/*
	  In: Body
	*/
	Payload *GetMessagesOKBody `json:"body,omitempty"`
}

// NewGetMessagesOK creates GetMessagesOK with default headers values
func NewGetMessagesOK() *GetMessagesOK {

	return &GetMessagesOK{}
}

// WithPayload adds the payload to the get messages o k response
func (o *GetMessagesOK) WithPayload(payload *GetMessagesOKBody) *GetMessagesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get messages o k response
func (o *GetMessagesOK) SetPayload(payload *GetMessagesOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMessagesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetMessagesForbiddenCode is the HTTP code returned for type GetMessagesForbidden
const GetMessagesForbiddenCode int = 403

/*GetMessagesForbidden Forbidden

swagger:response getMessagesForbidden
*/
type GetMessagesForbidden struct {

	/*
	  In: Body
	*/
	Payload *GetMessagesForbiddenBody `json:"body,omitempty"`
}

// NewGetMessagesForbidden creates GetMessagesForbidden with default headers values
func NewGetMessagesForbidden() *GetMessagesForbidden {

	return &GetMessagesForbidden{}
}

// WithPayload adds the payload to the get messages forbidden response
func (o *GetMessagesForbidden) WithPayload(payload *GetMessagesForbiddenBody) *GetMessagesForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get messages forbidden response
func (o *GetMessagesForbidden) SetPayload(payload *GetMessagesForbiddenBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMessagesForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetMessagesMethodNotAllowedCode is the HTTP code returned for type GetMessagesMethodNotAllowed
const GetMessagesMethodNotAllowedCode int = 405

/*GetMessagesMethodNotAllowed Invalid Method

swagger:response getMessagesMethodNotAllowed
*/
type GetMessagesMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *GetMessagesMethodNotAllowedBody `json:"body,omitempty"`
}

// NewGetMessagesMethodNotAllowed creates GetMessagesMethodNotAllowed with default headers values
func NewGetMessagesMethodNotAllowed() *GetMessagesMethodNotAllowed {

	return &GetMessagesMethodNotAllowed{}
}

// WithPayload adds the payload to the get messages method not allowed response
func (o *GetMessagesMethodNotAllowed) WithPayload(payload *GetMessagesMethodNotAllowedBody) *GetMessagesMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get messages method not allowed response
func (o *GetMessagesMethodNotAllowed) SetPayload(payload *GetMessagesMethodNotAllowedBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMessagesMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
