// Code generated by go-swagger; DO NOT EDIT.

package viber

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "repo.nefrosovet.ru/maximus-platform/mailer/bot_proxy/models"
)

// PostWebhooksViberReader is a Reader for the PostWebhooksViber structure.
type PostWebhooksViberReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostWebhooksViberReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPostWebhooksViberOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPostWebhooksViberBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPostWebhooksViberNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewPostWebhooksViberMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostWebhooksViberOK creates a PostWebhooksViberOK with default headers values
func NewPostWebhooksViberOK() *PostWebhooksViberOK {
	return &PostWebhooksViberOK{}
}

/*PostWebhooksViberOK handles this case with default header values.

Коллекция каналов
*/
type PostWebhooksViberOK struct {
	Payload *models.PostWebhooksViberOKBody
}

func (o *PostWebhooksViberOK) Error() string {
	return fmt.Sprintf("[POST /webhooks/viber][%d] postWebhooksViberOK  %+v", 200, o.Payload)
}

func (o *PostWebhooksViberOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PostWebhooksViberOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostWebhooksViberBadRequest creates a PostWebhooksViberBadRequest with default headers values
func NewPostWebhooksViberBadRequest() *PostWebhooksViberBadRequest {
	return &PostWebhooksViberBadRequest{}
}

/*PostWebhooksViberBadRequest handles this case with default header values.

Validation error
*/
type PostWebhooksViberBadRequest struct {
	Payload *models.PostWebhooksViberBadRequestBody
}

func (o *PostWebhooksViberBadRequest) Error() string {
	return fmt.Sprintf("[POST /webhooks/viber][%d] postWebhooksViberBadRequest  %+v", 400, o.Payload)
}

func (o *PostWebhooksViberBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PostWebhooksViberBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostWebhooksViberNotFound creates a PostWebhooksViberNotFound with default headers values
func NewPostWebhooksViberNotFound() *PostWebhooksViberNotFound {
	return &PostWebhooksViberNotFound{}
}

/*PostWebhooksViberNotFound handles this case with default header values.

Not found
*/
type PostWebhooksViberNotFound struct {
	Payload *models.PostWebhooksViberNotFoundBody
}

func (o *PostWebhooksViberNotFound) Error() string {
	return fmt.Sprintf("[POST /webhooks/viber][%d] postWebhooksViberNotFound  %+v", 404, o.Payload)
}

func (o *PostWebhooksViberNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PostWebhooksViberNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostWebhooksViberMethodNotAllowed creates a PostWebhooksViberMethodNotAllowed with default headers values
func NewPostWebhooksViberMethodNotAllowed() *PostWebhooksViberMethodNotAllowed {
	return &PostWebhooksViberMethodNotAllowed{}
}

/*PostWebhooksViberMethodNotAllowed handles this case with default header values.

Invalid Method
*/
type PostWebhooksViberMethodNotAllowed struct {
	Payload *models.PostWebhooksViberMethodNotAllowedBody
}

func (o *PostWebhooksViberMethodNotAllowed) Error() string {
	return fmt.Sprintf("[POST /webhooks/viber][%d] postWebhooksViberMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *PostWebhooksViberMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PostWebhooksViberMethodNotAllowedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
