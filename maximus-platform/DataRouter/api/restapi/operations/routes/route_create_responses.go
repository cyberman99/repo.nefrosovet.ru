// Code generated by go-swagger; DO NOT EDIT.

package routes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// RouteCreateOKCode is the HTTP code returned for type RouteCreateOK
const RouteCreateOKCode int = 200

/*RouteCreateOK Коллекция маршрутов

swagger:response routeCreateOK
*/
type RouteCreateOK struct {

	/*
	  In: Body
	*/
	Payload *RouteCreateOKBody `json:"body,omitempty"`
}

// NewRouteCreateOK creates RouteCreateOK with default headers values
func NewRouteCreateOK() *RouteCreateOK {

	return &RouteCreateOK{}
}

// WithPayload adds the payload to the route create o k response
func (o *RouteCreateOK) WithPayload(payload *RouteCreateOKBody) *RouteCreateOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the route create o k response
func (o *RouteCreateOK) SetPayload(payload *RouteCreateOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RouteCreateOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RouteCreateBadRequestCode is the HTTP code returned for type RouteCreateBadRequest
const RouteCreateBadRequestCode int = 400

/*RouteCreateBadRequest Validation error

swagger:response routeCreateBadRequest
*/
type RouteCreateBadRequest struct {

	/*
	  In: Body
	*/
	Payload *RouteCreateBadRequestBody `json:"body,omitempty"`
}

// NewRouteCreateBadRequest creates RouteCreateBadRequest with default headers values
func NewRouteCreateBadRequest() *RouteCreateBadRequest {

	return &RouteCreateBadRequest{}
}

// WithPayload adds the payload to the route create bad request response
func (o *RouteCreateBadRequest) WithPayload(payload *RouteCreateBadRequestBody) *RouteCreateBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the route create bad request response
func (o *RouteCreateBadRequest) SetPayload(payload *RouteCreateBadRequestBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RouteCreateBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RouteCreateMethodNotAllowedCode is the HTTP code returned for type RouteCreateMethodNotAllowed
const RouteCreateMethodNotAllowedCode int = 405

/*RouteCreateMethodNotAllowed Invalid Method

swagger:response routeCreateMethodNotAllowed
*/
type RouteCreateMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *RouteCreateMethodNotAllowedBody `json:"body,omitempty"`
}

// NewRouteCreateMethodNotAllowed creates RouteCreateMethodNotAllowed with default headers values
func NewRouteCreateMethodNotAllowed() *RouteCreateMethodNotAllowed {

	return &RouteCreateMethodNotAllowed{}
}

// WithPayload adds the payload to the route create method not allowed response
func (o *RouteCreateMethodNotAllowed) WithPayload(payload *RouteCreateMethodNotAllowedBody) *RouteCreateMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the route create method not allowed response
func (o *RouteCreateMethodNotAllowed) SetPayload(payload *RouteCreateMethodNotAllowedBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RouteCreateMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RouteCreateInternalServerErrorCode is the HTTP code returned for type RouteCreateInternalServerError
const RouteCreateInternalServerErrorCode int = 500

/*RouteCreateInternalServerError Internal sersver error

swagger:response routeCreateInternalServerError
*/
type RouteCreateInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *RouteCreateInternalServerErrorBody `json:"body,omitempty"`
}

// NewRouteCreateInternalServerError creates RouteCreateInternalServerError with default headers values
func NewRouteCreateInternalServerError() *RouteCreateInternalServerError {

	return &RouteCreateInternalServerError{}
}

// WithPayload adds the payload to the route create internal server error response
func (o *RouteCreateInternalServerError) WithPayload(payload *RouteCreateInternalServerErrorBody) *RouteCreateInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the route create internal server error response
func (o *RouteCreateInternalServerError) SetPayload(payload *RouteCreateInternalServerErrorBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RouteCreateInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
