// Code generated by go-swagger; DO NOT EDIT.

package clients

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// ClientCreateOKCode is the HTTP code returned for type ClientCreateOK
const ClientCreateOKCode int = 200

/*ClientCreateOK Коллекция клиентов

swagger:response clientCreateOK
*/
type ClientCreateOK struct {

	/*
	  In: Body
	*/
	Payload *ClientCreateOKBody `json:"body,omitempty"`
}

// NewClientCreateOK creates ClientCreateOK with default headers values
func NewClientCreateOK() *ClientCreateOK {

	return &ClientCreateOK{}
}

// WithPayload adds the payload to the client create o k response
func (o *ClientCreateOK) WithPayload(payload *ClientCreateOKBody) *ClientCreateOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the client create o k response
func (o *ClientCreateOK) SetPayload(payload *ClientCreateOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ClientCreateOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ClientCreateBadRequestCode is the HTTP code returned for type ClientCreateBadRequest
const ClientCreateBadRequestCode int = 400

/*ClientCreateBadRequest Validation error

swagger:response clientCreateBadRequest
*/
type ClientCreateBadRequest struct {

	/*
	  In: Body
	*/
	Payload *ClientCreateBadRequestBody `json:"body,omitempty"`
}

// NewClientCreateBadRequest creates ClientCreateBadRequest with default headers values
func NewClientCreateBadRequest() *ClientCreateBadRequest {

	return &ClientCreateBadRequest{}
}

// WithPayload adds the payload to the client create bad request response
func (o *ClientCreateBadRequest) WithPayload(payload *ClientCreateBadRequestBody) *ClientCreateBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the client create bad request response
func (o *ClientCreateBadRequest) SetPayload(payload *ClientCreateBadRequestBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ClientCreateBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ClientCreateMethodNotAllowedCode is the HTTP code returned for type ClientCreateMethodNotAllowed
const ClientCreateMethodNotAllowedCode int = 405

/*ClientCreateMethodNotAllowed Invalid Method

swagger:response clientCreateMethodNotAllowed
*/
type ClientCreateMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *ClientCreateMethodNotAllowedBody `json:"body,omitempty"`
}

// NewClientCreateMethodNotAllowed creates ClientCreateMethodNotAllowed with default headers values
func NewClientCreateMethodNotAllowed() *ClientCreateMethodNotAllowed {

	return &ClientCreateMethodNotAllowed{}
}

// WithPayload adds the payload to the client create method not allowed response
func (o *ClientCreateMethodNotAllowed) WithPayload(payload *ClientCreateMethodNotAllowedBody) *ClientCreateMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the client create method not allowed response
func (o *ClientCreateMethodNotAllowed) SetPayload(payload *ClientCreateMethodNotAllowedBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ClientCreateMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ClientCreateInternalServerErrorCode is the HTTP code returned for type ClientCreateInternalServerError
const ClientCreateInternalServerErrorCode int = 500

/*ClientCreateInternalServerError Internal sersver error

swagger:response clientCreateInternalServerError
*/
type ClientCreateInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *ClientCreateInternalServerErrorBody `json:"body,omitempty"`
}

// NewClientCreateInternalServerError creates ClientCreateInternalServerError with default headers values
func NewClientCreateInternalServerError() *ClientCreateInternalServerError {

	return &ClientCreateInternalServerError{}
}

// WithPayload adds the payload to the client create internal server error response
func (o *ClientCreateInternalServerError) WithPayload(payload *ClientCreateInternalServerErrorBody) *ClientCreateInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the client create internal server error response
func (o *ClientCreateInternalServerError) SetPayload(payload *ClientCreateInternalServerErrorBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ClientCreateInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
