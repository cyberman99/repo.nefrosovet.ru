// Code generated by go-swagger; DO NOT EDIT.

package clients

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// ClientCollectionOKCode is the HTTP code returned for type ClientCollectionOK
const ClientCollectionOKCode int = 200

/*ClientCollectionOK Коллекция клиентов

swagger:response clientCollectionOK
*/
type ClientCollectionOK struct {

	/*
	  In: Body
	*/
	Payload *ClientCollectionOKBody `json:"body,omitempty"`
}

// NewClientCollectionOK creates ClientCollectionOK with default headers values
func NewClientCollectionOK() *ClientCollectionOK {

	return &ClientCollectionOK{}
}

// WithPayload adds the payload to the client collection o k response
func (o *ClientCollectionOK) WithPayload(payload *ClientCollectionOKBody) *ClientCollectionOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the client collection o k response
func (o *ClientCollectionOK) SetPayload(payload *ClientCollectionOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ClientCollectionOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ClientCollectionNotFoundCode is the HTTP code returned for type ClientCollectionNotFound
const ClientCollectionNotFoundCode int = 404

/*ClientCollectionNotFound Not found

swagger:response clientCollectionNotFound
*/
type ClientCollectionNotFound struct {

	/*
	  In: Body
	*/
	Payload *ClientCollectionNotFoundBody `json:"body,omitempty"`
}

// NewClientCollectionNotFound creates ClientCollectionNotFound with default headers values
func NewClientCollectionNotFound() *ClientCollectionNotFound {

	return &ClientCollectionNotFound{}
}

// WithPayload adds the payload to the client collection not found response
func (o *ClientCollectionNotFound) WithPayload(payload *ClientCollectionNotFoundBody) *ClientCollectionNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the client collection not found response
func (o *ClientCollectionNotFound) SetPayload(payload *ClientCollectionNotFoundBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ClientCollectionNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ClientCollectionMethodNotAllowedCode is the HTTP code returned for type ClientCollectionMethodNotAllowed
const ClientCollectionMethodNotAllowedCode int = 405

/*ClientCollectionMethodNotAllowed Invalid Method

swagger:response clientCollectionMethodNotAllowed
*/
type ClientCollectionMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *ClientCollectionMethodNotAllowedBody `json:"body,omitempty"`
}

// NewClientCollectionMethodNotAllowed creates ClientCollectionMethodNotAllowed with default headers values
func NewClientCollectionMethodNotAllowed() *ClientCollectionMethodNotAllowed {

	return &ClientCollectionMethodNotAllowed{}
}

// WithPayload adds the payload to the client collection method not allowed response
func (o *ClientCollectionMethodNotAllowed) WithPayload(payload *ClientCollectionMethodNotAllowedBody) *ClientCollectionMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the client collection method not allowed response
func (o *ClientCollectionMethodNotAllowed) SetPayload(payload *ClientCollectionMethodNotAllowedBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ClientCollectionMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ClientCollectionInternalServerErrorCode is the HTTP code returned for type ClientCollectionInternalServerError
const ClientCollectionInternalServerErrorCode int = 500

/*ClientCollectionInternalServerError Internal sersver error

swagger:response clientCollectionInternalServerError
*/
type ClientCollectionInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *ClientCollectionInternalServerErrorBody `json:"body,omitempty"`
}

// NewClientCollectionInternalServerError creates ClientCollectionInternalServerError with default headers values
func NewClientCollectionInternalServerError() *ClientCollectionInternalServerError {

	return &ClientCollectionInternalServerError{}
}

// WithPayload adds the payload to the client collection internal server error response
func (o *ClientCollectionInternalServerError) WithPayload(payload *ClientCollectionInternalServerErrorBody) *ClientCollectionInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the client collection internal server error response
func (o *ClientCollectionInternalServerError) SetPayload(payload *ClientCollectionInternalServerErrorBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ClientCollectionInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
