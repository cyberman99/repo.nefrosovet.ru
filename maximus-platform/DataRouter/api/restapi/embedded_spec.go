// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "#### RESTFUL DataRouter API\n",
    "title": "DataRouter API",
    "version": "1.1"
  },
  "host": "datarouter.maximus.lan",
  "basePath": "/",
  "paths": {
    "/clients": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Clients"
        ],
        "summary": "Коллекция клиентов",
        "operationId": "clientCollection",
        "parameters": [
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/filter.username"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/Client_response_200"
          },
          "404": {
            "$ref": "#/responses/Base_response_404"
          },
          "405": {
            "$ref": "#/responses/Base_response_405"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Clients"
        ],
        "summary": "Создание клиента",
        "operationId": "clientCreate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "ID": {
                      "description": "Идентификатор клиента",
                      "type": "string",
                      "format": "uuid",
                      "example": "db9564da-b3e8-458d-9fa5-b317eb395b99"
                    }
                  }
                },
                {
                  "$ref": "#/definitions/Client_object"
                },
                {
                  "type": "object",
                  "required": [
                    "username",
                    "password"
                  ],
                  "properties": {
                    "password": {
                      "description": "Пароль клиента",
                      "type": "string",
                      "minLength": 1,
                      "example": "xxxxxxx"
                    },
                    "ttl": {
                      "description": "Время жизни клиента в секундах.",
                      "type": "integer",
                      "example": 10
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/Client_response_200"
          },
          "400": {
            "$ref": "#/responses/Client_response_400"
          },
          "405": {
            "$ref": "#/responses/Base_response_405"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      }
    },
    "/clients/{clientID}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Clients"
        ],
        "summary": "Информация о клиенте",
        "operationId": "clientView",
        "responses": {
          "200": {
            "$ref": "#/responses/Client_response_200"
          },
          "404": {
            "$ref": "#/responses/Base_response_404"
          },
          "405": {
            "$ref": "#/responses/Base_response_405"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      },
      "delete": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Clients"
        ],
        "summary": "Удаление клиента",
        "operationId": "clientDelete",
        "responses": {
          "200": {
            "$ref": "#/responses/Base_response_200"
          },
          "404": {
            "$ref": "#/responses/Base_response_404"
          },
          "405": {
            "$ref": "#/responses/Base_response_405"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Clients"
        ],
        "summary": "Изменение клиента",
        "operationId": "clientPatch",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Client_object"
                },
                {
                  "type": "object",
                  "required": [
                    "username"
                  ],
                  "properties": {
                    "password": {
                      "description": "Пароль клиента",
                      "type": "string",
                      "minLength": 1,
                      "example": "xxxxxxxxxx"
                    },
                    "ttl": {
                      "description": "Время жизни клиента в секундах.",
                      "type": "integer",
                      "example": 10
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/Client_response_200"
          },
          "400": {
            "$ref": "#/responses/Client_response_400"
          },
          "404": {
            "$ref": "#/responses/Base_response_404"
          },
          "405": {
            "$ref": "#/responses/Base_response_405"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/clientID"
        }
      ]
    },
    "/clients/{clientID}/permissions": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Permissions"
        ],
        "summary": "Информация о правах клиента",
        "operationId": "clientPermissionView",
        "responses": {
          "200": {
            "$ref": "#/responses/Permission_response_200"
          },
          "404": {
            "$ref": "#/responses/Base_response_404"
          },
          "405": {
            "$ref": "#/responses/Base_response_405"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Permissions"
        ],
        "summary": "Изменение прав клиента",
        "operationId": "clientPermissionCreate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Permission_object"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/Permission_response_200"
          },
          "400": {
            "$ref": "#/responses/Permission_response_400"
          },
          "404": {
            "$ref": "#/responses/Base_response_404"
          },
          "405": {
            "$ref": "#/responses/Base_response_405"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/clientID"
        }
      ]
    },
    "/events": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Events"
        ],
        "summary": "Коллекция событий",
        "operationId": "eventCollection",
        "parameters": [
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/filter.routeID"
          },
          {
            "$ref": "#/parameters/filter.transactionID"
          },
          {
            "$ref": "#/parameters/filter.srcTopic"
          },
          {
            "$ref": "#/parameters/filter.dstTopic"
          },
          {
            "$ref": "#/parameters/filter.replyID"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/Event_response_200"
          },
          "404": {
            "$ref": "#/responses/Base_response_404"
          },
          "405": {
            "$ref": "#/responses/Base_response_405"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      }
    },
    "/events/{eventID}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Events"
        ],
        "summary": "Информация о событии",
        "operationId": "eventView",
        "responses": {
          "200": {
            "$ref": "#/responses/Event_response_200"
          },
          "404": {
            "$ref": "#/responses/Base_response_404"
          },
          "405": {
            "$ref": "#/responses/Base_response_405"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/eventID"
        }
      ]
    },
    "/replies": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Replies"
        ],
        "summary": "Коллекция шаблонов ответов",
        "operationId": "replyCollection",
        "parameters": [
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/Reply_response_200"
          },
          "404": {
            "$ref": "#/responses/Base_response_404"
          },
          "405": {
            "$ref": "#/responses/Base_response_405"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Replies"
        ],
        "summary": "Создание шаблона ответа",
        "operationId": "replyCreate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "required": [
                "username",
                "password"
              ],
              "allOf": [
                {
                  "$ref": "#/definitions/Reply_object"
                },
                {
                  "type": "object"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/Reply_response_200"
          },
          "400": {
            "$ref": "#/responses/Reply_response_400"
          },
          "405": {
            "$ref": "#/responses/Base_response_405"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      }
    },
    "/replies/{replyID}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Replies"
        ],
        "summary": "Информация о шаблоне ответа",
        "operationId": "replyView",
        "responses": {
          "200": {
            "$ref": "#/responses/Reply_response_200"
          },
          "404": {
            "$ref": "#/responses/Base_response_404"
          },
          "405": {
            "$ref": "#/responses/Base_response_405"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Replies"
        ],
        "summary": "Изменение шаблона ответа",
        "operationId": "replyPut",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Reply_object"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/Reply_response_200"
          },
          "400": {
            "$ref": "#/responses/Reply_response_400"
          },
          "404": {
            "$ref": "#/responses/Base_response_404"
          },
          "405": {
            "$ref": "#/responses/Base_response_405"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      },
      "delete": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Replies"
        ],
        "summary": "Удаление шаблона ответа",
        "operationId": "replyDelete",
        "responses": {
          "200": {
            "$ref": "#/responses/Base_response_200"
          },
          "404": {
            "$ref": "#/responses/Base_response_404"
          },
          "405": {
            "$ref": "#/responses/Base_response_405"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/replyID"
        }
      ]
    },
    "/routes": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Routes"
        ],
        "summary": "Коллекция маршрутов",
        "operationId": "routeCollection",
        "parameters": [
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/Route_response_200"
          },
          "404": {
            "$ref": "#/responses/Base_response_404"
          },
          "405": {
            "$ref": "#/responses/Base_response_405"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Routes"
        ],
        "summary": "Создание маршрута",
        "operationId": "routeCreate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Route_object"
                },
                {
                  "type": "object",
                  "required": [
                    "dst",
                    "src",
                    "replyID"
                  ]
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/Route_response_200"
          },
          "400": {
            "$ref": "#/responses/Route_response_400"
          },
          "405": {
            "$ref": "#/responses/Base_response_405"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      }
    },
    "/routes/{routeID}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Routes"
        ],
        "summary": "Информация о маршруте",
        "operationId": "routeView",
        "responses": {
          "200": {
            "$ref": "#/responses/Route_response_200"
          },
          "404": {
            "$ref": "#/responses/Base_response_404"
          },
          "405": {
            "$ref": "#/responses/Base_response_405"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Routes"
        ],
        "summary": "Изменение маршрута",
        "operationId": "routePut",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Route_object"
                },
                {
                  "type": "object"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/Route_response_200"
          },
          "400": {
            "$ref": "#/responses/Route_response_400"
          },
          "404": {
            "$ref": "#/responses/Base_response_404"
          },
          "405": {
            "$ref": "#/responses/Base_response_405"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      },
      "delete": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Routes"
        ],
        "summary": "Удаление маршрута",
        "operationId": "routeDelete",
        "responses": {
          "200": {
            "$ref": "#/responses/Base_response_200"
          },
          "404": {
            "$ref": "#/responses/Base_response_404"
          },
          "405": {
            "$ref": "#/responses/Base_response_405"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/routeID"
        }
      ]
    },
    "/status": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Status"
        ],
        "summary": "Статус инстанса",
        "operationId": "statusView",
        "responses": {
          "200": {
            "$ref": "#/responses/Base_response_200"
          },
          "405": {
            "$ref": "#/responses/Base_response_405"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      }
    }
  },
  "definitions": {
    "Base_data": {
      "description": "Возвращает статус ответа",
      "type": "object",
      "required": [
        "version"
      ],
      "properties": {
        "version": {
          "description": "Версия ответа сервиса",
          "type": "string",
          "example": "2.0.0"
        }
      }
    },
    "Client_400_data": {
      "allOf": [
        {
          "$ref": "#/definitions/Error_data"
        },
        {
          "type": "object",
          "title": "Client_Error_400_data",
          "properties": {
            "errors": {
              "type": "object",
              "properties": {
                "validation": {
                  "type": "object",
                  "properties": {
                    "password": {
                      "type": "string",
                      "example": "userpassword"
                    },
                    "username": {
                      "type": "string",
                      "example": "userlogin"
                    }
                  }
                }
              }
            },
            "message": {
              "type": "string",
              "example": "Validation error"
            }
          }
        }
      ]
    },
    "Client_object": {
      "title": "Client_object",
      "allOf": [
        {
          "type": "object",
          "properties": {
            "password": {
              "description": "Пароль клиента",
              "type": "string",
              "example": "xxxxxxx"
            },
            "username": {
              "description": "Логин клиента",
              "type": "string",
              "example": "testClient"
            }
          }
        }
      ]
    },
    "Error_400_data": {
      "allOf": [
        {
          "$ref": "#/definitions/Error_data"
        },
        {
          "type": "object",
          "title": "Error_Error_400_data",
          "required": [
            "message",
            "errors"
          ],
          "properties": {
            "errors": {
              "type": "object",
              "required": [
                "validation"
              ],
              "properties": {
                "validation": {
                  "type": "object"
                }
              }
            },
            "message": {
              "type": "string",
              "example": "Validation error"
            }
          }
        }
      ]
    },
    "Error_404_data": {
      "allOf": [
        {
          "$ref": "#/definitions/Error_data"
        },
        {
          "type": "object",
          "title": "Error_Error_404_data",
          "properties": {
            "errors": {},
            "message": {
              "description": "сообщение ответа",
              "type": "string",
              "example": "${ITEM} Not found"
            }
          }
        }
      ]
    },
    "Error_405_data": {
      "allOf": [
        {
          "$ref": "#/definitions/Error_data"
        },
        {
          "type": "object",
          "title": "Error_Error_405_data",
          "properties": {
            "errors": {},
            "message": {
              "description": "сообщение ответа",
              "type": "string",
              "example": "Method ${METHOD} not allowed"
            }
          }
        }
      ]
    },
    "Error_500_data": {
      "allOf": [
        {
          "$ref": "#/definitions/Error_data"
        },
        {
          "type": "object",
          "title": "Error_Error_500_data",
          "properties": {
            "errors": {},
            "message": {
              "description": "сообщение ответа",
              "type": "string",
              "example": "Internal server error"
            }
          }
        }
      ]
    },
    "Error_data": {
      "description": "Все плохо",
      "allOf": [
        {
          "$ref": "#/definitions/Base_data"
        },
        {
          "type": "object",
          "title": "Error_data",
          "properties": {
            "data": {
              "type": "array",
              "items": {}
            }
          }
        }
      ]
    },
    "Event_object": {
      "title": "Event_object",
      "required": [
        "replyID"
      ],
      "properties": {
        "date": {
          "description": "Дата-время события",
          "type": "string",
          "format": "date-time",
          "example": "2005-08-09T18:31:42+03:30"
        },
        "dstTopic": {
          "description": "Канал назначения",
          "type": "string",
          "example": "topicB"
        },
        "replyID": {
          "description": "Идентификатор ответа",
          "type": "string",
          "format": "uuid",
          "example": "p9gdv123-6543-25lo-tt45-54f7hhre5d32"
        },
        "routeID": {
          "description": "Идентификатор маршрута",
          "type": "string",
          "format": "uuid",
          "example": "09a475d5-473a-4c20-8feb-91b34dcd9b38"
        },
        "srcTopic": {
          "description": "Канал источника",
          "type": "string",
          "example": "topicA"
        },
        "transactionID": {
          "description": "Идентификатор транзакции",
          "type": "string",
          "format": "uuid",
          "example": "f4cda951-8785-40ce-bb47-62a7ccea2c03"
        }
      }
    },
    "Permission_object": {
      "title": "Permission_object",
      "properties": {
        "publish": {
          "type": "array",
          "items": {
            "description": "ACL рассылок",
            "type": "string",
            "example": "services/test/OUT"
          }
        },
        "subscribe": {
          "type": "array",
          "items": {
            "description": "ACL подписок",
            "type": "string",
            "example": "services/+/IN"
          }
        }
      }
    },
    "Reply_object": {
      "title": "Reply_object",
      "required": [
        "regex",
        "replace"
      ],
      "properties": {
        "description": {
          "description": "Описание шаблона",
          "type": "string",
          "example": "Переправлять ответы на /IN"
        },
        "regex": {
          "description": "Regex шаблона",
          "type": "string",
          "example": "services/(.*)/OUT"
        },
        "replace": {
          "description": "Regex шаблона",
          "type": "string",
          "example": "services/$1/IN"
        }
      }
    },
    "Route_object": {
      "title": "Route_object",
      "required": [
        "src",
        "dst"
      ],
      "properties": {
        "dst": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "topic",
              "qos"
            ],
            "properties": {
              "qos": {
                "description": "QOS",
                "type": "integer",
                "enum": [
                  0,
                  1,
                  2
                ],
                "example": 0
              },
              "topic": {
                "description": "Канал назначения",
                "type": "string",
                "example": "services/serviceB/OUT"
              }
            }
          }
        },
        "replyID": {
          "description": "Идентификатор шаблона ответа",
          "type": "string",
          "format": "uuid",
          "x-nullable": true,
          "example": "1801dc8f-4d57-4e86-afb8-951d009ca7d8"
        },
        "src": {
          "type": "object",
          "required": [
            "topic"
          ],
          "properties": {
            "payload": {
              "description": "jsonLogic style описание условия",
              "type": "object",
              "example": {
                "and": [
                  {
                    "==": [
                      {
                        "var": "param1"
                      },
                      "value"
                    ]
                  },
                  {
                    "\u003e": [
                      {
                        "var": "param2"
                      },
                      100
                    ]
                  }
                ]
              }
            },
            "topic": {
              "description": "jsonLogic style описание условия",
              "type": "object",
              "example": {
                "and": [
                  {
                    "==": [
                      {
                        "var": "name"
                      },
                      "services/index/OUT"
                    ]
                  },
                  {
                    "\u003e": [
                      {
                        "var": "qos"
                      },
                      0
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "Success_data": {
      "description": "Все хорошо",
      "allOf": [
        {
          "$ref": "#/definitions/Base_data"
        },
        {
          "type": "object",
          "title": "Success_data",
          "required": [
            "message",
            "errors"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {}
            },
            "message": {
              "description": "сообщение ответа",
              "type": "string",
              "example": "SUCCESS"
            }
          }
        }
      ]
    }
  },
  "parameters": {
    "clientID": {
      "type": "string",
      "format": "uuid",
      "description": "Идентификатор клиента",
      "name": "clientID",
      "in": "path",
      "required": true
    },
    "eventID": {
      "type": "string",
      "format": "uuid",
      "description": "Идентификатор события",
      "name": "eventID",
      "in": "path",
      "required": true
    },
    "filter.dstTopic": {
      "type": "string",
      "description": "Канал назначения",
      "name": "dstTopic",
      "in": "query"
    },
    "filter.replyID": {
      "type": "string",
      "format": "uuid",
      "description": "Флаг ответа",
      "name": "replyID",
      "in": "query"
    },
    "filter.routeID": {
      "type": "string",
      "format": "uuid",
      "description": "Идентификатор маршрута",
      "name": "routeID",
      "in": "query"
    },
    "filter.srcTopic": {
      "type": "string",
      "description": "Канал источника",
      "name": "srcTopic",
      "in": "query"
    },
    "filter.transactionID": {
      "type": "string",
      "format": "uuid",
      "description": "Идентификатор транзакции",
      "name": "transactionID",
      "in": "query"
    },
    "filter.username": {
      "type": "string",
      "description": "Логин клиента",
      "name": "username",
      "in": "query"
    },
    "limit": {
      "type": "integer",
      "description": "Лимит выдачи",
      "name": "limit",
      "in": "query"
    },
    "offset": {
      "type": "integer",
      "description": "Шаг выдачи",
      "name": "offset",
      "in": "query"
    },
    "replyID": {
      "type": "string",
      "format": "uuid",
      "description": "Идентификатор ответа",
      "name": "replyID",
      "in": "path",
      "required": true
    },
    "routeID": {
      "type": "string",
      "format": "uuid",
      "description": "Идентификатор маршрута",
      "name": "routeID",
      "in": "path",
      "required": true
    }
  },
  "responses": {
    "Base_response_200": {
      "description": "Success",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Success_data"
          },
          {
            "type": "object",
            "properties": {
              "data": {}
            }
          }
        ]
      }
    },
    "Base_response_404": {
      "description": "Not found",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Error_404_data"
          }
        ]
      }
    },
    "Base_response_405": {
      "description": "Invalid Method",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Error_405_data"
          }
        ]
      }
    },
    "Base_response_500": {
      "description": "Internal sersver error",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Error_500_data"
          }
        ]
      }
    },
    "Client_response_200": {
      "description": "Коллекция клиентов",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Success_data"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "ID": {
                          "description": "Идентификатор клиента",
                          "type": "string",
                          "format": "uuid",
                          "example": "db9564da-b3e8-458d-9fa5-b317eb395b99"
                        }
                      }
                    },
                    {
                      "$ref": "#/definitions/Client_object"
                    },
                    {
                      "type": "object",
                      "required": [
                        "ID",
                        "created",
                        "expired",
                        "username",
                        "ttl"
                      ],
                      "properties": {
                        "created": {
                          "description": "ISO Дата-время создания клиента",
                          "type": "string",
                          "format": "date-time",
                          "example": "2018-05-22T13:27:51+00:00"
                        },
                        "expired": {
                          "description": "ISO Дата-время протухания клиента",
                          "type": "string",
                          "format": "date-time",
                          "x-nullable": true,
                          "example": "2018-05-22T14:27:51+00:00"
                        },
                        "ttl": {
                          "description": "Время жизни клиента в секундах.",
                          "type": "integer",
                          "x-nullable": true,
                          "example": 10
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        ]
      }
    },
    "Client_response_400": {
      "description": "Validation error",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Error_400_data"
          },
          {
            "type": "object"
          },
          {
            "properties": {
              "errors": {
                "type": "object",
                "properties": {
                  "validation": {
                    "type": "object",
                    "properties": {
                      "ID": {
                        "type": "string",
                        "enum": [
                          "string",
                          "format",
                          "unique"
                        ],
                        "example": "string"
                      },
                      "password": {
                        "type": "string",
                        "enum": [
                          "string",
                          "required"
                        ],
                        "example": "string"
                      },
                      "ttl": {
                        "type": "string",
                        "enum": [
                          "int"
                        ],
                        "example": "int"
                      },
                      "username": {
                        "type": "string",
                        "enum": [
                          "string",
                          "required"
                        ],
                        "example": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      }
    },
    "Event_response_200": {
      "description": "Коллекция событий",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Success_data"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "ID": {
                          "description": "Идентификатор события",
                          "type": "string",
                          "example": "123"
                        }
                      }
                    },
                    {
                      "$ref": "#/definitions/Event_object"
                    }
                  ]
                }
              }
            }
          }
        ]
      }
    },
    "Permission_response_200": {
      "description": "Коллекция прав клиентов",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Success_data"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/definitions/Permission_object"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "created": {
                          "description": "Дата-время создания пермишна",
                          "type": "string",
                          "format": "date-time",
                          "example": "2019-03-08T08:06:54Z"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        ]
      }
    },
    "Permission_response_400": {
      "description": "Validation error",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Error_400_data"
          },
          {
            "type": "object"
          },
          {
            "properties": {
              "errors": {
                "type": "object",
                "properties": {
                  "validation": {
                    "type": "object",
                    "properties": {
                      "publish": {
                        "type": "string",
                        "enum": [
                          "array"
                        ],
                        "example": "array"
                      },
                      "subscribe": {
                        "type": "string",
                        "enum": [
                          "array"
                        ],
                        "example": "array"
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      }
    },
    "Reply_response_200": {
      "description": "Коллекция шаблонов ответов",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Success_data"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "ID": {
                          "description": "Идентификатор шаблона ответа",
                          "type": "string",
                          "example": "2f87bb78-3919-4ff2-9f62-afca839b0c2c"
                        },
                        "created": {
                          "description": "Дата-время создания реплая",
                          "type": "string",
                          "format": "date-time",
                          "example": "2019-03-08T08:06:54Z"
                        }
                      }
                    },
                    {
                      "$ref": "#/definitions/Reply_object"
                    }
                  ]
                }
              }
            }
          }
        ]
      }
    },
    "Reply_response_400": {
      "description": "Validation error",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Error_400_data"
          },
          {
            "type": "object"
          },
          {
            "properties": {
              "errors": {
                "type": "object",
                "properties": {
                  "validation": {
                    "type": "object",
                    "properties": {
                      "description": {
                        "type": "string",
                        "enum": [
                          "string"
                        ],
                        "example": "string"
                      },
                      "regex": {
                        "type": "string",
                        "enum": [
                          "string",
                          "required"
                        ],
                        "example": "string"
                      },
                      "replace": {
                        "type": "string",
                        "enum": [
                          "string",
                          "required"
                        ],
                        "example": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      }
    },
    "Route_response_200": {
      "description": "Коллекция маршрутов",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Success_data"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "ID": {
                          "description": "Идентификатор маршрута",
                          "type": "string",
                          "example": "2f87bb78-3919-4ff2-9f62-afca839b0c2c"
                        },
                        "created": {
                          "description": "Дата-время создания роута",
                          "type": "string",
                          "format": "date-time",
                          "example": "2019-03-08T08:06:54Z"
                        }
                      }
                    },
                    {
                      "$ref": "#/definitions/Route_object"
                    }
                  ]
                }
              }
            }
          }
        ]
      }
    },
    "Route_response_400": {
      "description": "Validation error",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Error_400_data"
          },
          {
            "type": "object"
          },
          {
            "properties": {
              "errors": {
                "type": "object",
                "properties": {
                  "validation": {
                    "type": "object",
                    "properties": {
                      "dst": {
                        "type": "string",
                        "enum": [
                          "object",
                          "required"
                        ],
                        "example": "object"
                      },
                      "dst.qos": {
                        "type": "string",
                        "enum": [
                          "int",
                          "required"
                        ],
                        "example": "int"
                      },
                      "dst.topic": {
                        "type": "string",
                        "enum": [
                          "object",
                          "required"
                        ],
                        "example": "object"
                      },
                      "replyID": {
                        "type": "string",
                        "enum": [
                          "string",
                          "not_found"
                        ],
                        "example": "string"
                      },
                      "src": {
                        "type": "string",
                        "enum": [
                          "object",
                          "required"
                        ],
                        "example": "object"
                      },
                      "src.payload": {
                        "type": "string",
                        "enum": [
                          "object"
                        ],
                        "example": "object"
                      },
                      "src.topic": {
                        "type": "string",
                        "enum": [
                          "object",
                          "required"
                        ],
                        "example": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "#### RESTFUL DataRouter API\n",
    "title": "DataRouter API",
    "version": "1.1"
  },
  "host": "datarouter.maximus.lan",
  "basePath": "/",
  "paths": {
    "/clients": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Clients"
        ],
        "summary": "Коллекция клиентов",
        "operationId": "clientCollection",
        "parameters": [
          {
            "type": "integer",
            "description": "Лимит выдачи",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Шаг выдачи",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Логин клиента",
            "name": "username",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Коллекция клиентов",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "ID": {
                                "description": "Идентификатор клиента",
                                "type": "string",
                                "format": "uuid",
                                "example": "db9564da-b3e8-458d-9fa5-b317eb395b99"
                              }
                            }
                          },
                          {
                            "$ref": "#/definitions/Client_object"
                          },
                          {
                            "type": "object",
                            "required": [
                              "ID",
                              "created",
                              "expired",
                              "username",
                              "ttl"
                            ],
                            "properties": {
                              "created": {
                                "description": "ISO Дата-время создания клиента",
                                "type": "string",
                                "format": "date-time",
                                "example": "2018-05-22T13:27:51+00:00"
                              },
                              "expired": {
                                "description": "ISO Дата-время протухания клиента",
                                "type": "string",
                                "format": "date-time",
                                "x-nullable": true,
                                "example": "2018-05-22T14:27:51+00:00"
                              },
                              "ttl": {
                                "description": "Время жизни клиента в секундах.",
                                "type": "integer",
                                "x-nullable": true,
                                "example": 10
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_404_data"
                }
              ]
            }
          },
          "405": {
            "description": "Invalid Method",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_405_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal sersver error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Clients"
        ],
        "summary": "Создание клиента",
        "operationId": "clientCreate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "ID": {
                      "description": "Идентификатор клиента",
                      "type": "string",
                      "format": "uuid",
                      "example": "db9564da-b3e8-458d-9fa5-b317eb395b99"
                    }
                  }
                },
                {
                  "$ref": "#/definitions/Client_object"
                },
                {
                  "type": "object",
                  "required": [
                    "username",
                    "password"
                  ],
                  "properties": {
                    "password": {
                      "description": "Пароль клиента",
                      "type": "string",
                      "minLength": 1,
                      "example": "xxxxxxx"
                    },
                    "ttl": {
                      "description": "Время жизни клиента в секундах.",
                      "type": "integer",
                      "example": 10
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Коллекция клиентов",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "ID": {
                                "description": "Идентификатор клиента",
                                "type": "string",
                                "format": "uuid",
                                "example": "db9564da-b3e8-458d-9fa5-b317eb395b99"
                              }
                            }
                          },
                          {
                            "$ref": "#/definitions/Client_object"
                          },
                          {
                            "type": "object",
                            "required": [
                              "ID",
                              "created",
                              "expired",
                              "username",
                              "ttl"
                            ],
                            "properties": {
                              "created": {
                                "description": "ISO Дата-время создания клиента",
                                "type": "string",
                                "format": "date-time",
                                "example": "2018-05-22T13:27:51+00:00"
                              },
                              "expired": {
                                "description": "ISO Дата-время протухания клиента",
                                "type": "string",
                                "format": "date-time",
                                "x-nullable": true,
                                "example": "2018-05-22T14:27:51+00:00"
                              },
                              "ttl": {
                                "description": "Время жизни клиента в секундах.",
                                "type": "integer",
                                "x-nullable": true,
                                "example": 10
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Validation error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_400_data"
                },
                {
                  "type": "object"
                },
                {
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {
                        "validation": {
                          "type": "object",
                          "properties": {
                            "ID": {
                              "type": "string",
                              "enum": [
                                "string",
                                "format",
                                "unique"
                              ],
                              "example": "string"
                            },
                            "password": {
                              "type": "string",
                              "enum": [
                                "string",
                                "required"
                              ],
                              "example": "string"
                            },
                            "ttl": {
                              "type": "string",
                              "enum": [
                                "int"
                              ],
                              "example": "int"
                            },
                            "username": {
                              "type": "string",
                              "enum": [
                                "string",
                                "required"
                              ],
                              "example": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "405": {
            "description": "Invalid Method",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_405_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal sersver error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      }
    },
    "/clients/{clientID}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Clients"
        ],
        "summary": "Информация о клиенте",
        "operationId": "clientView",
        "responses": {
          "200": {
            "description": "Коллекция клиентов",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "ID": {
                                "description": "Идентификатор клиента",
                                "type": "string",
                                "format": "uuid",
                                "example": "db9564da-b3e8-458d-9fa5-b317eb395b99"
                              }
                            }
                          },
                          {
                            "$ref": "#/definitions/Client_object"
                          },
                          {
                            "type": "object",
                            "required": [
                              "ID",
                              "created",
                              "expired",
                              "username",
                              "ttl"
                            ],
                            "properties": {
                              "created": {
                                "description": "ISO Дата-время создания клиента",
                                "type": "string",
                                "format": "date-time",
                                "example": "2018-05-22T13:27:51+00:00"
                              },
                              "expired": {
                                "description": "ISO Дата-время протухания клиента",
                                "type": "string",
                                "format": "date-time",
                                "x-nullable": true,
                                "example": "2018-05-22T14:27:51+00:00"
                              },
                              "ttl": {
                                "description": "Время жизни клиента в секундах.",
                                "type": "integer",
                                "x-nullable": true,
                                "example": 10
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_404_data"
                }
              ]
            }
          },
          "405": {
            "description": "Invalid Method",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_405_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal sersver error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      },
      "delete": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Clients"
        ],
        "summary": "Удаление клиента",
        "operationId": "clientDelete",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_404_data"
                }
              ]
            }
          },
          "405": {
            "description": "Invalid Method",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_405_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal sersver error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Clients"
        ],
        "summary": "Изменение клиента",
        "operationId": "clientPatch",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Client_object"
                },
                {
                  "type": "object",
                  "required": [
                    "username"
                  ],
                  "properties": {
                    "password": {
                      "description": "Пароль клиента",
                      "type": "string",
                      "minLength": 1,
                      "example": "xxxxxxxxxx"
                    },
                    "ttl": {
                      "description": "Время жизни клиента в секундах.",
                      "type": "integer",
                      "example": 10
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Коллекция клиентов",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "ID": {
                                "description": "Идентификатор клиента",
                                "type": "string",
                                "format": "uuid",
                                "example": "db9564da-b3e8-458d-9fa5-b317eb395b99"
                              }
                            }
                          },
                          {
                            "$ref": "#/definitions/Client_object"
                          },
                          {
                            "type": "object",
                            "required": [
                              "ID",
                              "created",
                              "expired",
                              "username",
                              "ttl"
                            ],
                            "properties": {
                              "created": {
                                "description": "ISO Дата-время создания клиента",
                                "type": "string",
                                "format": "date-time",
                                "example": "2018-05-22T13:27:51+00:00"
                              },
                              "expired": {
                                "description": "ISO Дата-время протухания клиента",
                                "type": "string",
                                "format": "date-time",
                                "x-nullable": true,
                                "example": "2018-05-22T14:27:51+00:00"
                              },
                              "ttl": {
                                "description": "Время жизни клиента в секундах.",
                                "type": "integer",
                                "x-nullable": true,
                                "example": 10
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Validation error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_400_data"
                },
                {
                  "type": "object"
                },
                {
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {
                        "validation": {
                          "type": "object",
                          "properties": {
                            "ID": {
                              "type": "string",
                              "enum": [
                                "string",
                                "format",
                                "unique"
                              ],
                              "example": "string"
                            },
                            "password": {
                              "type": "string",
                              "enum": [
                                "string",
                                "required"
                              ],
                              "example": "string"
                            },
                            "ttl": {
                              "type": "string",
                              "enum": [
                                "int"
                              ],
                              "example": "int"
                            },
                            "username": {
                              "type": "string",
                              "enum": [
                                "string",
                                "required"
                              ],
                              "example": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_404_data"
                }
              ]
            }
          },
          "405": {
            "description": "Invalid Method",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_405_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal sersver error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "format": "uuid",
          "description": "Идентификатор клиента",
          "name": "clientID",
          "in": "path",
          "required": true
        }
      ]
    },
    "/clients/{clientID}/permissions": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Permissions"
        ],
        "summary": "Информация о правах клиента",
        "operationId": "clientPermissionView",
        "responses": {
          "200": {
            "description": "Коллекция прав клиентов",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "$ref": "#/definitions/Permission_object"
                          },
                          {
                            "type": "object",
                            "properties": {
                              "created": {
                                "description": "Дата-время создания пермишна",
                                "type": "string",
                                "format": "date-time",
                                "example": "2019-03-08T08:06:54Z"
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_404_data"
                }
              ]
            }
          },
          "405": {
            "description": "Invalid Method",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_405_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal sersver error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Permissions"
        ],
        "summary": "Изменение прав клиента",
        "operationId": "clientPermissionCreate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Permission_object"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Коллекция прав клиентов",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "$ref": "#/definitions/Permission_object"
                          },
                          {
                            "type": "object",
                            "properties": {
                              "created": {
                                "description": "Дата-время создания пермишна",
                                "type": "string",
                                "format": "date-time",
                                "example": "2019-03-08T08:06:54Z"
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Validation error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_400_data"
                },
                {
                  "type": "object"
                },
                {
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {
                        "validation": {
                          "type": "object",
                          "properties": {
                            "publish": {
                              "type": "string",
                              "enum": [
                                "array"
                              ],
                              "example": "array"
                            },
                            "subscribe": {
                              "type": "string",
                              "enum": [
                                "array"
                              ],
                              "example": "array"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_404_data"
                }
              ]
            }
          },
          "405": {
            "description": "Invalid Method",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_405_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal sersver error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "format": "uuid",
          "description": "Идентификатор клиента",
          "name": "clientID",
          "in": "path",
          "required": true
        }
      ]
    },
    "/events": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Events"
        ],
        "summary": "Коллекция событий",
        "operationId": "eventCollection",
        "parameters": [
          {
            "type": "integer",
            "description": "Лимит выдачи",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Шаг выдачи",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "string",
            "format": "uuid",
            "description": "Идентификатор маршрута",
            "name": "routeID",
            "in": "query"
          },
          {
            "type": "string",
            "format": "uuid",
            "description": "Идентификатор транзакции",
            "name": "transactionID",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Канал источника",
            "name": "srcTopic",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Канал назначения",
            "name": "dstTopic",
            "in": "query"
          },
          {
            "type": "string",
            "format": "uuid",
            "description": "Флаг ответа",
            "name": "replyID",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Коллекция событий",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "ID": {
                                "description": "Идентификатор события",
                                "type": "string",
                                "example": "123"
                              }
                            }
                          },
                          {
                            "$ref": "#/definitions/Event_object"
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_404_data"
                }
              ]
            }
          },
          "405": {
            "description": "Invalid Method",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_405_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal sersver error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      }
    },
    "/events/{eventID}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Events"
        ],
        "summary": "Информация о событии",
        "operationId": "eventView",
        "responses": {
          "200": {
            "description": "Коллекция событий",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "ID": {
                                "description": "Идентификатор события",
                                "type": "string",
                                "example": "123"
                              }
                            }
                          },
                          {
                            "$ref": "#/definitions/Event_object"
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_404_data"
                }
              ]
            }
          },
          "405": {
            "description": "Invalid Method",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_405_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal sersver error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "format": "uuid",
          "description": "Идентификатор события",
          "name": "eventID",
          "in": "path",
          "required": true
        }
      ]
    },
    "/replies": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Replies"
        ],
        "summary": "Коллекция шаблонов ответов",
        "operationId": "replyCollection",
        "parameters": [
          {
            "type": "integer",
            "description": "Лимит выдачи",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Шаг выдачи",
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Коллекция шаблонов ответов",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "ID": {
                                "description": "Идентификатор шаблона ответа",
                                "type": "string",
                                "example": "2f87bb78-3919-4ff2-9f62-afca839b0c2c"
                              },
                              "created": {
                                "description": "Дата-время создания реплая",
                                "type": "string",
                                "format": "date-time",
                                "example": "2019-03-08T08:06:54Z"
                              }
                            }
                          },
                          {
                            "$ref": "#/definitions/Reply_object"
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_404_data"
                }
              ]
            }
          },
          "405": {
            "description": "Invalid Method",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_405_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal sersver error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Replies"
        ],
        "summary": "Создание шаблона ответа",
        "operationId": "replyCreate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "required": [
                "username",
                "password"
              ],
              "allOf": [
                {
                  "$ref": "#/definitions/Reply_object"
                },
                {
                  "type": "object"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Коллекция шаблонов ответов",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "ID": {
                                "description": "Идентификатор шаблона ответа",
                                "type": "string",
                                "example": "2f87bb78-3919-4ff2-9f62-afca839b0c2c"
                              },
                              "created": {
                                "description": "Дата-время создания реплая",
                                "type": "string",
                                "format": "date-time",
                                "example": "2019-03-08T08:06:54Z"
                              }
                            }
                          },
                          {
                            "$ref": "#/definitions/Reply_object"
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Validation error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_400_data"
                },
                {
                  "type": "object"
                },
                {
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {
                        "validation": {
                          "type": "object",
                          "properties": {
                            "description": {
                              "type": "string",
                              "enum": [
                                "string"
                              ],
                              "example": "string"
                            },
                            "regex": {
                              "type": "string",
                              "enum": [
                                "string",
                                "required"
                              ],
                              "example": "string"
                            },
                            "replace": {
                              "type": "string",
                              "enum": [
                                "string",
                                "required"
                              ],
                              "example": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "405": {
            "description": "Invalid Method",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_405_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal sersver error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      }
    },
    "/replies/{replyID}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Replies"
        ],
        "summary": "Информация о шаблоне ответа",
        "operationId": "replyView",
        "responses": {
          "200": {
            "description": "Коллекция шаблонов ответов",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "ID": {
                                "description": "Идентификатор шаблона ответа",
                                "type": "string",
                                "example": "2f87bb78-3919-4ff2-9f62-afca839b0c2c"
                              },
                              "created": {
                                "description": "Дата-время создания реплая",
                                "type": "string",
                                "format": "date-time",
                                "example": "2019-03-08T08:06:54Z"
                              }
                            }
                          },
                          {
                            "$ref": "#/definitions/Reply_object"
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_404_data"
                }
              ]
            }
          },
          "405": {
            "description": "Invalid Method",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_405_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal sersver error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Replies"
        ],
        "summary": "Изменение шаблона ответа",
        "operationId": "replyPut",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Reply_object"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Коллекция шаблонов ответов",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "ID": {
                                "description": "Идентификатор шаблона ответа",
                                "type": "string",
                                "example": "2f87bb78-3919-4ff2-9f62-afca839b0c2c"
                              },
                              "created": {
                                "description": "Дата-время создания реплая",
                                "type": "string",
                                "format": "date-time",
                                "example": "2019-03-08T08:06:54Z"
                              }
                            }
                          },
                          {
                            "$ref": "#/definitions/Reply_object"
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Validation error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_400_data"
                },
                {
                  "type": "object"
                },
                {
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {
                        "validation": {
                          "type": "object",
                          "properties": {
                            "description": {
                              "type": "string",
                              "enum": [
                                "string"
                              ],
                              "example": "string"
                            },
                            "regex": {
                              "type": "string",
                              "enum": [
                                "string",
                                "required"
                              ],
                              "example": "string"
                            },
                            "replace": {
                              "type": "string",
                              "enum": [
                                "string",
                                "required"
                              ],
                              "example": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_404_data"
                }
              ]
            }
          },
          "405": {
            "description": "Invalid Method",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_405_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal sersver error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      },
      "delete": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Replies"
        ],
        "summary": "Удаление шаблона ответа",
        "operationId": "replyDelete",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_404_data"
                }
              ]
            }
          },
          "405": {
            "description": "Invalid Method",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_405_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal sersver error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "format": "uuid",
          "description": "Идентификатор ответа",
          "name": "replyID",
          "in": "path",
          "required": true
        }
      ]
    },
    "/routes": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Routes"
        ],
        "summary": "Коллекция маршрутов",
        "operationId": "routeCollection",
        "parameters": [
          {
            "type": "integer",
            "description": "Лимит выдачи",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Шаг выдачи",
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Коллекция маршрутов",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "ID": {
                                "description": "Идентификатор маршрута",
                                "type": "string",
                                "example": "2f87bb78-3919-4ff2-9f62-afca839b0c2c"
                              },
                              "created": {
                                "description": "Дата-время создания роута",
                                "type": "string",
                                "format": "date-time",
                                "example": "2019-03-08T08:06:54Z"
                              }
                            }
                          },
                          {
                            "$ref": "#/definitions/Route_object"
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_404_data"
                }
              ]
            }
          },
          "405": {
            "description": "Invalid Method",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_405_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal sersver error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Routes"
        ],
        "summary": "Создание маршрута",
        "operationId": "routeCreate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Route_object"
                },
                {
                  "type": "object",
                  "required": [
                    "dst",
                    "src",
                    "replyID"
                  ]
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Коллекция маршрутов",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "ID": {
                                "description": "Идентификатор маршрута",
                                "type": "string",
                                "example": "2f87bb78-3919-4ff2-9f62-afca839b0c2c"
                              },
                              "created": {
                                "description": "Дата-время создания роута",
                                "type": "string",
                                "format": "date-time",
                                "example": "2019-03-08T08:06:54Z"
                              }
                            }
                          },
                          {
                            "$ref": "#/definitions/Route_object"
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Validation error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_400_data"
                },
                {
                  "type": "object"
                },
                {
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {
                        "validation": {
                          "type": "object",
                          "properties": {
                            "dst": {
                              "type": "string",
                              "enum": [
                                "object",
                                "required"
                              ],
                              "example": "object"
                            },
                            "dst.qos": {
                              "type": "string",
                              "enum": [
                                "int",
                                "required"
                              ],
                              "example": "int"
                            },
                            "dst.topic": {
                              "type": "string",
                              "enum": [
                                "object",
                                "required"
                              ],
                              "example": "object"
                            },
                            "replyID": {
                              "type": "string",
                              "enum": [
                                "string",
                                "not_found"
                              ],
                              "example": "string"
                            },
                            "src": {
                              "type": "string",
                              "enum": [
                                "object",
                                "required"
                              ],
                              "example": "object"
                            },
                            "src.payload": {
                              "type": "string",
                              "enum": [
                                "object"
                              ],
                              "example": "object"
                            },
                            "src.topic": {
                              "type": "string",
                              "enum": [
                                "object",
                                "required"
                              ],
                              "example": "object"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "405": {
            "description": "Invalid Method",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_405_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal sersver error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      }
    },
    "/routes/{routeID}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Routes"
        ],
        "summary": "Информация о маршруте",
        "operationId": "routeView",
        "responses": {
          "200": {
            "description": "Коллекция маршрутов",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "ID": {
                                "description": "Идентификатор маршрута",
                                "type": "string",
                                "example": "2f87bb78-3919-4ff2-9f62-afca839b0c2c"
                              },
                              "created": {
                                "description": "Дата-время создания роута",
                                "type": "string",
                                "format": "date-time",
                                "example": "2019-03-08T08:06:54Z"
                              }
                            }
                          },
                          {
                            "$ref": "#/definitions/Route_object"
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_404_data"
                }
              ]
            }
          },
          "405": {
            "description": "Invalid Method",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_405_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal sersver error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Routes"
        ],
        "summary": "Изменение маршрута",
        "operationId": "routePut",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Route_object"
                },
                {
                  "type": "object"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Коллекция маршрутов",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "ID": {
                                "description": "Идентификатор маршрута",
                                "type": "string",
                                "example": "2f87bb78-3919-4ff2-9f62-afca839b0c2c"
                              },
                              "created": {
                                "description": "Дата-время создания роута",
                                "type": "string",
                                "format": "date-time",
                                "example": "2019-03-08T08:06:54Z"
                              }
                            }
                          },
                          {
                            "$ref": "#/definitions/Route_object"
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Validation error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_400_data"
                },
                {
                  "type": "object"
                },
                {
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {
                        "validation": {
                          "type": "object",
                          "properties": {
                            "dst": {
                              "type": "string",
                              "enum": [
                                "object",
                                "required"
                              ],
                              "example": "object"
                            },
                            "dst.qos": {
                              "type": "string",
                              "enum": [
                                "int",
                                "required"
                              ],
                              "example": "int"
                            },
                            "dst.topic": {
                              "type": "string",
                              "enum": [
                                "object",
                                "required"
                              ],
                              "example": "object"
                            },
                            "replyID": {
                              "type": "string",
                              "enum": [
                                "string",
                                "not_found"
                              ],
                              "example": "string"
                            },
                            "src": {
                              "type": "string",
                              "enum": [
                                "object",
                                "required"
                              ],
                              "example": "object"
                            },
                            "src.payload": {
                              "type": "string",
                              "enum": [
                                "object"
                              ],
                              "example": "object"
                            },
                            "src.topic": {
                              "type": "string",
                              "enum": [
                                "object",
                                "required"
                              ],
                              "example": "object"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_404_data"
                }
              ]
            }
          },
          "405": {
            "description": "Invalid Method",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_405_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal sersver error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      },
      "delete": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Routes"
        ],
        "summary": "Удаление маршрута",
        "operationId": "routeDelete",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_404_data"
                }
              ]
            }
          },
          "405": {
            "description": "Invalid Method",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_405_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal sersver error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "format": "uuid",
          "description": "Идентификатор маршрута",
          "name": "routeID",
          "in": "path",
          "required": true
        }
      ]
    },
    "/status": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Status"
        ],
        "summary": "Статус инстанса",
        "operationId": "statusView",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          },
          "405": {
            "description": "Invalid Method",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_405_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal sersver error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Base_data": {
      "description": "Возвращает статус ответа",
      "type": "object",
      "required": [
        "version"
      ],
      "properties": {
        "version": {
          "description": "Версия ответа сервиса",
          "type": "string",
          "example": "2.0.0"
        }
      }
    },
    "Client_400_data": {
      "allOf": [
        {
          "$ref": "#/definitions/Error_data"
        },
        {
          "type": "object",
          "title": "Client_Error_400_data",
          "properties": {
            "errors": {
              "type": "object",
              "properties": {
                "validation": {
                  "type": "object",
                  "properties": {
                    "password": {
                      "type": "string",
                      "example": "userpassword"
                    },
                    "username": {
                      "type": "string",
                      "example": "userlogin"
                    }
                  }
                }
              }
            },
            "message": {
              "type": "string",
              "example": "Validation error"
            }
          }
        }
      ]
    },
    "Client_object": {
      "title": "Client_object",
      "allOf": [
        {
          "type": "object",
          "properties": {
            "password": {
              "description": "Пароль клиента",
              "type": "string",
              "example": "xxxxxxx"
            },
            "username": {
              "description": "Логин клиента",
              "type": "string",
              "example": "testClient"
            }
          }
        }
      ]
    },
    "Error_400_data": {
      "allOf": [
        {
          "$ref": "#/definitions/Error_data"
        },
        {
          "type": "object",
          "title": "Error_Error_400_data",
          "required": [
            "message",
            "errors"
          ],
          "properties": {
            "errors": {
              "type": "object",
              "required": [
                "validation"
              ],
              "properties": {
                "validation": {
                  "type": "object"
                }
              }
            },
            "message": {
              "type": "string",
              "example": "Validation error"
            }
          }
        }
      ]
    },
    "Error_404_data": {
      "allOf": [
        {
          "$ref": "#/definitions/Error_data"
        },
        {
          "type": "object",
          "title": "Error_Error_404_data",
          "properties": {
            "errors": {},
            "message": {
              "description": "сообщение ответа",
              "type": "string",
              "example": "${ITEM} Not found"
            }
          }
        }
      ]
    },
    "Error_405_data": {
      "allOf": [
        {
          "$ref": "#/definitions/Error_data"
        },
        {
          "type": "object",
          "title": "Error_Error_405_data",
          "properties": {
            "errors": {},
            "message": {
              "description": "сообщение ответа",
              "type": "string",
              "example": "Method ${METHOD} not allowed"
            }
          }
        }
      ]
    },
    "Error_500_data": {
      "allOf": [
        {
          "$ref": "#/definitions/Error_data"
        },
        {
          "type": "object",
          "title": "Error_Error_500_data",
          "properties": {
            "errors": {},
            "message": {
              "description": "сообщение ответа",
              "type": "string",
              "example": "Internal server error"
            }
          }
        }
      ]
    },
    "Error_data": {
      "description": "Все плохо",
      "allOf": [
        {
          "$ref": "#/definitions/Base_data"
        },
        {
          "type": "object",
          "title": "Error_data",
          "properties": {
            "data": {
              "type": "array",
              "items": {}
            }
          }
        }
      ]
    },
    "Event_object": {
      "title": "Event_object",
      "required": [
        "replyID"
      ],
      "properties": {
        "date": {
          "description": "Дата-время события",
          "type": "string",
          "format": "date-time",
          "example": "2005-08-09T18:31:42+03:30"
        },
        "dstTopic": {
          "description": "Канал назначения",
          "type": "string",
          "example": "topicB"
        },
        "replyID": {
          "description": "Идентификатор ответа",
          "type": "string",
          "format": "uuid",
          "example": "p9gdv123-6543-25lo-tt45-54f7hhre5d32"
        },
        "routeID": {
          "description": "Идентификатор маршрута",
          "type": "string",
          "format": "uuid",
          "example": "09a475d5-473a-4c20-8feb-91b34dcd9b38"
        },
        "srcTopic": {
          "description": "Канал источника",
          "type": "string",
          "example": "topicA"
        },
        "transactionID": {
          "description": "Идентификатор транзакции",
          "type": "string",
          "format": "uuid",
          "example": "f4cda951-8785-40ce-bb47-62a7ccea2c03"
        }
      }
    },
    "Permission_object": {
      "title": "Permission_object",
      "properties": {
        "publish": {
          "type": "array",
          "items": {
            "description": "ACL рассылок",
            "type": "string",
            "example": "services/test/OUT"
          }
        },
        "subscribe": {
          "type": "array",
          "items": {
            "description": "ACL подписок",
            "type": "string",
            "example": "services/+/IN"
          }
        }
      }
    },
    "Reply_object": {
      "title": "Reply_object",
      "required": [
        "regex",
        "replace"
      ],
      "properties": {
        "description": {
          "description": "Описание шаблона",
          "type": "string",
          "example": "Переправлять ответы на /IN"
        },
        "regex": {
          "description": "Regex шаблона",
          "type": "string",
          "example": "services/(.*)/OUT"
        },
        "replace": {
          "description": "Regex шаблона",
          "type": "string",
          "example": "services/$1/IN"
        }
      }
    },
    "Route_object": {
      "title": "Route_object",
      "required": [
        "src",
        "dst"
      ],
      "properties": {
        "dst": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "topic",
              "qos"
            ],
            "properties": {
              "qos": {
                "description": "QOS",
                "type": "integer",
                "enum": [
                  0,
                  1,
                  2
                ],
                "example": 0
              },
              "topic": {
                "description": "Канал назначения",
                "type": "string",
                "example": "services/serviceB/OUT"
              }
            }
          }
        },
        "replyID": {
          "description": "Идентификатор шаблона ответа",
          "type": "string",
          "format": "uuid",
          "x-nullable": true,
          "example": "1801dc8f-4d57-4e86-afb8-951d009ca7d8"
        },
        "src": {
          "type": "object",
          "required": [
            "topic"
          ],
          "properties": {
            "payload": {
              "description": "jsonLogic style описание условия",
              "type": "object",
              "example": {
                "and": [
                  {
                    "==": [
                      {
                        "var": "param1"
                      },
                      "value"
                    ]
                  },
                  {
                    "\u003e": [
                      {
                        "var": "param2"
                      },
                      100
                    ]
                  }
                ]
              }
            },
            "topic": {
              "description": "jsonLogic style описание условия",
              "type": "object",
              "example": {
                "and": [
                  {
                    "==": [
                      {
                        "var": "name"
                      },
                      "services/index/OUT"
                    ]
                  },
                  {
                    "\u003e": [
                      {
                        "var": "qos"
                      },
                      0
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "Success_data": {
      "description": "Все хорошо",
      "allOf": [
        {
          "$ref": "#/definitions/Base_data"
        },
        {
          "type": "object",
          "title": "Success_data",
          "required": [
            "message",
            "errors"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {}
            },
            "message": {
              "description": "сообщение ответа",
              "type": "string",
              "example": "SUCCESS"
            }
          }
        }
      ]
    }
  },
  "parameters": {
    "clientID": {
      "type": "string",
      "format": "uuid",
      "description": "Идентификатор клиента",
      "name": "clientID",
      "in": "path",
      "required": true
    },
    "eventID": {
      "type": "string",
      "format": "uuid",
      "description": "Идентификатор события",
      "name": "eventID",
      "in": "path",
      "required": true
    },
    "filter.dstTopic": {
      "type": "string",
      "description": "Канал назначения",
      "name": "dstTopic",
      "in": "query"
    },
    "filter.replyID": {
      "type": "string",
      "format": "uuid",
      "description": "Флаг ответа",
      "name": "replyID",
      "in": "query"
    },
    "filter.routeID": {
      "type": "string",
      "format": "uuid",
      "description": "Идентификатор маршрута",
      "name": "routeID",
      "in": "query"
    },
    "filter.srcTopic": {
      "type": "string",
      "description": "Канал источника",
      "name": "srcTopic",
      "in": "query"
    },
    "filter.transactionID": {
      "type": "string",
      "format": "uuid",
      "description": "Идентификатор транзакции",
      "name": "transactionID",
      "in": "query"
    },
    "filter.username": {
      "type": "string",
      "description": "Логин клиента",
      "name": "username",
      "in": "query"
    },
    "limit": {
      "type": "integer",
      "description": "Лимит выдачи",
      "name": "limit",
      "in": "query"
    },
    "offset": {
      "type": "integer",
      "description": "Шаг выдачи",
      "name": "offset",
      "in": "query"
    },
    "replyID": {
      "type": "string",
      "format": "uuid",
      "description": "Идентификатор ответа",
      "name": "replyID",
      "in": "path",
      "required": true
    },
    "routeID": {
      "type": "string",
      "format": "uuid",
      "description": "Идентификатор маршрута",
      "name": "routeID",
      "in": "path",
      "required": true
    }
  },
  "responses": {
    "Base_response_200": {
      "description": "Success",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Success_data"
          },
          {
            "type": "object",
            "properties": {
              "data": {}
            }
          }
        ]
      }
    },
    "Base_response_404": {
      "description": "Not found",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Error_404_data"
          }
        ]
      }
    },
    "Base_response_405": {
      "description": "Invalid Method",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Error_405_data"
          }
        ]
      }
    },
    "Base_response_500": {
      "description": "Internal sersver error",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Error_500_data"
          }
        ]
      }
    },
    "Client_response_200": {
      "description": "Коллекция клиентов",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Success_data"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "ID": {
                          "description": "Идентификатор клиента",
                          "type": "string",
                          "format": "uuid",
                          "example": "db9564da-b3e8-458d-9fa5-b317eb395b99"
                        }
                      }
                    },
                    {
                      "$ref": "#/definitions/Client_object"
                    },
                    {
                      "type": "object",
                      "required": [
                        "ID",
                        "created",
                        "expired",
                        "username",
                        "ttl"
                      ],
                      "properties": {
                        "created": {
                          "description": "ISO Дата-время создания клиента",
                          "type": "string",
                          "format": "date-time",
                          "example": "2018-05-22T13:27:51+00:00"
                        },
                        "expired": {
                          "description": "ISO Дата-время протухания клиента",
                          "type": "string",
                          "format": "date-time",
                          "x-nullable": true,
                          "example": "2018-05-22T14:27:51+00:00"
                        },
                        "ttl": {
                          "description": "Время жизни клиента в секундах.",
                          "type": "integer",
                          "x-nullable": true,
                          "example": 10
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        ]
      }
    },
    "Client_response_400": {
      "description": "Validation error",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Error_400_data"
          },
          {
            "type": "object"
          },
          {
            "properties": {
              "errors": {
                "type": "object",
                "properties": {
                  "validation": {
                    "type": "object",
                    "properties": {
                      "ID": {
                        "type": "string",
                        "enum": [
                          "string",
                          "format",
                          "unique"
                        ],
                        "example": "string"
                      },
                      "password": {
                        "type": "string",
                        "enum": [
                          "string",
                          "required"
                        ],
                        "example": "string"
                      },
                      "ttl": {
                        "type": "string",
                        "enum": [
                          "int"
                        ],
                        "example": "int"
                      },
                      "username": {
                        "type": "string",
                        "enum": [
                          "string",
                          "required"
                        ],
                        "example": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      }
    },
    "Event_response_200": {
      "description": "Коллекция событий",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Success_data"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "ID": {
                          "description": "Идентификатор события",
                          "type": "string",
                          "example": "123"
                        }
                      }
                    },
                    {
                      "$ref": "#/definitions/Event_object"
                    }
                  ]
                }
              }
            }
          }
        ]
      }
    },
    "Permission_response_200": {
      "description": "Коллекция прав клиентов",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Success_data"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/definitions/Permission_object"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "created": {
                          "description": "Дата-время создания пермишна",
                          "type": "string",
                          "format": "date-time",
                          "example": "2019-03-08T08:06:54Z"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        ]
      }
    },
    "Permission_response_400": {
      "description": "Validation error",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Error_400_data"
          },
          {
            "type": "object"
          },
          {
            "properties": {
              "errors": {
                "type": "object",
                "properties": {
                  "validation": {
                    "type": "object",
                    "properties": {
                      "publish": {
                        "type": "string",
                        "enum": [
                          "array"
                        ],
                        "example": "array"
                      },
                      "subscribe": {
                        "type": "string",
                        "enum": [
                          "array"
                        ],
                        "example": "array"
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      }
    },
    "Reply_response_200": {
      "description": "Коллекция шаблонов ответов",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Success_data"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "ID": {
                          "description": "Идентификатор шаблона ответа",
                          "type": "string",
                          "example": "2f87bb78-3919-4ff2-9f62-afca839b0c2c"
                        },
                        "created": {
                          "description": "Дата-время создания реплая",
                          "type": "string",
                          "format": "date-time",
                          "example": "2019-03-08T08:06:54Z"
                        }
                      }
                    },
                    {
                      "$ref": "#/definitions/Reply_object"
                    }
                  ]
                }
              }
            }
          }
        ]
      }
    },
    "Reply_response_400": {
      "description": "Validation error",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Error_400_data"
          },
          {
            "type": "object"
          },
          {
            "properties": {
              "errors": {
                "type": "object",
                "properties": {
                  "validation": {
                    "type": "object",
                    "properties": {
                      "description": {
                        "type": "string",
                        "enum": [
                          "string"
                        ],
                        "example": "string"
                      },
                      "regex": {
                        "type": "string",
                        "enum": [
                          "string",
                          "required"
                        ],
                        "example": "string"
                      },
                      "replace": {
                        "type": "string",
                        "enum": [
                          "string",
                          "required"
                        ],
                        "example": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      }
    },
    "Route_response_200": {
      "description": "Коллекция маршрутов",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Success_data"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "ID": {
                          "description": "Идентификатор маршрута",
                          "type": "string",
                          "example": "2f87bb78-3919-4ff2-9f62-afca839b0c2c"
                        },
                        "created": {
                          "description": "Дата-время создания роута",
                          "type": "string",
                          "format": "date-time",
                          "example": "2019-03-08T08:06:54Z"
                        }
                      }
                    },
                    {
                      "$ref": "#/definitions/Route_object"
                    }
                  ]
                }
              }
            }
          }
        ]
      }
    },
    "Route_response_400": {
      "description": "Validation error",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Error_400_data"
          },
          {
            "type": "object"
          },
          {
            "properties": {
              "errors": {
                "type": "object",
                "properties": {
                  "validation": {
                    "type": "object",
                    "properties": {
                      "dst": {
                        "type": "string",
                        "enum": [
                          "object",
                          "required"
                        ],
                        "example": "object"
                      },
                      "dst.qos": {
                        "type": "string",
                        "enum": [
                          "int",
                          "required"
                        ],
                        "example": "int"
                      },
                      "dst.topic": {
                        "type": "string",
                        "enum": [
                          "object",
                          "required"
                        ],
                        "example": "object"
                      },
                      "replyID": {
                        "type": "string",
                        "enum": [
                          "string",
                          "not_found"
                        ],
                        "example": "string"
                      },
                      "src": {
                        "type": "string",
                        "enum": [
                          "object",
                          "required"
                        ],
                        "example": "object"
                      },
                      "src.payload": {
                        "type": "string",
                        "enum": [
                          "object"
                        ],
                        "example": "object"
                      },
                      "src.topic": {
                        "type": "string",
                        "enum": [
                          "object",
                          "required"
                        ],
                        "example": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      }
    }
  }
}`))
}
