version: '3.7'

networks:
  datarouter:


services:
  app:
    image: "${CI_REGISTRY_IMAGE}/api:${CI_PIPELINE_ID}"
    restart: always
    container_name: "datarouter_app-${CI_JOB_ID}"
    networks:
      - datarouter
    ports:
      - 80
    depends_on:
      - config_db
      - event_db
    environment:
      - DATAROUTER_HTTP_HOST=0.0.0.0
      - DATAROUTER_HTTP_PORT=80
      - DATAROUTER_CONFIGDB_HOST=config_db
      - DATAROUTER_CONFIGDB_PORT=27017
      - DATAROUTER_CONFIGDB_DATABASE=data_router
      - DATAROUTER_EVENTDB_HOST=event_db
      - DATAROUTER_EVENTDB_PORT=8086
      - DATAROUTER_EVENTDB_PROTOCOL=http
      - DATAROUTER_EVENTDB_DATABASE=data_router
      - DATAROUTER_EVENTDB_LOGIN=data_router
      - DATAROUTER_EVENTDB_PASSWORD=FqTfXq7e5d
      - DATAROUTER_SENTRYDSN=https://782091f732ec472a9625f247dfaac200:01c98e710e9a4faebf199a29e504a6af@sentry.nefrosovet.ru/29
      - DATAROUTER_LOGGING_OUTPUT=STDOUT
      - DATAROUTER_LOGGING_LEVEL=INFO

  config_db:
    image: repository.diacare-soft.ru/docker/mongo:4.2
    container_name: "datarouter_config_db-${CI_JOB_ID}"
    environment:
      - MONGO_DATA_DIR=/data/db
      - MONGO_LOG_DIR=/dev/null
    networks:
      - datarouter
    ports:
      - 27017

  event_db:
    image: repository.diacare-soft.ru/docker/influxdb:1.7
    container_name: "datarouter_event_db-${CI_JOB_ID}"
    networks:
      - datarouter
    ports:
      - 8086
    environment:
      - INFLUXDB_DB=data_router
      - INFLUXDB_USER=data_router
      - INFLUXDB_USER_PASSWORD=FqTfXq7e5d

  postman:
    image: newman
    container_name: "postman-${CI_JOB_ID}"
    build:
      context: .
      labels:
        - "image.version=${CI_JOB_ID}"
    networks:
      - datarouter
    depends_on:
      - app
    command: run /storage/collection.json --color off --reporters cli --global-var routerHost=http://app
