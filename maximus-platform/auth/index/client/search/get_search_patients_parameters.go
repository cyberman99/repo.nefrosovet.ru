// Code generated by go-swagger; DO NOT EDIT.

package search

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetSearchPatientsParams creates a new GetSearchPatientsParams object
// with the default values initialized.
func NewGetSearchPatientsParams() *GetSearchPatientsParams {
	var ()
	return &GetSearchPatientsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetSearchPatientsParamsWithTimeout creates a new GetSearchPatientsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetSearchPatientsParamsWithTimeout(timeout time.Duration) *GetSearchPatientsParams {
	var ()
	return &GetSearchPatientsParams{

		timeout: timeout,
	}
}

// NewGetSearchPatientsParamsWithContext creates a new GetSearchPatientsParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetSearchPatientsParamsWithContext(ctx context.Context) *GetSearchPatientsParams {
	var ()
	return &GetSearchPatientsParams{

		Context: ctx,
	}
}

// NewGetSearchPatientsParamsWithHTTPClient creates a new GetSearchPatientsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetSearchPatientsParamsWithHTTPClient(client *http.Client) *GetSearchPatientsParams {
	var ()
	return &GetSearchPatientsParams{
		HTTPClient: client,
	}
}

/*GetSearchPatientsParams contains all the parameters to send to the API endpoint
for the get search patients operation typically these are written to a http.Request
*/
type GetSearchPatientsParams struct {

	/*Archived
	  Состояние записи

	*/
	Archived *bool
	/*BirthDate
	  Дата рождения

	*/
	BirthDate *string
	/*DocumentNumber
	  Номер документа

	*/
	DocumentNumber *string
	/*DocumentSeries
	  Серия документа

	*/
	DocumentSeries *string
	/*DocumentType
	  Тип документа

	*/
	DocumentType *int64
	/*Email
	  E-mail адрес

	*/
	Email *string
	/*FirstName
	  Имя

	*/
	FirstName *string
	/*Gender
	  Пол

	*/
	Gender *string
	/*InsurancePolicyNumber
	  Номер полиса

	*/
	InsurancePolicyNumber *string
	/*InsurancePolicySeries
	  Серия полиса

	*/
	InsurancePolicySeries *string
	/*LastName
	  Фамилия

	*/
	LastName *string
	/*Limit
	  Лимит выдачи

	*/
	Limit *int64
	/*Mobile
	  Номер мобильного телефона

	*/
	Mobile *string
	/*Offset
	  Шаг выдачи

	*/
	Offset *int64
	/*Patronymic
	  Отчество

	*/
	Patronymic *string
	/*SmartCardNumber
	  Номер смарт-карты

	*/
	SmartCardNumber *string
	/*Snils
	  СНИЛС

	*/
	Snils *string
	/*Username
	  Имя пользователя

	*/
	Username *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get search patients params
func (o *GetSearchPatientsParams) WithTimeout(timeout time.Duration) *GetSearchPatientsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get search patients params
func (o *GetSearchPatientsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get search patients params
func (o *GetSearchPatientsParams) WithContext(ctx context.Context) *GetSearchPatientsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get search patients params
func (o *GetSearchPatientsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get search patients params
func (o *GetSearchPatientsParams) WithHTTPClient(client *http.Client) *GetSearchPatientsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get search patients params
func (o *GetSearchPatientsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithArchived adds the archived to the get search patients params
func (o *GetSearchPatientsParams) WithArchived(archived *bool) *GetSearchPatientsParams {
	o.SetArchived(archived)
	return o
}

// SetArchived adds the archived to the get search patients params
func (o *GetSearchPatientsParams) SetArchived(archived *bool) {
	o.Archived = archived
}

// WithBirthDate adds the birthDate to the get search patients params
func (o *GetSearchPatientsParams) WithBirthDate(birthDate *string) *GetSearchPatientsParams {
	o.SetBirthDate(birthDate)
	return o
}

// SetBirthDate adds the birthDate to the get search patients params
func (o *GetSearchPatientsParams) SetBirthDate(birthDate *string) {
	o.BirthDate = birthDate
}

// WithDocumentNumber adds the documentNumber to the get search patients params
func (o *GetSearchPatientsParams) WithDocumentNumber(documentNumber *string) *GetSearchPatientsParams {
	o.SetDocumentNumber(documentNumber)
	return o
}

// SetDocumentNumber adds the documentNumber to the get search patients params
func (o *GetSearchPatientsParams) SetDocumentNumber(documentNumber *string) {
	o.DocumentNumber = documentNumber
}

// WithDocumentSeries adds the documentSeries to the get search patients params
func (o *GetSearchPatientsParams) WithDocumentSeries(documentSeries *string) *GetSearchPatientsParams {
	o.SetDocumentSeries(documentSeries)
	return o
}

// SetDocumentSeries adds the documentSeries to the get search patients params
func (o *GetSearchPatientsParams) SetDocumentSeries(documentSeries *string) {
	o.DocumentSeries = documentSeries
}

// WithDocumentType adds the documentType to the get search patients params
func (o *GetSearchPatientsParams) WithDocumentType(documentType *int64) *GetSearchPatientsParams {
	o.SetDocumentType(documentType)
	return o
}

// SetDocumentType adds the documentType to the get search patients params
func (o *GetSearchPatientsParams) SetDocumentType(documentType *int64) {
	o.DocumentType = documentType
}

// WithEmail adds the email to the get search patients params
func (o *GetSearchPatientsParams) WithEmail(email *string) *GetSearchPatientsParams {
	o.SetEmail(email)
	return o
}

// SetEmail adds the email to the get search patients params
func (o *GetSearchPatientsParams) SetEmail(email *string) {
	o.Email = email
}

// WithFirstName adds the firstName to the get search patients params
func (o *GetSearchPatientsParams) WithFirstName(firstName *string) *GetSearchPatientsParams {
	o.SetFirstName(firstName)
	return o
}

// SetFirstName adds the firstName to the get search patients params
func (o *GetSearchPatientsParams) SetFirstName(firstName *string) {
	o.FirstName = firstName
}

// WithGender adds the gender to the get search patients params
func (o *GetSearchPatientsParams) WithGender(gender *string) *GetSearchPatientsParams {
	o.SetGender(gender)
	return o
}

// SetGender adds the gender to the get search patients params
func (o *GetSearchPatientsParams) SetGender(gender *string) {
	o.Gender = gender
}

// WithInsurancePolicyNumber adds the insurancePolicyNumber to the get search patients params
func (o *GetSearchPatientsParams) WithInsurancePolicyNumber(insurancePolicyNumber *string) *GetSearchPatientsParams {
	o.SetInsurancePolicyNumber(insurancePolicyNumber)
	return o
}

// SetInsurancePolicyNumber adds the insurancePolicyNumber to the get search patients params
func (o *GetSearchPatientsParams) SetInsurancePolicyNumber(insurancePolicyNumber *string) {
	o.InsurancePolicyNumber = insurancePolicyNumber
}

// WithInsurancePolicySeries adds the insurancePolicySeries to the get search patients params
func (o *GetSearchPatientsParams) WithInsurancePolicySeries(insurancePolicySeries *string) *GetSearchPatientsParams {
	o.SetInsurancePolicySeries(insurancePolicySeries)
	return o
}

// SetInsurancePolicySeries adds the insurancePolicySeries to the get search patients params
func (o *GetSearchPatientsParams) SetInsurancePolicySeries(insurancePolicySeries *string) {
	o.InsurancePolicySeries = insurancePolicySeries
}

// WithLastName adds the lastName to the get search patients params
func (o *GetSearchPatientsParams) WithLastName(lastName *string) *GetSearchPatientsParams {
	o.SetLastName(lastName)
	return o
}

// SetLastName adds the lastName to the get search patients params
func (o *GetSearchPatientsParams) SetLastName(lastName *string) {
	o.LastName = lastName
}

// WithLimit adds the limit to the get search patients params
func (o *GetSearchPatientsParams) WithLimit(limit *int64) *GetSearchPatientsParams {
	o.SetLimit(limit)
	return o
}

// SetLimit adds the limit to the get search patients params
func (o *GetSearchPatientsParams) SetLimit(limit *int64) {
	o.Limit = limit
}

// WithMobile adds the mobile to the get search patients params
func (o *GetSearchPatientsParams) WithMobile(mobile *string) *GetSearchPatientsParams {
	o.SetMobile(mobile)
	return o
}

// SetMobile adds the mobile to the get search patients params
func (o *GetSearchPatientsParams) SetMobile(mobile *string) {
	o.Mobile = mobile
}

// WithOffset adds the offset to the get search patients params
func (o *GetSearchPatientsParams) WithOffset(offset *int64) *GetSearchPatientsParams {
	o.SetOffset(offset)
	return o
}

// SetOffset adds the offset to the get search patients params
func (o *GetSearchPatientsParams) SetOffset(offset *int64) {
	o.Offset = offset
}

// WithPatronymic adds the patronymic to the get search patients params
func (o *GetSearchPatientsParams) WithPatronymic(patronymic *string) *GetSearchPatientsParams {
	o.SetPatronymic(patronymic)
	return o
}

// SetPatronymic adds the patronymic to the get search patients params
func (o *GetSearchPatientsParams) SetPatronymic(patronymic *string) {
	o.Patronymic = patronymic
}

// WithSmartCardNumber adds the smartCardNumber to the get search patients params
func (o *GetSearchPatientsParams) WithSmartCardNumber(smartCardNumber *string) *GetSearchPatientsParams {
	o.SetSmartCardNumber(smartCardNumber)
	return o
}

// SetSmartCardNumber adds the smartCardNumber to the get search patients params
func (o *GetSearchPatientsParams) SetSmartCardNumber(smartCardNumber *string) {
	o.SmartCardNumber = smartCardNumber
}

// WithSnils adds the snils to the get search patients params
func (o *GetSearchPatientsParams) WithSnils(snils *string) *GetSearchPatientsParams {
	o.SetSnils(snils)
	return o
}

// SetSnils adds the snils to the get search patients params
func (o *GetSearchPatientsParams) SetSnils(snils *string) {
	o.Snils = snils
}

// WithUsername adds the username to the get search patients params
func (o *GetSearchPatientsParams) WithUsername(username *string) *GetSearchPatientsParams {
	o.SetUsername(username)
	return o
}

// SetUsername adds the username to the get search patients params
func (o *GetSearchPatientsParams) SetUsername(username *string) {
	o.Username = username
}

// WriteToRequest writes these params to a swagger request
func (o *GetSearchPatientsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Archived != nil {

		// query param archived
		var qrArchived bool
		if o.Archived != nil {
			qrArchived = *o.Archived
		}
		qArchived := swag.FormatBool(qrArchived)
		if qArchived != "" {
			if err := r.SetQueryParam("archived", qArchived); err != nil {
				return err
			}
		}

	}

	if o.BirthDate != nil {

		// query param birthDate
		var qrBirthDate string
		if o.BirthDate != nil {
			qrBirthDate = *o.BirthDate
		}
		qBirthDate := qrBirthDate
		if qBirthDate != "" {
			if err := r.SetQueryParam("birthDate", qBirthDate); err != nil {
				return err
			}
		}

	}

	if o.DocumentNumber != nil {

		// query param documentNumber
		var qrDocumentNumber string
		if o.DocumentNumber != nil {
			qrDocumentNumber = *o.DocumentNumber
		}
		qDocumentNumber := qrDocumentNumber
		if qDocumentNumber != "" {
			if err := r.SetQueryParam("documentNumber", qDocumentNumber); err != nil {
				return err
			}
		}

	}

	if o.DocumentSeries != nil {

		// query param documentSeries
		var qrDocumentSeries string
		if o.DocumentSeries != nil {
			qrDocumentSeries = *o.DocumentSeries
		}
		qDocumentSeries := qrDocumentSeries
		if qDocumentSeries != "" {
			if err := r.SetQueryParam("documentSeries", qDocumentSeries); err != nil {
				return err
			}
		}

	}

	if o.DocumentType != nil {

		// query param documentType
		var qrDocumentType int64
		if o.DocumentType != nil {
			qrDocumentType = *o.DocumentType
		}
		qDocumentType := swag.FormatInt64(qrDocumentType)
		if qDocumentType != "" {
			if err := r.SetQueryParam("documentType", qDocumentType); err != nil {
				return err
			}
		}

	}

	if o.Email != nil {

		// query param email
		var qrEmail string
		if o.Email != nil {
			qrEmail = *o.Email
		}
		qEmail := qrEmail
		if qEmail != "" {
			if err := r.SetQueryParam("email", qEmail); err != nil {
				return err
			}
		}

	}

	if o.FirstName != nil {

		// query param firstName
		var qrFirstName string
		if o.FirstName != nil {
			qrFirstName = *o.FirstName
		}
		qFirstName := qrFirstName
		if qFirstName != "" {
			if err := r.SetQueryParam("firstName", qFirstName); err != nil {
				return err
			}
		}

	}

	if o.Gender != nil {

		// query param gender
		var qrGender string
		if o.Gender != nil {
			qrGender = *o.Gender
		}
		qGender := qrGender
		if qGender != "" {
			if err := r.SetQueryParam("gender", qGender); err != nil {
				return err
			}
		}

	}

	if o.InsurancePolicyNumber != nil {

		// query param insurancePolicyNumber
		var qrInsurancePolicyNumber string
		if o.InsurancePolicyNumber != nil {
			qrInsurancePolicyNumber = *o.InsurancePolicyNumber
		}
		qInsurancePolicyNumber := qrInsurancePolicyNumber
		if qInsurancePolicyNumber != "" {
			if err := r.SetQueryParam("insurancePolicyNumber", qInsurancePolicyNumber); err != nil {
				return err
			}
		}

	}

	if o.InsurancePolicySeries != nil {

		// query param insurancePolicySeries
		var qrInsurancePolicySeries string
		if o.InsurancePolicySeries != nil {
			qrInsurancePolicySeries = *o.InsurancePolicySeries
		}
		qInsurancePolicySeries := qrInsurancePolicySeries
		if qInsurancePolicySeries != "" {
			if err := r.SetQueryParam("insurancePolicySeries", qInsurancePolicySeries); err != nil {
				return err
			}
		}

	}

	if o.LastName != nil {

		// query param lastName
		var qrLastName string
		if o.LastName != nil {
			qrLastName = *o.LastName
		}
		qLastName := qrLastName
		if qLastName != "" {
			if err := r.SetQueryParam("lastName", qLastName); err != nil {
				return err
			}
		}

	}

	if o.Limit != nil {

		// query param limit
		var qrLimit int64
		if o.Limit != nil {
			qrLimit = *o.Limit
		}
		qLimit := swag.FormatInt64(qrLimit)
		if qLimit != "" {
			if err := r.SetQueryParam("limit", qLimit); err != nil {
				return err
			}
		}

	}

	if o.Mobile != nil {

		// query param mobile
		var qrMobile string
		if o.Mobile != nil {
			qrMobile = *o.Mobile
		}
		qMobile := qrMobile
		if qMobile != "" {
			if err := r.SetQueryParam("mobile", qMobile); err != nil {
				return err
			}
		}

	}

	if o.Offset != nil {

		// query param offset
		var qrOffset int64
		if o.Offset != nil {
			qrOffset = *o.Offset
		}
		qOffset := swag.FormatInt64(qrOffset)
		if qOffset != "" {
			if err := r.SetQueryParam("offset", qOffset); err != nil {
				return err
			}
		}

	}

	if o.Patronymic != nil {

		// query param patronymic
		var qrPatronymic string
		if o.Patronymic != nil {
			qrPatronymic = *o.Patronymic
		}
		qPatronymic := qrPatronymic
		if qPatronymic != "" {
			if err := r.SetQueryParam("patronymic", qPatronymic); err != nil {
				return err
			}
		}

	}

	if o.SmartCardNumber != nil {

		// query param smartCardNumber
		var qrSmartCardNumber string
		if o.SmartCardNumber != nil {
			qrSmartCardNumber = *o.SmartCardNumber
		}
		qSmartCardNumber := qrSmartCardNumber
		if qSmartCardNumber != "" {
			if err := r.SetQueryParam("smartCardNumber", qSmartCardNumber); err != nil {
				return err
			}
		}

	}

	if o.Snils != nil {

		// query param snils
		var qrSnils string
		if o.Snils != nil {
			qrSnils = *o.Snils
		}
		qSnils := qrSnils
		if qSnils != "" {
			if err := r.SetQueryParam("snils", qSnils); err != nil {
				return err
			}
		}

	}

	if o.Username != nil {

		// query param username
		var qrUsername string
		if o.Username != nil {
			qrUsername = *o.Username
		}
		qUsername := qrUsername
		if qUsername != "" {
			if err := r.SetQueryParam("username", qUsername); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
