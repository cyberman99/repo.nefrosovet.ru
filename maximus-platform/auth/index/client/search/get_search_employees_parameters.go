// Code generated by go-swagger; DO NOT EDIT.

package search

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetSearchEmployeesParams creates a new GetSearchEmployeesParams object
// with the default values initialized.
func NewGetSearchEmployeesParams() *GetSearchEmployeesParams {
	var ()
	return &GetSearchEmployeesParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetSearchEmployeesParamsWithTimeout creates a new GetSearchEmployeesParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetSearchEmployeesParamsWithTimeout(timeout time.Duration) *GetSearchEmployeesParams {
	var ()
	return &GetSearchEmployeesParams{

		timeout: timeout,
	}
}

// NewGetSearchEmployeesParamsWithContext creates a new GetSearchEmployeesParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetSearchEmployeesParamsWithContext(ctx context.Context) *GetSearchEmployeesParams {
	var ()
	return &GetSearchEmployeesParams{

		Context: ctx,
	}
}

// NewGetSearchEmployeesParamsWithHTTPClient creates a new GetSearchEmployeesParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetSearchEmployeesParamsWithHTTPClient(client *http.Client) *GetSearchEmployeesParams {
	var ()
	return &GetSearchEmployeesParams{
		HTTPClient: client,
	}
}

/*GetSearchEmployeesParams contains all the parameters to send to the API endpoint
for the get search employees operation typically these are written to a http.Request
*/
type GetSearchEmployeesParams struct {

	/*Archived
	  Состояние записи

	*/
	Archived *bool
	/*ClinicGUID
	  GUID клиники

	*/
	ClinicGUID *string
	/*Email
	  E-mail адрес

	*/
	Email *string
	/*FirstName
	  Имя

	*/
	FirstName *string
	/*LastName
	  Фамилия

	*/
	LastName *string
	/*Limit
	  Лимит выдачи

	*/
	Limit *int64
	/*Mobile
	  Номер мобильного телефона

	*/
	Mobile *string
	/*Offset
	  Шаг выдачи

	*/
	Offset *int64
	/*Patronymic
	  Отчество

	*/
	Patronymic *string
	/*SmartCardNumber
	  Номер смарт-карты

	*/
	SmartCardNumber *string
	/*Snils
	  СНИЛС

	*/
	Snils *string
	/*Username
	  Имя пользователя

	*/
	Username *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get search employees params
func (o *GetSearchEmployeesParams) WithTimeout(timeout time.Duration) *GetSearchEmployeesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get search employees params
func (o *GetSearchEmployeesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get search employees params
func (o *GetSearchEmployeesParams) WithContext(ctx context.Context) *GetSearchEmployeesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get search employees params
func (o *GetSearchEmployeesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get search employees params
func (o *GetSearchEmployeesParams) WithHTTPClient(client *http.Client) *GetSearchEmployeesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get search employees params
func (o *GetSearchEmployeesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithArchived adds the archived to the get search employees params
func (o *GetSearchEmployeesParams) WithArchived(archived *bool) *GetSearchEmployeesParams {
	o.SetArchived(archived)
	return o
}

// SetArchived adds the archived to the get search employees params
func (o *GetSearchEmployeesParams) SetArchived(archived *bool) {
	o.Archived = archived
}

// WithClinicGUID adds the clinicGUID to the get search employees params
func (o *GetSearchEmployeesParams) WithClinicGUID(clinicGUID *string) *GetSearchEmployeesParams {
	o.SetClinicGUID(clinicGUID)
	return o
}

// SetClinicGUID adds the clinicGuid to the get search employees params
func (o *GetSearchEmployeesParams) SetClinicGUID(clinicGUID *string) {
	o.ClinicGUID = clinicGUID
}

// WithEmail adds the email to the get search employees params
func (o *GetSearchEmployeesParams) WithEmail(email *string) *GetSearchEmployeesParams {
	o.SetEmail(email)
	return o
}

// SetEmail adds the email to the get search employees params
func (o *GetSearchEmployeesParams) SetEmail(email *string) {
	o.Email = email
}

// WithFirstName adds the firstName to the get search employees params
func (o *GetSearchEmployeesParams) WithFirstName(firstName *string) *GetSearchEmployeesParams {
	o.SetFirstName(firstName)
	return o
}

// SetFirstName adds the firstName to the get search employees params
func (o *GetSearchEmployeesParams) SetFirstName(firstName *string) {
	o.FirstName = firstName
}

// WithLastName adds the lastName to the get search employees params
func (o *GetSearchEmployeesParams) WithLastName(lastName *string) *GetSearchEmployeesParams {
	o.SetLastName(lastName)
	return o
}

// SetLastName adds the lastName to the get search employees params
func (o *GetSearchEmployeesParams) SetLastName(lastName *string) {
	o.LastName = lastName
}

// WithLimit adds the limit to the get search employees params
func (o *GetSearchEmployeesParams) WithLimit(limit *int64) *GetSearchEmployeesParams {
	o.SetLimit(limit)
	return o
}

// SetLimit adds the limit to the get search employees params
func (o *GetSearchEmployeesParams) SetLimit(limit *int64) {
	o.Limit = limit
}

// WithMobile adds the mobile to the get search employees params
func (o *GetSearchEmployeesParams) WithMobile(mobile *string) *GetSearchEmployeesParams {
	o.SetMobile(mobile)
	return o
}

// SetMobile adds the mobile to the get search employees params
func (o *GetSearchEmployeesParams) SetMobile(mobile *string) {
	o.Mobile = mobile
}

// WithOffset adds the offset to the get search employees params
func (o *GetSearchEmployeesParams) WithOffset(offset *int64) *GetSearchEmployeesParams {
	o.SetOffset(offset)
	return o
}

// SetOffset adds the offset to the get search employees params
func (o *GetSearchEmployeesParams) SetOffset(offset *int64) {
	o.Offset = offset
}

// WithPatronymic adds the patronymic to the get search employees params
func (o *GetSearchEmployeesParams) WithPatronymic(patronymic *string) *GetSearchEmployeesParams {
	o.SetPatronymic(patronymic)
	return o
}

// SetPatronymic adds the patronymic to the get search employees params
func (o *GetSearchEmployeesParams) SetPatronymic(patronymic *string) {
	o.Patronymic = patronymic
}

// WithSmartCardNumber adds the smartCardNumber to the get search employees params
func (o *GetSearchEmployeesParams) WithSmartCardNumber(smartCardNumber *string) *GetSearchEmployeesParams {
	o.SetSmartCardNumber(smartCardNumber)
	return o
}

// SetSmartCardNumber adds the smartCardNumber to the get search employees params
func (o *GetSearchEmployeesParams) SetSmartCardNumber(smartCardNumber *string) {
	o.SmartCardNumber = smartCardNumber
}

// WithSnils adds the snils to the get search employees params
func (o *GetSearchEmployeesParams) WithSnils(snils *string) *GetSearchEmployeesParams {
	o.SetSnils(snils)
	return o
}

// SetSnils adds the snils to the get search employees params
func (o *GetSearchEmployeesParams) SetSnils(snils *string) {
	o.Snils = snils
}

// WithUsername adds the username to the get search employees params
func (o *GetSearchEmployeesParams) WithUsername(username *string) *GetSearchEmployeesParams {
	o.SetUsername(username)
	return o
}

// SetUsername adds the username to the get search employees params
func (o *GetSearchEmployeesParams) SetUsername(username *string) {
	o.Username = username
}

// WriteToRequest writes these params to a swagger request
func (o *GetSearchEmployeesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Archived != nil {

		// query param archived
		var qrArchived bool
		if o.Archived != nil {
			qrArchived = *o.Archived
		}
		qArchived := swag.FormatBool(qrArchived)
		if qArchived != "" {
			if err := r.SetQueryParam("archived", qArchived); err != nil {
				return err
			}
		}

	}

	if o.ClinicGUID != nil {

		// query param clinicGUID
		var qrClinicGUID string
		if o.ClinicGUID != nil {
			qrClinicGUID = *o.ClinicGUID
		}
		qClinicGUID := qrClinicGUID
		if qClinicGUID != "" {
			if err := r.SetQueryParam("clinicGUID", qClinicGUID); err != nil {
				return err
			}
		}

	}

	if o.Email != nil {

		// query param email
		var qrEmail string
		if o.Email != nil {
			qrEmail = *o.Email
		}
		qEmail := qrEmail
		if qEmail != "" {
			if err := r.SetQueryParam("email", qEmail); err != nil {
				return err
			}
		}

	}

	if o.FirstName != nil {

		// query param firstName
		var qrFirstName string
		if o.FirstName != nil {
			qrFirstName = *o.FirstName
		}
		qFirstName := qrFirstName
		if qFirstName != "" {
			if err := r.SetQueryParam("firstName", qFirstName); err != nil {
				return err
			}
		}

	}

	if o.LastName != nil {

		// query param lastName
		var qrLastName string
		if o.LastName != nil {
			qrLastName = *o.LastName
		}
		qLastName := qrLastName
		if qLastName != "" {
			if err := r.SetQueryParam("lastName", qLastName); err != nil {
				return err
			}
		}

	}

	if o.Limit != nil {

		// query param limit
		var qrLimit int64
		if o.Limit != nil {
			qrLimit = *o.Limit
		}
		qLimit := swag.FormatInt64(qrLimit)
		if qLimit != "" {
			if err := r.SetQueryParam("limit", qLimit); err != nil {
				return err
			}
		}

	}

	if o.Mobile != nil {

		// query param mobile
		var qrMobile string
		if o.Mobile != nil {
			qrMobile = *o.Mobile
		}
		qMobile := qrMobile
		if qMobile != "" {
			if err := r.SetQueryParam("mobile", qMobile); err != nil {
				return err
			}
		}

	}

	if o.Offset != nil {

		// query param offset
		var qrOffset int64
		if o.Offset != nil {
			qrOffset = *o.Offset
		}
		qOffset := swag.FormatInt64(qrOffset)
		if qOffset != "" {
			if err := r.SetQueryParam("offset", qOffset); err != nil {
				return err
			}
		}

	}

	if o.Patronymic != nil {

		// query param patronymic
		var qrPatronymic string
		if o.Patronymic != nil {
			qrPatronymic = *o.Patronymic
		}
		qPatronymic := qrPatronymic
		if qPatronymic != "" {
			if err := r.SetQueryParam("patronymic", qPatronymic); err != nil {
				return err
			}
		}

	}

	if o.SmartCardNumber != nil {

		// query param smartCardNumber
		var qrSmartCardNumber string
		if o.SmartCardNumber != nil {
			qrSmartCardNumber = *o.SmartCardNumber
		}
		qSmartCardNumber := qrSmartCardNumber
		if qSmartCardNumber != "" {
			if err := r.SetQueryParam("smartCardNumber", qSmartCardNumber); err != nil {
				return err
			}
		}

	}

	if o.Snils != nil {

		// query param snils
		var qrSnils string
		if o.Snils != nil {
			qrSnils = *o.Snils
		}
		qSnils := qrSnils
		if qSnils != "" {
			if err := r.SetQueryParam("snils", qSnils); err != nil {
				return err
			}
		}

	}

	if o.Username != nil {

		// query param username
		var qrUsername string
		if o.Username != nil {
			qrUsername = *o.Username
		}
		qUsername := qrUsername
		if qUsername != "" {
			if err := r.SetQueryParam("username", qUsername); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
