// Code generated by go-swagger; DO NOT EDIT.

package search

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	models "repo.nefrosovet.ru/maximus-platform/auth/index/models"
)

// GetSearchEmployeesReader is a Reader for the GetSearchEmployees structure.
type GetSearchEmployeesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSearchEmployeesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetSearchEmployeesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetSearchEmployeesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetSearchEmployeesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetSearchEmployeesOK creates a GetSearchEmployeesOK with default headers values
func NewGetSearchEmployeesOK() *GetSearchEmployeesOK {
	return &GetSearchEmployeesOK{}
}

/*GetSearchEmployeesOK handles this case with default header values.

Коллекция сотрудников
*/
type GetSearchEmployeesOK struct {
	Payload *GetSearchEmployeesOKBody
}

func (o *GetSearchEmployeesOK) Error() string {
	return fmt.Sprintf("[GET /search/employees][%d] getSearchEmployeesOK  %+v", 200, o.Payload)
}

func (o *GetSearchEmployeesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetSearchEmployeesOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSearchEmployeesBadRequest creates a GetSearchEmployeesBadRequest with default headers values
func NewGetSearchEmployeesBadRequest() *GetSearchEmployeesBadRequest {
	return &GetSearchEmployeesBadRequest{}
}

/*GetSearchEmployeesBadRequest handles this case with default header values.

Validation error
*/
type GetSearchEmployeesBadRequest struct {
	Payload *GetSearchEmployeesBadRequestBody
}

func (o *GetSearchEmployeesBadRequest) Error() string {
	return fmt.Sprintf("[GET /search/employees][%d] getSearchEmployeesBadRequest  %+v", 400, o.Payload)
}

func (o *GetSearchEmployeesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetSearchEmployeesBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSearchEmployeesNotFound creates a GetSearchEmployeesNotFound with default headers values
func NewGetSearchEmployeesNotFound() *GetSearchEmployeesNotFound {
	return &GetSearchEmployeesNotFound{}
}

/*GetSearchEmployeesNotFound handles this case with default header values.

Not found
*/
type GetSearchEmployeesNotFound struct {
	Payload *GetSearchEmployeesNotFoundBody
}

func (o *GetSearchEmployeesNotFound) Error() string {
	return fmt.Sprintf("[GET /search/employees][%d] getSearchEmployeesNotFound  %+v", 404, o.Payload)
}

func (o *GetSearchEmployeesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetSearchEmployeesNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetSearchEmployeesBadRequestBody get search employees bad request body
swagger:model GetSearchEmployeesBadRequestBody
*/
type GetSearchEmployeesBadRequestBody struct {
	models.Error400Data
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (o *GetSearchEmployeesBadRequestBody) UnmarshalJSON(raw []byte) error {
	// GetSearchEmployeesBadRequestBodyAO0
	var getSearchEmployeesBadRequestBodyAO0 models.Error400Data
	if err := swag.ReadJSON(raw, &getSearchEmployeesBadRequestBodyAO0); err != nil {
		return err
	}
	o.Error400Data = getSearchEmployeesBadRequestBodyAO0

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (o GetSearchEmployeesBadRequestBody) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 1)

	getSearchEmployeesBadRequestBodyAO0, err := swag.WriteJSON(o.Error400Data)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, getSearchEmployeesBadRequestBodyAO0)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this get search employees bad request body
func (o *GetSearchEmployeesBadRequestBody) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with models.Error400Data
	if err := o.Error400Data.Validate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (o *GetSearchEmployeesBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetSearchEmployeesBadRequestBody) UnmarshalBinary(b []byte) error {
	var res GetSearchEmployeesBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetSearchEmployeesNotFoundBody get search employees not found body
swagger:model GetSearchEmployeesNotFoundBody
*/
type GetSearchEmployeesNotFoundBody struct {
	models.Error404Data
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (o *GetSearchEmployeesNotFoundBody) UnmarshalJSON(raw []byte) error {
	// GetSearchEmployeesNotFoundBodyAO0
	var getSearchEmployeesNotFoundBodyAO0 models.Error404Data
	if err := swag.ReadJSON(raw, &getSearchEmployeesNotFoundBodyAO0); err != nil {
		return err
	}
	o.Error404Data = getSearchEmployeesNotFoundBodyAO0

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (o GetSearchEmployeesNotFoundBody) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 1)

	getSearchEmployeesNotFoundBodyAO0, err := swag.WriteJSON(o.Error404Data)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, getSearchEmployeesNotFoundBodyAO0)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this get search employees not found body
func (o *GetSearchEmployeesNotFoundBody) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with models.Error404Data
	if err := o.Error404Data.Validate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (o *GetSearchEmployeesNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetSearchEmployeesNotFoundBody) UnmarshalBinary(b []byte) error {
	var res GetSearchEmployeesNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetSearchEmployeesOKBody get search employees o k body
swagger:model GetSearchEmployeesOKBody
*/
type GetSearchEmployeesOKBody struct {
	models.SuccessData

	// data
	Data []*DataItems0 `json:"data"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (o *GetSearchEmployeesOKBody) UnmarshalJSON(raw []byte) error {
	// GetSearchEmployeesOKBodyAO0
	var getSearchEmployeesOKBodyAO0 models.SuccessData
	if err := swag.ReadJSON(raw, &getSearchEmployeesOKBodyAO0); err != nil {
		return err
	}
	o.SuccessData = getSearchEmployeesOKBodyAO0

	// GetSearchEmployeesOKBodyAO1
	var dataGetSearchEmployeesOKBodyAO1 struct {
		Data []*DataItems0 `json:"data,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataGetSearchEmployeesOKBodyAO1); err != nil {
		return err
	}

	o.Data = dataGetSearchEmployeesOKBodyAO1.Data

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (o GetSearchEmployeesOKBody) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 2)

	getSearchEmployeesOKBodyAO0, err := swag.WriteJSON(o.SuccessData)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, getSearchEmployeesOKBodyAO0)

	var dataGetSearchEmployeesOKBodyAO1 struct {
		Data []*DataItems0 `json:"data,omitempty"`
	}

	dataGetSearchEmployeesOKBodyAO1.Data = o.Data

	jsonDataGetSearchEmployeesOKBodyAO1, errGetSearchEmployeesOKBodyAO1 := swag.WriteJSON(dataGetSearchEmployeesOKBodyAO1)
	if errGetSearchEmployeesOKBodyAO1 != nil {
		return nil, errGetSearchEmployeesOKBodyAO1
	}
	_parts = append(_parts, jsonDataGetSearchEmployeesOKBodyAO1)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this get search employees o k body
func (o *GetSearchEmployeesOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with models.SuccessData
	if err := o.SuccessData.Validate(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetSearchEmployeesOKBody) validateData(formats strfmt.Registry) error {

	if swag.IsZero(o.Data) { // not required
		return nil
	}

	for i := 0; i < len(o.Data); i++ {
		if swag.IsZero(o.Data[i]) { // not required
			continue
		}

		if o.Data[i] != nil {
			if err := o.Data[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getSearchEmployeesOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetSearchEmployeesOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetSearchEmployeesOKBody) UnmarshalBinary(b []byte) error {
	var res GetSearchEmployeesOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
