// Code generated by go-swagger; DO NOT EDIT.

package clinic_employees

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	models "repo.nefrosovet.ru/maximus-platform/auth/index/models"
)

// GetClinicsClinicGUIDEmployeesReader is a Reader for the GetClinicsClinicGUIDEmployees structure.
type GetClinicsClinicGUIDEmployeesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetClinicsClinicGUIDEmployeesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetClinicsClinicGUIDEmployeesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewGetClinicsClinicGUIDEmployeesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetClinicsClinicGUIDEmployeesOK creates a GetClinicsClinicGUIDEmployeesOK with default headers values
func NewGetClinicsClinicGUIDEmployeesOK() *GetClinicsClinicGUIDEmployeesOK {
	return &GetClinicsClinicGUIDEmployeesOK{}
}

/*GetClinicsClinicGUIDEmployeesOK handles this case with default header values.

Коллекция сотрудников в клинике
*/
type GetClinicsClinicGUIDEmployeesOK struct {
	Payload *GetClinicsClinicGUIDEmployeesOKBody
}

func (o *GetClinicsClinicGUIDEmployeesOK) Error() string {
	return fmt.Sprintf("[GET /clinics/{clinicGUID}/employees][%d] getClinicsClinicGuidEmployeesOK  %+v", 200, o.Payload)
}

func (o *GetClinicsClinicGUIDEmployeesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetClinicsClinicGUIDEmployeesOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClinicsClinicGUIDEmployeesNotFound creates a GetClinicsClinicGUIDEmployeesNotFound with default headers values
func NewGetClinicsClinicGUIDEmployeesNotFound() *GetClinicsClinicGUIDEmployeesNotFound {
	return &GetClinicsClinicGUIDEmployeesNotFound{}
}

/*GetClinicsClinicGUIDEmployeesNotFound handles this case with default header values.

Not found
*/
type GetClinicsClinicGUIDEmployeesNotFound struct {
	Payload *GetClinicsClinicGUIDEmployeesNotFoundBody
}

func (o *GetClinicsClinicGUIDEmployeesNotFound) Error() string {
	return fmt.Sprintf("[GET /clinics/{clinicGUID}/employees][%d] getClinicsClinicGuidEmployeesNotFound  %+v", 404, o.Payload)
}

func (o *GetClinicsClinicGUIDEmployeesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetClinicsClinicGUIDEmployeesNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetClinicsClinicGUIDEmployeesNotFoundBody get clinics clinic GUID employees not found body
swagger:model GetClinicsClinicGUIDEmployeesNotFoundBody
*/
type GetClinicsClinicGUIDEmployeesNotFoundBody struct {
	models.Error404Data
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (o *GetClinicsClinicGUIDEmployeesNotFoundBody) UnmarshalJSON(raw []byte) error {
	// GetClinicsClinicGUIDEmployeesNotFoundBodyAO0
	var getClinicsClinicGUIDEmployeesNotFoundBodyAO0 models.Error404Data
	if err := swag.ReadJSON(raw, &getClinicsClinicGUIDEmployeesNotFoundBodyAO0); err != nil {
		return err
	}
	o.Error404Data = getClinicsClinicGUIDEmployeesNotFoundBodyAO0

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (o GetClinicsClinicGUIDEmployeesNotFoundBody) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 1)

	getClinicsClinicGUIDEmployeesNotFoundBodyAO0, err := swag.WriteJSON(o.Error404Data)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, getClinicsClinicGUIDEmployeesNotFoundBodyAO0)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this get clinics clinic GUID employees not found body
func (o *GetClinicsClinicGUIDEmployeesNotFoundBody) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with models.Error404Data
	if err := o.Error404Data.Validate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (o *GetClinicsClinicGUIDEmployeesNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetClinicsClinicGUIDEmployeesNotFoundBody) UnmarshalBinary(b []byte) error {
	var res GetClinicsClinicGUIDEmployeesNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetClinicsClinicGUIDEmployeesOKBody get clinics clinic GUID employees o k body
swagger:model GetClinicsClinicGUIDEmployeesOKBody
*/
type GetClinicsClinicGUIDEmployeesOKBody struct {
	models.SuccessData

	// data
	Data []string `json:"data"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (o *GetClinicsClinicGUIDEmployeesOKBody) UnmarshalJSON(raw []byte) error {
	// GetClinicsClinicGUIDEmployeesOKBodyAO0
	var getClinicsClinicGUIDEmployeesOKBodyAO0 models.SuccessData
	if err := swag.ReadJSON(raw, &getClinicsClinicGUIDEmployeesOKBodyAO0); err != nil {
		return err
	}
	o.SuccessData = getClinicsClinicGUIDEmployeesOKBodyAO0

	// GetClinicsClinicGUIDEmployeesOKBodyAO1
	var dataGetClinicsClinicGUIDEmployeesOKBodyAO1 struct {
		Data []string `json:"data,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataGetClinicsClinicGUIDEmployeesOKBodyAO1); err != nil {
		return err
	}

	o.Data = dataGetClinicsClinicGUIDEmployeesOKBodyAO1.Data

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (o GetClinicsClinicGUIDEmployeesOKBody) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 2)

	getClinicsClinicGUIDEmployeesOKBodyAO0, err := swag.WriteJSON(o.SuccessData)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, getClinicsClinicGUIDEmployeesOKBodyAO0)

	var dataGetClinicsClinicGUIDEmployeesOKBodyAO1 struct {
		Data []string `json:"data,omitempty"`
	}

	dataGetClinicsClinicGUIDEmployeesOKBodyAO1.Data = o.Data

	jsonDataGetClinicsClinicGUIDEmployeesOKBodyAO1, errGetClinicsClinicGUIDEmployeesOKBodyAO1 := swag.WriteJSON(dataGetClinicsClinicGUIDEmployeesOKBodyAO1)
	if errGetClinicsClinicGUIDEmployeesOKBodyAO1 != nil {
		return nil, errGetClinicsClinicGUIDEmployeesOKBodyAO1
	}
	_parts = append(_parts, jsonDataGetClinicsClinicGUIDEmployeesOKBodyAO1)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this get clinics clinic GUID employees o k body
func (o *GetClinicsClinicGUIDEmployeesOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with models.SuccessData
	if err := o.SuccessData.Validate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (o *GetClinicsClinicGUIDEmployeesOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetClinicsClinicGUIDEmployeesOKBody) UnmarshalBinary(b []byte) error {
	var res GetClinicsClinicGUIDEmployeesOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
