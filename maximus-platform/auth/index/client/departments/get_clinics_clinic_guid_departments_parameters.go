// Code generated by go-swagger; DO NOT EDIT.

package departments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetClinicsClinicGUIDDepartmentsParams creates a new GetClinicsClinicGUIDDepartmentsParams object
// with the default values initialized.
func NewGetClinicsClinicGUIDDepartmentsParams() *GetClinicsClinicGUIDDepartmentsParams {
	var ()
	return &GetClinicsClinicGUIDDepartmentsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetClinicsClinicGUIDDepartmentsParamsWithTimeout creates a new GetClinicsClinicGUIDDepartmentsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetClinicsClinicGUIDDepartmentsParamsWithTimeout(timeout time.Duration) *GetClinicsClinicGUIDDepartmentsParams {
	var ()
	return &GetClinicsClinicGUIDDepartmentsParams{

		timeout: timeout,
	}
}

// NewGetClinicsClinicGUIDDepartmentsParamsWithContext creates a new GetClinicsClinicGUIDDepartmentsParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetClinicsClinicGUIDDepartmentsParamsWithContext(ctx context.Context) *GetClinicsClinicGUIDDepartmentsParams {
	var ()
	return &GetClinicsClinicGUIDDepartmentsParams{

		Context: ctx,
	}
}

// NewGetClinicsClinicGUIDDepartmentsParamsWithHTTPClient creates a new GetClinicsClinicGUIDDepartmentsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetClinicsClinicGUIDDepartmentsParamsWithHTTPClient(client *http.Client) *GetClinicsClinicGUIDDepartmentsParams {
	var ()
	return &GetClinicsClinicGUIDDepartmentsParams{
		HTTPClient: client,
	}
}

/*GetClinicsClinicGUIDDepartmentsParams contains all the parameters to send to the API endpoint
for the get clinics clinic GUID departments operation typically these are written to a http.Request
*/
type GetClinicsClinicGUIDDepartmentsParams struct {

	/*ClinicGUID
	  GUID клиники

	*/
	ClinicGUID string
	/*Limit
	  Лимит выдачи

	*/
	Limit *int64
	/*Offset
	  Шаг выдачи

	*/
	Offset *int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get clinics clinic GUID departments params
func (o *GetClinicsClinicGUIDDepartmentsParams) WithTimeout(timeout time.Duration) *GetClinicsClinicGUIDDepartmentsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get clinics clinic GUID departments params
func (o *GetClinicsClinicGUIDDepartmentsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get clinics clinic GUID departments params
func (o *GetClinicsClinicGUIDDepartmentsParams) WithContext(ctx context.Context) *GetClinicsClinicGUIDDepartmentsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get clinics clinic GUID departments params
func (o *GetClinicsClinicGUIDDepartmentsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get clinics clinic GUID departments params
func (o *GetClinicsClinicGUIDDepartmentsParams) WithHTTPClient(client *http.Client) *GetClinicsClinicGUIDDepartmentsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get clinics clinic GUID departments params
func (o *GetClinicsClinicGUIDDepartmentsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithClinicGUID adds the clinicGUID to the get clinics clinic GUID departments params
func (o *GetClinicsClinicGUIDDepartmentsParams) WithClinicGUID(clinicGUID string) *GetClinicsClinicGUIDDepartmentsParams {
	o.SetClinicGUID(clinicGUID)
	return o
}

// SetClinicGUID adds the clinicGuid to the get clinics clinic GUID departments params
func (o *GetClinicsClinicGUIDDepartmentsParams) SetClinicGUID(clinicGUID string) {
	o.ClinicGUID = clinicGUID
}

// WithLimit adds the limit to the get clinics clinic GUID departments params
func (o *GetClinicsClinicGUIDDepartmentsParams) WithLimit(limit *int64) *GetClinicsClinicGUIDDepartmentsParams {
	o.SetLimit(limit)
	return o
}

// SetLimit adds the limit to the get clinics clinic GUID departments params
func (o *GetClinicsClinicGUIDDepartmentsParams) SetLimit(limit *int64) {
	o.Limit = limit
}

// WithOffset adds the offset to the get clinics clinic GUID departments params
func (o *GetClinicsClinicGUIDDepartmentsParams) WithOffset(offset *int64) *GetClinicsClinicGUIDDepartmentsParams {
	o.SetOffset(offset)
	return o
}

// SetOffset adds the offset to the get clinics clinic GUID departments params
func (o *GetClinicsClinicGUIDDepartmentsParams) SetOffset(offset *int64) {
	o.Offset = offset
}

// WriteToRequest writes these params to a swagger request
func (o *GetClinicsClinicGUIDDepartmentsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param clinicGUID
	if err := r.SetPathParam("clinicGUID", o.ClinicGUID); err != nil {
		return err
	}

	if o.Limit != nil {

		// query param limit
		var qrLimit int64
		if o.Limit != nil {
			qrLimit = *o.Limit
		}
		qLimit := swag.FormatInt64(qrLimit)
		if qLimit != "" {
			if err := r.SetQueryParam("limit", qLimit); err != nil {
				return err
			}
		}

	}

	if o.Offset != nil {

		// query param offset
		var qrOffset int64
		if o.Offset != nil {
			qrOffset = *o.Offset
		}
		qOffset := swag.FormatInt64(qrOffset)
		if qOffset != "" {
			if err := r.SetQueryParam("offset", qOffset); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
