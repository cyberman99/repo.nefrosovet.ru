// Code generated by go-swagger; DO NOT EDIT.

package employees

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	models "repo.nefrosovet.ru/maximus-platform/auth/index/models"
)

// PutEmployeesEmployeeGUIDReader is a Reader for the PutEmployeesEmployeeGUID structure.
type PutEmployeesEmployeeGUIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutEmployeesEmployeeGUIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPutEmployeesEmployeeGUIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPutEmployeesEmployeeGUIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPutEmployeesEmployeeGUIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewPutEmployeesEmployeeGUIDMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutEmployeesEmployeeGUIDOK creates a PutEmployeesEmployeeGUIDOK with default headers values
func NewPutEmployeesEmployeeGUIDOK() *PutEmployeesEmployeeGUIDOK {
	return &PutEmployeesEmployeeGUIDOK{}
}

/*PutEmployeesEmployeeGUIDOK handles this case with default header values.

Коллекция сотрудников
*/
type PutEmployeesEmployeeGUIDOK struct {
	Payload *PutEmployeesEmployeeGUIDOKBody
}

func (o *PutEmployeesEmployeeGUIDOK) Error() string {
	return fmt.Sprintf("[PUT /employees/{employeeGUID}][%d] putEmployeesEmployeeGuidOK  %+v", 200, o.Payload)
}

func (o *PutEmployeesEmployeeGUIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PutEmployeesEmployeeGUIDOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutEmployeesEmployeeGUIDBadRequest creates a PutEmployeesEmployeeGUIDBadRequest with default headers values
func NewPutEmployeesEmployeeGUIDBadRequest() *PutEmployeesEmployeeGUIDBadRequest {
	return &PutEmployeesEmployeeGUIDBadRequest{}
}

/*PutEmployeesEmployeeGUIDBadRequest handles this case with default header values.

Validation error
*/
type PutEmployeesEmployeeGUIDBadRequest struct {
	Payload *PutEmployeesEmployeeGUIDBadRequestBody
}

func (o *PutEmployeesEmployeeGUIDBadRequest) Error() string {
	return fmt.Sprintf("[PUT /employees/{employeeGUID}][%d] putEmployeesEmployeeGuidBadRequest  %+v", 400, o.Payload)
}

func (o *PutEmployeesEmployeeGUIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PutEmployeesEmployeeGUIDBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutEmployeesEmployeeGUIDNotFound creates a PutEmployeesEmployeeGUIDNotFound with default headers values
func NewPutEmployeesEmployeeGUIDNotFound() *PutEmployeesEmployeeGUIDNotFound {
	return &PutEmployeesEmployeeGUIDNotFound{}
}

/*PutEmployeesEmployeeGUIDNotFound handles this case with default header values.

Not found
*/
type PutEmployeesEmployeeGUIDNotFound struct {
	Payload *PutEmployeesEmployeeGUIDNotFoundBody
}

func (o *PutEmployeesEmployeeGUIDNotFound) Error() string {
	return fmt.Sprintf("[PUT /employees/{employeeGUID}][%d] putEmployeesEmployeeGuidNotFound  %+v", 404, o.Payload)
}

func (o *PutEmployeesEmployeeGUIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PutEmployeesEmployeeGUIDNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutEmployeesEmployeeGUIDMethodNotAllowed creates a PutEmployeesEmployeeGUIDMethodNotAllowed with default headers values
func NewPutEmployeesEmployeeGUIDMethodNotAllowed() *PutEmployeesEmployeeGUIDMethodNotAllowed {
	return &PutEmployeesEmployeeGUIDMethodNotAllowed{}
}

/*PutEmployeesEmployeeGUIDMethodNotAllowed handles this case with default header values.

Invalid Method
*/
type PutEmployeesEmployeeGUIDMethodNotAllowed struct {
	Payload *PutEmployeesEmployeeGUIDMethodNotAllowedBody
}

func (o *PutEmployeesEmployeeGUIDMethodNotAllowed) Error() string {
	return fmt.Sprintf("[PUT /employees/{employeeGUID}][%d] putEmployeesEmployeeGuidMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *PutEmployeesEmployeeGUIDMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PutEmployeesEmployeeGUIDMethodNotAllowedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*PutEmployeesEmployeeGUIDBadRequestBody put employees employee GUID bad request body
swagger:model PutEmployeesEmployeeGUIDBadRequestBody
*/
type PutEmployeesEmployeeGUIDBadRequestBody struct {
	models.Error400Data
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (o *PutEmployeesEmployeeGUIDBadRequestBody) UnmarshalJSON(raw []byte) error {
	// PutEmployeesEmployeeGUIDBadRequestBodyAO0
	var putEmployeesEmployeeGUIDBadRequestBodyAO0 models.Error400Data
	if err := swag.ReadJSON(raw, &putEmployeesEmployeeGUIDBadRequestBodyAO0); err != nil {
		return err
	}
	o.Error400Data = putEmployeesEmployeeGUIDBadRequestBodyAO0

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (o PutEmployeesEmployeeGUIDBadRequestBody) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 1)

	putEmployeesEmployeeGUIDBadRequestBodyAO0, err := swag.WriteJSON(o.Error400Data)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, putEmployeesEmployeeGUIDBadRequestBodyAO0)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this put employees employee GUID bad request body
func (o *PutEmployeesEmployeeGUIDBadRequestBody) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with models.Error400Data
	if err := o.Error400Data.Validate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (o *PutEmployeesEmployeeGUIDBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PutEmployeesEmployeeGUIDBadRequestBody) UnmarshalBinary(b []byte) error {
	var res PutEmployeesEmployeeGUIDBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PutEmployeesEmployeeGUIDBody put employees employee GUID body
swagger:model PutEmployeesEmployeeGUIDBody
*/
type PutEmployeesEmployeeGUIDBody struct {
	models.EmployeeObject

	models.PasswordObject
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (o *PutEmployeesEmployeeGUIDBody) UnmarshalJSON(raw []byte) error {
	// PutEmployeesEmployeeGUIDParamsBodyAO0
	var putEmployeesEmployeeGUIDParamsBodyAO0 models.EmployeeObject
	if err := swag.ReadJSON(raw, &putEmployeesEmployeeGUIDParamsBodyAO0); err != nil {
		return err
	}
	o.EmployeeObject = putEmployeesEmployeeGUIDParamsBodyAO0

	// PutEmployeesEmployeeGUIDParamsBodyAO1
	var putEmployeesEmployeeGUIDParamsBodyAO1 models.PasswordObject
	if err := swag.ReadJSON(raw, &putEmployeesEmployeeGUIDParamsBodyAO1); err != nil {
		return err
	}
	o.PasswordObject = putEmployeesEmployeeGUIDParamsBodyAO1

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (o PutEmployeesEmployeeGUIDBody) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 2)

	putEmployeesEmployeeGUIDParamsBodyAO0, err := swag.WriteJSON(o.EmployeeObject)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, putEmployeesEmployeeGUIDParamsBodyAO0)

	putEmployeesEmployeeGUIDParamsBodyAO1, err := swag.WriteJSON(o.PasswordObject)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, putEmployeesEmployeeGUIDParamsBodyAO1)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this put employees employee GUID body
func (o *PutEmployeesEmployeeGUIDBody) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with models.EmployeeObject
	if err := o.EmployeeObject.Validate(formats); err != nil {
		res = append(res, err)
	}
	// validation for a type composition with models.PasswordObject
	if err := o.PasswordObject.Validate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (o *PutEmployeesEmployeeGUIDBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PutEmployeesEmployeeGUIDBody) UnmarshalBinary(b []byte) error {
	var res PutEmployeesEmployeeGUIDBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PutEmployeesEmployeeGUIDMethodNotAllowedBody put employees employee GUID method not allowed body
swagger:model PutEmployeesEmployeeGUIDMethodNotAllowedBody
*/
type PutEmployeesEmployeeGUIDMethodNotAllowedBody struct {
	models.Error405Data
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (o *PutEmployeesEmployeeGUIDMethodNotAllowedBody) UnmarshalJSON(raw []byte) error {
	// PutEmployeesEmployeeGUIDMethodNotAllowedBodyAO0
	var putEmployeesEmployeeGUIDMethodNotAllowedBodyAO0 models.Error405Data
	if err := swag.ReadJSON(raw, &putEmployeesEmployeeGUIDMethodNotAllowedBodyAO0); err != nil {
		return err
	}
	o.Error405Data = putEmployeesEmployeeGUIDMethodNotAllowedBodyAO0

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (o PutEmployeesEmployeeGUIDMethodNotAllowedBody) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 1)

	putEmployeesEmployeeGUIDMethodNotAllowedBodyAO0, err := swag.WriteJSON(o.Error405Data)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, putEmployeesEmployeeGUIDMethodNotAllowedBodyAO0)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this put employees employee GUID method not allowed body
func (o *PutEmployeesEmployeeGUIDMethodNotAllowedBody) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with models.Error405Data
	if err := o.Error405Data.Validate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (o *PutEmployeesEmployeeGUIDMethodNotAllowedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PutEmployeesEmployeeGUIDMethodNotAllowedBody) UnmarshalBinary(b []byte) error {
	var res PutEmployeesEmployeeGUIDMethodNotAllowedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PutEmployeesEmployeeGUIDNotFoundBody put employees employee GUID not found body
swagger:model PutEmployeesEmployeeGUIDNotFoundBody
*/
type PutEmployeesEmployeeGUIDNotFoundBody struct {
	models.Error404Data
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (o *PutEmployeesEmployeeGUIDNotFoundBody) UnmarshalJSON(raw []byte) error {
	// PutEmployeesEmployeeGUIDNotFoundBodyAO0
	var putEmployeesEmployeeGUIDNotFoundBodyAO0 models.Error404Data
	if err := swag.ReadJSON(raw, &putEmployeesEmployeeGUIDNotFoundBodyAO0); err != nil {
		return err
	}
	o.Error404Data = putEmployeesEmployeeGUIDNotFoundBodyAO0

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (o PutEmployeesEmployeeGUIDNotFoundBody) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 1)

	putEmployeesEmployeeGUIDNotFoundBodyAO0, err := swag.WriteJSON(o.Error404Data)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, putEmployeesEmployeeGUIDNotFoundBodyAO0)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this put employees employee GUID not found body
func (o *PutEmployeesEmployeeGUIDNotFoundBody) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with models.Error404Data
	if err := o.Error404Data.Validate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (o *PutEmployeesEmployeeGUIDNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PutEmployeesEmployeeGUIDNotFoundBody) UnmarshalBinary(b []byte) error {
	var res PutEmployeesEmployeeGUIDNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PutEmployeesEmployeeGUIDOKBody put employees employee GUID o k body
swagger:model PutEmployeesEmployeeGUIDOKBody
*/
type PutEmployeesEmployeeGUIDOKBody struct {
	models.SuccessData

	// data
	Data []*DataItems0 `json:"data"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (o *PutEmployeesEmployeeGUIDOKBody) UnmarshalJSON(raw []byte) error {
	// PutEmployeesEmployeeGUIDOKBodyAO0
	var putEmployeesEmployeeGUIDOKBodyAO0 models.SuccessData
	if err := swag.ReadJSON(raw, &putEmployeesEmployeeGUIDOKBodyAO0); err != nil {
		return err
	}
	o.SuccessData = putEmployeesEmployeeGUIDOKBodyAO0

	// PutEmployeesEmployeeGUIDOKBodyAO1
	var dataPutEmployeesEmployeeGUIDOKBodyAO1 struct {
		Data []*DataItems0 `json:"data,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataPutEmployeesEmployeeGUIDOKBodyAO1); err != nil {
		return err
	}

	o.Data = dataPutEmployeesEmployeeGUIDOKBodyAO1.Data

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (o PutEmployeesEmployeeGUIDOKBody) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 2)

	putEmployeesEmployeeGUIDOKBodyAO0, err := swag.WriteJSON(o.SuccessData)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, putEmployeesEmployeeGUIDOKBodyAO0)

	var dataPutEmployeesEmployeeGUIDOKBodyAO1 struct {
		Data []*DataItems0 `json:"data,omitempty"`
	}

	dataPutEmployeesEmployeeGUIDOKBodyAO1.Data = o.Data

	jsonDataPutEmployeesEmployeeGUIDOKBodyAO1, errPutEmployeesEmployeeGUIDOKBodyAO1 := swag.WriteJSON(dataPutEmployeesEmployeeGUIDOKBodyAO1)
	if errPutEmployeesEmployeeGUIDOKBodyAO1 != nil {
		return nil, errPutEmployeesEmployeeGUIDOKBodyAO1
	}
	_parts = append(_parts, jsonDataPutEmployeesEmployeeGUIDOKBodyAO1)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this put employees employee GUID o k body
func (o *PutEmployeesEmployeeGUIDOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with models.SuccessData
	if err := o.SuccessData.Validate(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PutEmployeesEmployeeGUIDOKBody) validateData(formats strfmt.Registry) error {

	if swag.IsZero(o.Data) { // not required
		return nil
	}

	for i := 0; i < len(o.Data); i++ {
		if swag.IsZero(o.Data[i]) { // not required
			continue
		}

		if o.Data[i] != nil {
			if err := o.Data[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("putEmployeesEmployeeGuidOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *PutEmployeesEmployeeGUIDOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PutEmployeesEmployeeGUIDOKBody) UnmarshalBinary(b []byte) error {
	var res PutEmployeesEmployeeGUIDOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
