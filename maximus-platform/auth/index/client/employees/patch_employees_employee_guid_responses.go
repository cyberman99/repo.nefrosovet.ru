// Code generated by go-swagger; DO NOT EDIT.

package employees

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	models "repo.nefrosovet.ru/maximus-platform/auth/index/models"
)

// PatchEmployeesEmployeeGUIDReader is a Reader for the PatchEmployeesEmployeeGUID structure.
type PatchEmployeesEmployeeGUIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchEmployeesEmployeeGUIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPatchEmployeesEmployeeGUIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPatchEmployeesEmployeeGUIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPatchEmployeesEmployeeGUIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewPatchEmployeesEmployeeGUIDMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPatchEmployeesEmployeeGUIDOK creates a PatchEmployeesEmployeeGUIDOK with default headers values
func NewPatchEmployeesEmployeeGUIDOK() *PatchEmployeesEmployeeGUIDOK {
	return &PatchEmployeesEmployeeGUIDOK{}
}

/*PatchEmployeesEmployeeGUIDOK handles this case with default header values.

Коллекция сотрудников
*/
type PatchEmployeesEmployeeGUIDOK struct {
	Payload *PatchEmployeesEmployeeGUIDOKBody
}

func (o *PatchEmployeesEmployeeGUIDOK) Error() string {
	return fmt.Sprintf("[PATCH /employees/{employeeGUID}][%d] patchEmployeesEmployeeGuidOK  %+v", 200, o.Payload)
}

func (o *PatchEmployeesEmployeeGUIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PatchEmployeesEmployeeGUIDOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchEmployeesEmployeeGUIDBadRequest creates a PatchEmployeesEmployeeGUIDBadRequest with default headers values
func NewPatchEmployeesEmployeeGUIDBadRequest() *PatchEmployeesEmployeeGUIDBadRequest {
	return &PatchEmployeesEmployeeGUIDBadRequest{}
}

/*PatchEmployeesEmployeeGUIDBadRequest handles this case with default header values.

Validation error
*/
type PatchEmployeesEmployeeGUIDBadRequest struct {
	Payload *PatchEmployeesEmployeeGUIDBadRequestBody
}

func (o *PatchEmployeesEmployeeGUIDBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /employees/{employeeGUID}][%d] patchEmployeesEmployeeGuidBadRequest  %+v", 400, o.Payload)
}

func (o *PatchEmployeesEmployeeGUIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PatchEmployeesEmployeeGUIDBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchEmployeesEmployeeGUIDNotFound creates a PatchEmployeesEmployeeGUIDNotFound with default headers values
func NewPatchEmployeesEmployeeGUIDNotFound() *PatchEmployeesEmployeeGUIDNotFound {
	return &PatchEmployeesEmployeeGUIDNotFound{}
}

/*PatchEmployeesEmployeeGUIDNotFound handles this case with default header values.

Not found
*/
type PatchEmployeesEmployeeGUIDNotFound struct {
	Payload *PatchEmployeesEmployeeGUIDNotFoundBody
}

func (o *PatchEmployeesEmployeeGUIDNotFound) Error() string {
	return fmt.Sprintf("[PATCH /employees/{employeeGUID}][%d] patchEmployeesEmployeeGuidNotFound  %+v", 404, o.Payload)
}

func (o *PatchEmployeesEmployeeGUIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PatchEmployeesEmployeeGUIDNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchEmployeesEmployeeGUIDMethodNotAllowed creates a PatchEmployeesEmployeeGUIDMethodNotAllowed with default headers values
func NewPatchEmployeesEmployeeGUIDMethodNotAllowed() *PatchEmployeesEmployeeGUIDMethodNotAllowed {
	return &PatchEmployeesEmployeeGUIDMethodNotAllowed{}
}

/*PatchEmployeesEmployeeGUIDMethodNotAllowed handles this case with default header values.

Invalid Method
*/
type PatchEmployeesEmployeeGUIDMethodNotAllowed struct {
	Payload *PatchEmployeesEmployeeGUIDMethodNotAllowedBody
}

func (o *PatchEmployeesEmployeeGUIDMethodNotAllowed) Error() string {
	return fmt.Sprintf("[PATCH /employees/{employeeGUID}][%d] patchEmployeesEmployeeGuidMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *PatchEmployeesEmployeeGUIDMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PatchEmployeesEmployeeGUIDMethodNotAllowedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*PatchEmployeesEmployeeGUIDBadRequestBody patch employees employee GUID bad request body
swagger:model PatchEmployeesEmployeeGUIDBadRequestBody
*/
type PatchEmployeesEmployeeGUIDBadRequestBody struct {
	models.Error400Data
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (o *PatchEmployeesEmployeeGUIDBadRequestBody) UnmarshalJSON(raw []byte) error {
	// PatchEmployeesEmployeeGUIDBadRequestBodyAO0
	var patchEmployeesEmployeeGUIDBadRequestBodyAO0 models.Error400Data
	if err := swag.ReadJSON(raw, &patchEmployeesEmployeeGUIDBadRequestBodyAO0); err != nil {
		return err
	}
	o.Error400Data = patchEmployeesEmployeeGUIDBadRequestBodyAO0

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (o PatchEmployeesEmployeeGUIDBadRequestBody) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 1)

	patchEmployeesEmployeeGUIDBadRequestBodyAO0, err := swag.WriteJSON(o.Error400Data)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, patchEmployeesEmployeeGUIDBadRequestBodyAO0)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this patch employees employee GUID bad request body
func (o *PatchEmployeesEmployeeGUIDBadRequestBody) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with models.Error400Data
	if err := o.Error400Data.Validate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (o *PatchEmployeesEmployeeGUIDBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchEmployeesEmployeeGUIDBadRequestBody) UnmarshalBinary(b []byte) error {
	var res PatchEmployeesEmployeeGUIDBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchEmployeesEmployeeGUIDBody patch employees employee GUID body
swagger:model PatchEmployeesEmployeeGUIDBody
*/
type PatchEmployeesEmployeeGUIDBody struct {
	models.EmployeeObject

	models.PasswordObject
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (o *PatchEmployeesEmployeeGUIDBody) UnmarshalJSON(raw []byte) error {
	// PatchEmployeesEmployeeGUIDParamsBodyAO0
	var patchEmployeesEmployeeGUIDParamsBodyAO0 models.EmployeeObject
	if err := swag.ReadJSON(raw, &patchEmployeesEmployeeGUIDParamsBodyAO0); err != nil {
		return err
	}
	o.EmployeeObject = patchEmployeesEmployeeGUIDParamsBodyAO0

	// PatchEmployeesEmployeeGUIDParamsBodyAO1
	var patchEmployeesEmployeeGUIDParamsBodyAO1 models.PasswordObject
	if err := swag.ReadJSON(raw, &patchEmployeesEmployeeGUIDParamsBodyAO1); err != nil {
		return err
	}
	o.PasswordObject = patchEmployeesEmployeeGUIDParamsBodyAO1

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (o PatchEmployeesEmployeeGUIDBody) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 2)

	patchEmployeesEmployeeGUIDParamsBodyAO0, err := swag.WriteJSON(o.EmployeeObject)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, patchEmployeesEmployeeGUIDParamsBodyAO0)

	patchEmployeesEmployeeGUIDParamsBodyAO1, err := swag.WriteJSON(o.PasswordObject)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, patchEmployeesEmployeeGUIDParamsBodyAO1)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this patch employees employee GUID body
func (o *PatchEmployeesEmployeeGUIDBody) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with models.EmployeeObject
	if err := o.EmployeeObject.Validate(formats); err != nil {
		res = append(res, err)
	}
	// validation for a type composition with models.PasswordObject
	if err := o.PasswordObject.Validate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (o *PatchEmployeesEmployeeGUIDBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchEmployeesEmployeeGUIDBody) UnmarshalBinary(b []byte) error {
	var res PatchEmployeesEmployeeGUIDBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchEmployeesEmployeeGUIDMethodNotAllowedBody patch employees employee GUID method not allowed body
swagger:model PatchEmployeesEmployeeGUIDMethodNotAllowedBody
*/
type PatchEmployeesEmployeeGUIDMethodNotAllowedBody struct {
	models.Error405Data
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (o *PatchEmployeesEmployeeGUIDMethodNotAllowedBody) UnmarshalJSON(raw []byte) error {
	// PatchEmployeesEmployeeGUIDMethodNotAllowedBodyAO0
	var patchEmployeesEmployeeGUIDMethodNotAllowedBodyAO0 models.Error405Data
	if err := swag.ReadJSON(raw, &patchEmployeesEmployeeGUIDMethodNotAllowedBodyAO0); err != nil {
		return err
	}
	o.Error405Data = patchEmployeesEmployeeGUIDMethodNotAllowedBodyAO0

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (o PatchEmployeesEmployeeGUIDMethodNotAllowedBody) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 1)

	patchEmployeesEmployeeGUIDMethodNotAllowedBodyAO0, err := swag.WriteJSON(o.Error405Data)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, patchEmployeesEmployeeGUIDMethodNotAllowedBodyAO0)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this patch employees employee GUID method not allowed body
func (o *PatchEmployeesEmployeeGUIDMethodNotAllowedBody) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with models.Error405Data
	if err := o.Error405Data.Validate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (o *PatchEmployeesEmployeeGUIDMethodNotAllowedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchEmployeesEmployeeGUIDMethodNotAllowedBody) UnmarshalBinary(b []byte) error {
	var res PatchEmployeesEmployeeGUIDMethodNotAllowedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchEmployeesEmployeeGUIDNotFoundBody patch employees employee GUID not found body
swagger:model PatchEmployeesEmployeeGUIDNotFoundBody
*/
type PatchEmployeesEmployeeGUIDNotFoundBody struct {
	models.Error404Data
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (o *PatchEmployeesEmployeeGUIDNotFoundBody) UnmarshalJSON(raw []byte) error {
	// PatchEmployeesEmployeeGUIDNotFoundBodyAO0
	var patchEmployeesEmployeeGUIDNotFoundBodyAO0 models.Error404Data
	if err := swag.ReadJSON(raw, &patchEmployeesEmployeeGUIDNotFoundBodyAO0); err != nil {
		return err
	}
	o.Error404Data = patchEmployeesEmployeeGUIDNotFoundBodyAO0

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (o PatchEmployeesEmployeeGUIDNotFoundBody) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 1)

	patchEmployeesEmployeeGUIDNotFoundBodyAO0, err := swag.WriteJSON(o.Error404Data)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, patchEmployeesEmployeeGUIDNotFoundBodyAO0)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this patch employees employee GUID not found body
func (o *PatchEmployeesEmployeeGUIDNotFoundBody) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with models.Error404Data
	if err := o.Error404Data.Validate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (o *PatchEmployeesEmployeeGUIDNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchEmployeesEmployeeGUIDNotFoundBody) UnmarshalBinary(b []byte) error {
	var res PatchEmployeesEmployeeGUIDNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchEmployeesEmployeeGUIDOKBody patch employees employee GUID o k body
swagger:model PatchEmployeesEmployeeGUIDOKBody
*/
type PatchEmployeesEmployeeGUIDOKBody struct {
	models.SuccessData

	// data
	Data []*DataItems0 `json:"data"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (o *PatchEmployeesEmployeeGUIDOKBody) UnmarshalJSON(raw []byte) error {
	// PatchEmployeesEmployeeGUIDOKBodyAO0
	var patchEmployeesEmployeeGUIDOKBodyAO0 models.SuccessData
	if err := swag.ReadJSON(raw, &patchEmployeesEmployeeGUIDOKBodyAO0); err != nil {
		return err
	}
	o.SuccessData = patchEmployeesEmployeeGUIDOKBodyAO0

	// PatchEmployeesEmployeeGUIDOKBodyAO1
	var dataPatchEmployeesEmployeeGUIDOKBodyAO1 struct {
		Data []*DataItems0 `json:"data,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataPatchEmployeesEmployeeGUIDOKBodyAO1); err != nil {
		return err
	}

	o.Data = dataPatchEmployeesEmployeeGUIDOKBodyAO1.Data

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (o PatchEmployeesEmployeeGUIDOKBody) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 2)

	patchEmployeesEmployeeGUIDOKBodyAO0, err := swag.WriteJSON(o.SuccessData)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, patchEmployeesEmployeeGUIDOKBodyAO0)

	var dataPatchEmployeesEmployeeGUIDOKBodyAO1 struct {
		Data []*DataItems0 `json:"data,omitempty"`
	}

	dataPatchEmployeesEmployeeGUIDOKBodyAO1.Data = o.Data

	jsonDataPatchEmployeesEmployeeGUIDOKBodyAO1, errPatchEmployeesEmployeeGUIDOKBodyAO1 := swag.WriteJSON(dataPatchEmployeesEmployeeGUIDOKBodyAO1)
	if errPatchEmployeesEmployeeGUIDOKBodyAO1 != nil {
		return nil, errPatchEmployeesEmployeeGUIDOKBodyAO1
	}
	_parts = append(_parts, jsonDataPatchEmployeesEmployeeGUIDOKBodyAO1)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this patch employees employee GUID o k body
func (o *PatchEmployeesEmployeeGUIDOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with models.SuccessData
	if err := o.SuccessData.Validate(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PatchEmployeesEmployeeGUIDOKBody) validateData(formats strfmt.Registry) error {

	if swag.IsZero(o.Data) { // not required
		return nil
	}

	for i := 0; i < len(o.Data); i++ {
		if swag.IsZero(o.Data[i]) { // not required
			continue
		}

		if o.Data[i] != nil {
			if err := o.Data[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("patchEmployeesEmployeeGuidOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *PatchEmployeesEmployeeGUIDOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchEmployeesEmployeeGUIDOKBody) UnmarshalBinary(b []byte) error {
	var res PatchEmployeesEmployeeGUIDOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
