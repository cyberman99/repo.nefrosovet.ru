// Code generated by go-swagger; DO NOT EDIT.

package clinics

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	models "repo.nefrosovet.ru/maximus-platform/auth/index/models"
)

// GetClinicsClinicGUIDReader is a Reader for the GetClinicsClinicGUID structure.
type GetClinicsClinicGUIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetClinicsClinicGUIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetClinicsClinicGUIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewGetClinicsClinicGUIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetClinicsClinicGUIDOK creates a GetClinicsClinicGUIDOK with default headers values
func NewGetClinicsClinicGUIDOK() *GetClinicsClinicGUIDOK {
	return &GetClinicsClinicGUIDOK{}
}

/*GetClinicsClinicGUIDOK handles this case with default header values.

Коллекция клиник
*/
type GetClinicsClinicGUIDOK struct {
	Payload *GetClinicsClinicGUIDOKBody
}

func (o *GetClinicsClinicGUIDOK) Error() string {
	return fmt.Sprintf("[GET /clinics/{clinicGUID}][%d] getClinicsClinicGuidOK  %+v", 200, o.Payload)
}

func (o *GetClinicsClinicGUIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetClinicsClinicGUIDOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClinicsClinicGUIDNotFound creates a GetClinicsClinicGUIDNotFound with default headers values
func NewGetClinicsClinicGUIDNotFound() *GetClinicsClinicGUIDNotFound {
	return &GetClinicsClinicGUIDNotFound{}
}

/*GetClinicsClinicGUIDNotFound handles this case with default header values.

Not found
*/
type GetClinicsClinicGUIDNotFound struct {
	Payload *GetClinicsClinicGUIDNotFoundBody
}

func (o *GetClinicsClinicGUIDNotFound) Error() string {
	return fmt.Sprintf("[GET /clinics/{clinicGUID}][%d] getClinicsClinicGuidNotFound  %+v", 404, o.Payload)
}

func (o *GetClinicsClinicGUIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetClinicsClinicGUIDNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetClinicsClinicGUIDNotFoundBody get clinics clinic GUID not found body
swagger:model GetClinicsClinicGUIDNotFoundBody
*/
type GetClinicsClinicGUIDNotFoundBody struct {
	models.Error404Data
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (o *GetClinicsClinicGUIDNotFoundBody) UnmarshalJSON(raw []byte) error {
	// GetClinicsClinicGUIDNotFoundBodyAO0
	var getClinicsClinicGUIDNotFoundBodyAO0 models.Error404Data
	if err := swag.ReadJSON(raw, &getClinicsClinicGUIDNotFoundBodyAO0); err != nil {
		return err
	}
	o.Error404Data = getClinicsClinicGUIDNotFoundBodyAO0

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (o GetClinicsClinicGUIDNotFoundBody) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 1)

	getClinicsClinicGUIDNotFoundBodyAO0, err := swag.WriteJSON(o.Error404Data)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, getClinicsClinicGUIDNotFoundBodyAO0)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this get clinics clinic GUID not found body
func (o *GetClinicsClinicGUIDNotFoundBody) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with models.Error404Data
	if err := o.Error404Data.Validate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (o *GetClinicsClinicGUIDNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetClinicsClinicGUIDNotFoundBody) UnmarshalBinary(b []byte) error {
	var res GetClinicsClinicGUIDNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetClinicsClinicGUIDOKBody get clinics clinic GUID o k body
swagger:model GetClinicsClinicGUIDOKBody
*/
type GetClinicsClinicGUIDOKBody struct {
	models.SuccessData

	// data
	Data []*DataItems0 `json:"data"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (o *GetClinicsClinicGUIDOKBody) UnmarshalJSON(raw []byte) error {
	// GetClinicsClinicGUIDOKBodyAO0
	var getClinicsClinicGUIDOKBodyAO0 models.SuccessData
	if err := swag.ReadJSON(raw, &getClinicsClinicGUIDOKBodyAO0); err != nil {
		return err
	}
	o.SuccessData = getClinicsClinicGUIDOKBodyAO0

	// GetClinicsClinicGUIDOKBodyAO1
	var dataGetClinicsClinicGUIDOKBodyAO1 struct {
		Data []*DataItems0 `json:"data,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataGetClinicsClinicGUIDOKBodyAO1); err != nil {
		return err
	}

	o.Data = dataGetClinicsClinicGUIDOKBodyAO1.Data

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (o GetClinicsClinicGUIDOKBody) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 2)

	getClinicsClinicGUIDOKBodyAO0, err := swag.WriteJSON(o.SuccessData)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, getClinicsClinicGUIDOKBodyAO0)

	var dataGetClinicsClinicGUIDOKBodyAO1 struct {
		Data []*DataItems0 `json:"data,omitempty"`
	}

	dataGetClinicsClinicGUIDOKBodyAO1.Data = o.Data

	jsonDataGetClinicsClinicGUIDOKBodyAO1, errGetClinicsClinicGUIDOKBodyAO1 := swag.WriteJSON(dataGetClinicsClinicGUIDOKBodyAO1)
	if errGetClinicsClinicGUIDOKBodyAO1 != nil {
		return nil, errGetClinicsClinicGUIDOKBodyAO1
	}
	_parts = append(_parts, jsonDataGetClinicsClinicGUIDOKBodyAO1)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this get clinics clinic GUID o k body
func (o *GetClinicsClinicGUIDOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with models.SuccessData
	if err := o.SuccessData.Validate(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetClinicsClinicGUIDOKBody) validateData(formats strfmt.Registry) error {

	if swag.IsZero(o.Data) { // not required
		return nil
	}

	for i := 0; i < len(o.Data); i++ {
		if swag.IsZero(o.Data[i]) { // not required
			continue
		}

		if o.Data[i] != nil {
			if err := o.Data[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getClinicsClinicGuidOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetClinicsClinicGUIDOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetClinicsClinicGUIDOKBody) UnmarshalBinary(b []byte) error {
	var res GetClinicsClinicGUIDOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
