// Code generated by go-swagger; DO NOT EDIT.

package treatment_episodes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	models "repo.nefrosovet.ru/maximus-platform/auth/index/models"
)

// PutTreatmentEpisodesTreatmentEpisodeGUIDReader is a Reader for the PutTreatmentEpisodesTreatmentEpisodeGUID structure.
type PutTreatmentEpisodesTreatmentEpisodeGUIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutTreatmentEpisodesTreatmentEpisodeGUIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPutTreatmentEpisodesTreatmentEpisodeGUIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPutTreatmentEpisodesTreatmentEpisodeGUIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPutTreatmentEpisodesTreatmentEpisodeGUIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewPutTreatmentEpisodesTreatmentEpisodeGUIDMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutTreatmentEpisodesTreatmentEpisodeGUIDOK creates a PutTreatmentEpisodesTreatmentEpisodeGUIDOK with default headers values
func NewPutTreatmentEpisodesTreatmentEpisodeGUIDOK() *PutTreatmentEpisodesTreatmentEpisodeGUIDOK {
	return &PutTreatmentEpisodesTreatmentEpisodeGUIDOK{}
}

/*PutTreatmentEpisodesTreatmentEpisodeGUIDOK handles this case with default header values.

Коллекция эпизодов лечения
*/
type PutTreatmentEpisodesTreatmentEpisodeGUIDOK struct {
	Payload *PutTreatmentEpisodesTreatmentEpisodeGUIDOKBody
}

func (o *PutTreatmentEpisodesTreatmentEpisodeGUIDOK) Error() string {
	return fmt.Sprintf("[PUT /treatmentEpisodes/{treatmentEpisodeGUID}][%d] putTreatmentEpisodesTreatmentEpisodeGuidOK  %+v", 200, o.Payload)
}

func (o *PutTreatmentEpisodesTreatmentEpisodeGUIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PutTreatmentEpisodesTreatmentEpisodeGUIDOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutTreatmentEpisodesTreatmentEpisodeGUIDBadRequest creates a PutTreatmentEpisodesTreatmentEpisodeGUIDBadRequest with default headers values
func NewPutTreatmentEpisodesTreatmentEpisodeGUIDBadRequest() *PutTreatmentEpisodesTreatmentEpisodeGUIDBadRequest {
	return &PutTreatmentEpisodesTreatmentEpisodeGUIDBadRequest{}
}

/*PutTreatmentEpisodesTreatmentEpisodeGUIDBadRequest handles this case with default header values.

Validation error
*/
type PutTreatmentEpisodesTreatmentEpisodeGUIDBadRequest struct {
	Payload *PutTreatmentEpisodesTreatmentEpisodeGUIDBadRequestBody
}

func (o *PutTreatmentEpisodesTreatmentEpisodeGUIDBadRequest) Error() string {
	return fmt.Sprintf("[PUT /treatmentEpisodes/{treatmentEpisodeGUID}][%d] putTreatmentEpisodesTreatmentEpisodeGuidBadRequest  %+v", 400, o.Payload)
}

func (o *PutTreatmentEpisodesTreatmentEpisodeGUIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PutTreatmentEpisodesTreatmentEpisodeGUIDBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutTreatmentEpisodesTreatmentEpisodeGUIDNotFound creates a PutTreatmentEpisodesTreatmentEpisodeGUIDNotFound with default headers values
func NewPutTreatmentEpisodesTreatmentEpisodeGUIDNotFound() *PutTreatmentEpisodesTreatmentEpisodeGUIDNotFound {
	return &PutTreatmentEpisodesTreatmentEpisodeGUIDNotFound{}
}

/*PutTreatmentEpisodesTreatmentEpisodeGUIDNotFound handles this case with default header values.

Not found
*/
type PutTreatmentEpisodesTreatmentEpisodeGUIDNotFound struct {
	Payload *PutTreatmentEpisodesTreatmentEpisodeGUIDNotFoundBody
}

func (o *PutTreatmentEpisodesTreatmentEpisodeGUIDNotFound) Error() string {
	return fmt.Sprintf("[PUT /treatmentEpisodes/{treatmentEpisodeGUID}][%d] putTreatmentEpisodesTreatmentEpisodeGuidNotFound  %+v", 404, o.Payload)
}

func (o *PutTreatmentEpisodesTreatmentEpisodeGUIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PutTreatmentEpisodesTreatmentEpisodeGUIDNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutTreatmentEpisodesTreatmentEpisodeGUIDMethodNotAllowed creates a PutTreatmentEpisodesTreatmentEpisodeGUIDMethodNotAllowed with default headers values
func NewPutTreatmentEpisodesTreatmentEpisodeGUIDMethodNotAllowed() *PutTreatmentEpisodesTreatmentEpisodeGUIDMethodNotAllowed {
	return &PutTreatmentEpisodesTreatmentEpisodeGUIDMethodNotAllowed{}
}

/*PutTreatmentEpisodesTreatmentEpisodeGUIDMethodNotAllowed handles this case with default header values.

Invalid Method
*/
type PutTreatmentEpisodesTreatmentEpisodeGUIDMethodNotAllowed struct {
	Payload *PutTreatmentEpisodesTreatmentEpisodeGUIDMethodNotAllowedBody
}

func (o *PutTreatmentEpisodesTreatmentEpisodeGUIDMethodNotAllowed) Error() string {
	return fmt.Sprintf("[PUT /treatmentEpisodes/{treatmentEpisodeGUID}][%d] putTreatmentEpisodesTreatmentEpisodeGuidMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *PutTreatmentEpisodesTreatmentEpisodeGUIDMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PutTreatmentEpisodesTreatmentEpisodeGUIDMethodNotAllowedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*PutTreatmentEpisodesTreatmentEpisodeGUIDBadRequestBody put treatment episodes treatment episode GUID bad request body
swagger:model PutTreatmentEpisodesTreatmentEpisodeGUIDBadRequestBody
*/
type PutTreatmentEpisodesTreatmentEpisodeGUIDBadRequestBody struct {
	models.Error400Data
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (o *PutTreatmentEpisodesTreatmentEpisodeGUIDBadRequestBody) UnmarshalJSON(raw []byte) error {
	// PutTreatmentEpisodesTreatmentEpisodeGUIDBadRequestBodyAO0
	var putTreatmentEpisodesTreatmentEpisodeGUIDBadRequestBodyAO0 models.Error400Data
	if err := swag.ReadJSON(raw, &putTreatmentEpisodesTreatmentEpisodeGUIDBadRequestBodyAO0); err != nil {
		return err
	}
	o.Error400Data = putTreatmentEpisodesTreatmentEpisodeGUIDBadRequestBodyAO0

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (o PutTreatmentEpisodesTreatmentEpisodeGUIDBadRequestBody) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 1)

	putTreatmentEpisodesTreatmentEpisodeGUIDBadRequestBodyAO0, err := swag.WriteJSON(o.Error400Data)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, putTreatmentEpisodesTreatmentEpisodeGUIDBadRequestBodyAO0)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this put treatment episodes treatment episode GUID bad request body
func (o *PutTreatmentEpisodesTreatmentEpisodeGUIDBadRequestBody) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with models.Error400Data
	if err := o.Error400Data.Validate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (o *PutTreatmentEpisodesTreatmentEpisodeGUIDBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PutTreatmentEpisodesTreatmentEpisodeGUIDBadRequestBody) UnmarshalBinary(b []byte) error {
	var res PutTreatmentEpisodesTreatmentEpisodeGUIDBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PutTreatmentEpisodesTreatmentEpisodeGUIDBody put treatment episodes treatment episode GUID body
swagger:model PutTreatmentEpisodesTreatmentEpisodeGUIDBody
*/
type PutTreatmentEpisodesTreatmentEpisodeGUIDBody struct {
	models.TreatmentEpisodeObject
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (o *PutTreatmentEpisodesTreatmentEpisodeGUIDBody) UnmarshalJSON(raw []byte) error {
	// PutTreatmentEpisodesTreatmentEpisodeGUIDParamsBodyAO0
	var putTreatmentEpisodesTreatmentEpisodeGUIDParamsBodyAO0 models.TreatmentEpisodeObject
	if err := swag.ReadJSON(raw, &putTreatmentEpisodesTreatmentEpisodeGUIDParamsBodyAO0); err != nil {
		return err
	}
	o.TreatmentEpisodeObject = putTreatmentEpisodesTreatmentEpisodeGUIDParamsBodyAO0

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (o PutTreatmentEpisodesTreatmentEpisodeGUIDBody) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 1)

	putTreatmentEpisodesTreatmentEpisodeGUIDParamsBodyAO0, err := swag.WriteJSON(o.TreatmentEpisodeObject)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, putTreatmentEpisodesTreatmentEpisodeGUIDParamsBodyAO0)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this put treatment episodes treatment episode GUID body
func (o *PutTreatmentEpisodesTreatmentEpisodeGUIDBody) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with models.TreatmentEpisodeObject
	if err := o.TreatmentEpisodeObject.Validate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (o *PutTreatmentEpisodesTreatmentEpisodeGUIDBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PutTreatmentEpisodesTreatmentEpisodeGUIDBody) UnmarshalBinary(b []byte) error {
	var res PutTreatmentEpisodesTreatmentEpisodeGUIDBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PutTreatmentEpisodesTreatmentEpisodeGUIDMethodNotAllowedBody put treatment episodes treatment episode GUID method not allowed body
swagger:model PutTreatmentEpisodesTreatmentEpisodeGUIDMethodNotAllowedBody
*/
type PutTreatmentEpisodesTreatmentEpisodeGUIDMethodNotAllowedBody struct {
	models.Error405Data
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (o *PutTreatmentEpisodesTreatmentEpisodeGUIDMethodNotAllowedBody) UnmarshalJSON(raw []byte) error {
	// PutTreatmentEpisodesTreatmentEpisodeGUIDMethodNotAllowedBodyAO0
	var putTreatmentEpisodesTreatmentEpisodeGUIDMethodNotAllowedBodyAO0 models.Error405Data
	if err := swag.ReadJSON(raw, &putTreatmentEpisodesTreatmentEpisodeGUIDMethodNotAllowedBodyAO0); err != nil {
		return err
	}
	o.Error405Data = putTreatmentEpisodesTreatmentEpisodeGUIDMethodNotAllowedBodyAO0

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (o PutTreatmentEpisodesTreatmentEpisodeGUIDMethodNotAllowedBody) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 1)

	putTreatmentEpisodesTreatmentEpisodeGUIDMethodNotAllowedBodyAO0, err := swag.WriteJSON(o.Error405Data)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, putTreatmentEpisodesTreatmentEpisodeGUIDMethodNotAllowedBodyAO0)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this put treatment episodes treatment episode GUID method not allowed body
func (o *PutTreatmentEpisodesTreatmentEpisodeGUIDMethodNotAllowedBody) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with models.Error405Data
	if err := o.Error405Data.Validate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (o *PutTreatmentEpisodesTreatmentEpisodeGUIDMethodNotAllowedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PutTreatmentEpisodesTreatmentEpisodeGUIDMethodNotAllowedBody) UnmarshalBinary(b []byte) error {
	var res PutTreatmentEpisodesTreatmentEpisodeGUIDMethodNotAllowedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PutTreatmentEpisodesTreatmentEpisodeGUIDNotFoundBody put treatment episodes treatment episode GUID not found body
swagger:model PutTreatmentEpisodesTreatmentEpisodeGUIDNotFoundBody
*/
type PutTreatmentEpisodesTreatmentEpisodeGUIDNotFoundBody struct {
	models.Error404Data
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (o *PutTreatmentEpisodesTreatmentEpisodeGUIDNotFoundBody) UnmarshalJSON(raw []byte) error {
	// PutTreatmentEpisodesTreatmentEpisodeGUIDNotFoundBodyAO0
	var putTreatmentEpisodesTreatmentEpisodeGUIDNotFoundBodyAO0 models.Error404Data
	if err := swag.ReadJSON(raw, &putTreatmentEpisodesTreatmentEpisodeGUIDNotFoundBodyAO0); err != nil {
		return err
	}
	o.Error404Data = putTreatmentEpisodesTreatmentEpisodeGUIDNotFoundBodyAO0

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (o PutTreatmentEpisodesTreatmentEpisodeGUIDNotFoundBody) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 1)

	putTreatmentEpisodesTreatmentEpisodeGUIDNotFoundBodyAO0, err := swag.WriteJSON(o.Error404Data)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, putTreatmentEpisodesTreatmentEpisodeGUIDNotFoundBodyAO0)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this put treatment episodes treatment episode GUID not found body
func (o *PutTreatmentEpisodesTreatmentEpisodeGUIDNotFoundBody) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with models.Error404Data
	if err := o.Error404Data.Validate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (o *PutTreatmentEpisodesTreatmentEpisodeGUIDNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PutTreatmentEpisodesTreatmentEpisodeGUIDNotFoundBody) UnmarshalBinary(b []byte) error {
	var res PutTreatmentEpisodesTreatmentEpisodeGUIDNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PutTreatmentEpisodesTreatmentEpisodeGUIDOKBody put treatment episodes treatment episode GUID o k body
swagger:model PutTreatmentEpisodesTreatmentEpisodeGUIDOKBody
*/
type PutTreatmentEpisodesTreatmentEpisodeGUIDOKBody struct {
	models.SuccessData

	// data
	Data []*DataItems0 `json:"data"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (o *PutTreatmentEpisodesTreatmentEpisodeGUIDOKBody) UnmarshalJSON(raw []byte) error {
	// PutTreatmentEpisodesTreatmentEpisodeGUIDOKBodyAO0
	var putTreatmentEpisodesTreatmentEpisodeGUIDOKBodyAO0 models.SuccessData
	if err := swag.ReadJSON(raw, &putTreatmentEpisodesTreatmentEpisodeGUIDOKBodyAO0); err != nil {
		return err
	}
	o.SuccessData = putTreatmentEpisodesTreatmentEpisodeGUIDOKBodyAO0

	// PutTreatmentEpisodesTreatmentEpisodeGUIDOKBodyAO1
	var dataPutTreatmentEpisodesTreatmentEpisodeGUIDOKBodyAO1 struct {
		Data []*DataItems0 `json:"data,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataPutTreatmentEpisodesTreatmentEpisodeGUIDOKBodyAO1); err != nil {
		return err
	}

	o.Data = dataPutTreatmentEpisodesTreatmentEpisodeGUIDOKBodyAO1.Data

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (o PutTreatmentEpisodesTreatmentEpisodeGUIDOKBody) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 2)

	putTreatmentEpisodesTreatmentEpisodeGUIDOKBodyAO0, err := swag.WriteJSON(o.SuccessData)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, putTreatmentEpisodesTreatmentEpisodeGUIDOKBodyAO0)

	var dataPutTreatmentEpisodesTreatmentEpisodeGUIDOKBodyAO1 struct {
		Data []*DataItems0 `json:"data,omitempty"`
	}

	dataPutTreatmentEpisodesTreatmentEpisodeGUIDOKBodyAO1.Data = o.Data

	jsonDataPutTreatmentEpisodesTreatmentEpisodeGUIDOKBodyAO1, errPutTreatmentEpisodesTreatmentEpisodeGUIDOKBodyAO1 := swag.WriteJSON(dataPutTreatmentEpisodesTreatmentEpisodeGUIDOKBodyAO1)
	if errPutTreatmentEpisodesTreatmentEpisodeGUIDOKBodyAO1 != nil {
		return nil, errPutTreatmentEpisodesTreatmentEpisodeGUIDOKBodyAO1
	}
	_parts = append(_parts, jsonDataPutTreatmentEpisodesTreatmentEpisodeGUIDOKBodyAO1)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this put treatment episodes treatment episode GUID o k body
func (o *PutTreatmentEpisodesTreatmentEpisodeGUIDOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with models.SuccessData
	if err := o.SuccessData.Validate(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PutTreatmentEpisodesTreatmentEpisodeGUIDOKBody) validateData(formats strfmt.Registry) error {

	if swag.IsZero(o.Data) { // not required
		return nil
	}

	for i := 0; i < len(o.Data); i++ {
		if swag.IsZero(o.Data[i]) { // not required
			continue
		}

		if o.Data[i] != nil {
			if err := o.Data[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("putTreatmentEpisodesTreatmentEpisodeGuidOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *PutTreatmentEpisodesTreatmentEpisodeGUIDOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PutTreatmentEpisodesTreatmentEpisodeGUIDOKBody) UnmarshalBinary(b []byte) error {
	var res PutTreatmentEpisodesTreatmentEpisodeGUIDOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
