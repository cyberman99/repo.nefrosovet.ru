// Code generated by go-swagger; DO NOT EDIT.

package treatment_episodes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	models "repo.nefrosovet.ru/maximus-platform/auth/index/models"
)

// GetTreatmentEpisodesTreatmentEpisodeGUIDReader is a Reader for the GetTreatmentEpisodesTreatmentEpisodeGUID structure.
type GetTreatmentEpisodesTreatmentEpisodeGUIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTreatmentEpisodesTreatmentEpisodeGUIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetTreatmentEpisodesTreatmentEpisodeGUIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewGetTreatmentEpisodesTreatmentEpisodeGUIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetTreatmentEpisodesTreatmentEpisodeGUIDOK creates a GetTreatmentEpisodesTreatmentEpisodeGUIDOK with default headers values
func NewGetTreatmentEpisodesTreatmentEpisodeGUIDOK() *GetTreatmentEpisodesTreatmentEpisodeGUIDOK {
	return &GetTreatmentEpisodesTreatmentEpisodeGUIDOK{}
}

/*GetTreatmentEpisodesTreatmentEpisodeGUIDOK handles this case with default header values.

Коллекция эпизодов лечения
*/
type GetTreatmentEpisodesTreatmentEpisodeGUIDOK struct {
	Payload *GetTreatmentEpisodesTreatmentEpisodeGUIDOKBody
}

func (o *GetTreatmentEpisodesTreatmentEpisodeGUIDOK) Error() string {
	return fmt.Sprintf("[GET /treatmentEpisodes/{treatmentEpisodeGUID}][%d] getTreatmentEpisodesTreatmentEpisodeGuidOK  %+v", 200, o.Payload)
}

func (o *GetTreatmentEpisodesTreatmentEpisodeGUIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetTreatmentEpisodesTreatmentEpisodeGUIDOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTreatmentEpisodesTreatmentEpisodeGUIDNotFound creates a GetTreatmentEpisodesTreatmentEpisodeGUIDNotFound with default headers values
func NewGetTreatmentEpisodesTreatmentEpisodeGUIDNotFound() *GetTreatmentEpisodesTreatmentEpisodeGUIDNotFound {
	return &GetTreatmentEpisodesTreatmentEpisodeGUIDNotFound{}
}

/*GetTreatmentEpisodesTreatmentEpisodeGUIDNotFound handles this case with default header values.

Not found
*/
type GetTreatmentEpisodesTreatmentEpisodeGUIDNotFound struct {
	Payload *GetTreatmentEpisodesTreatmentEpisodeGUIDNotFoundBody
}

func (o *GetTreatmentEpisodesTreatmentEpisodeGUIDNotFound) Error() string {
	return fmt.Sprintf("[GET /treatmentEpisodes/{treatmentEpisodeGUID}][%d] getTreatmentEpisodesTreatmentEpisodeGuidNotFound  %+v", 404, o.Payload)
}

func (o *GetTreatmentEpisodesTreatmentEpisodeGUIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetTreatmentEpisodesTreatmentEpisodeGUIDNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetTreatmentEpisodesTreatmentEpisodeGUIDNotFoundBody get treatment episodes treatment episode GUID not found body
swagger:model GetTreatmentEpisodesTreatmentEpisodeGUIDNotFoundBody
*/
type GetTreatmentEpisodesTreatmentEpisodeGUIDNotFoundBody struct {
	models.Error404Data
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (o *GetTreatmentEpisodesTreatmentEpisodeGUIDNotFoundBody) UnmarshalJSON(raw []byte) error {
	// GetTreatmentEpisodesTreatmentEpisodeGUIDNotFoundBodyAO0
	var getTreatmentEpisodesTreatmentEpisodeGUIDNotFoundBodyAO0 models.Error404Data
	if err := swag.ReadJSON(raw, &getTreatmentEpisodesTreatmentEpisodeGUIDNotFoundBodyAO0); err != nil {
		return err
	}
	o.Error404Data = getTreatmentEpisodesTreatmentEpisodeGUIDNotFoundBodyAO0

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (o GetTreatmentEpisodesTreatmentEpisodeGUIDNotFoundBody) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 1)

	getTreatmentEpisodesTreatmentEpisodeGUIDNotFoundBodyAO0, err := swag.WriteJSON(o.Error404Data)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, getTreatmentEpisodesTreatmentEpisodeGUIDNotFoundBodyAO0)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this get treatment episodes treatment episode GUID not found body
func (o *GetTreatmentEpisodesTreatmentEpisodeGUIDNotFoundBody) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with models.Error404Data
	if err := o.Error404Data.Validate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (o *GetTreatmentEpisodesTreatmentEpisodeGUIDNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetTreatmentEpisodesTreatmentEpisodeGUIDNotFoundBody) UnmarshalBinary(b []byte) error {
	var res GetTreatmentEpisodesTreatmentEpisodeGUIDNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetTreatmentEpisodesTreatmentEpisodeGUIDOKBody get treatment episodes treatment episode GUID o k body
swagger:model GetTreatmentEpisodesTreatmentEpisodeGUIDOKBody
*/
type GetTreatmentEpisodesTreatmentEpisodeGUIDOKBody struct {
	models.SuccessData

	// data
	Data []*DataItems0 `json:"data"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (o *GetTreatmentEpisodesTreatmentEpisodeGUIDOKBody) UnmarshalJSON(raw []byte) error {
	// GetTreatmentEpisodesTreatmentEpisodeGUIDOKBodyAO0
	var getTreatmentEpisodesTreatmentEpisodeGUIDOKBodyAO0 models.SuccessData
	if err := swag.ReadJSON(raw, &getTreatmentEpisodesTreatmentEpisodeGUIDOKBodyAO0); err != nil {
		return err
	}
	o.SuccessData = getTreatmentEpisodesTreatmentEpisodeGUIDOKBodyAO0

	// GetTreatmentEpisodesTreatmentEpisodeGUIDOKBodyAO1
	var dataGetTreatmentEpisodesTreatmentEpisodeGUIDOKBodyAO1 struct {
		Data []*DataItems0 `json:"data,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataGetTreatmentEpisodesTreatmentEpisodeGUIDOKBodyAO1); err != nil {
		return err
	}

	o.Data = dataGetTreatmentEpisodesTreatmentEpisodeGUIDOKBodyAO1.Data

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (o GetTreatmentEpisodesTreatmentEpisodeGUIDOKBody) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 2)

	getTreatmentEpisodesTreatmentEpisodeGUIDOKBodyAO0, err := swag.WriteJSON(o.SuccessData)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, getTreatmentEpisodesTreatmentEpisodeGUIDOKBodyAO0)

	var dataGetTreatmentEpisodesTreatmentEpisodeGUIDOKBodyAO1 struct {
		Data []*DataItems0 `json:"data,omitempty"`
	}

	dataGetTreatmentEpisodesTreatmentEpisodeGUIDOKBodyAO1.Data = o.Data

	jsonDataGetTreatmentEpisodesTreatmentEpisodeGUIDOKBodyAO1, errGetTreatmentEpisodesTreatmentEpisodeGUIDOKBodyAO1 := swag.WriteJSON(dataGetTreatmentEpisodesTreatmentEpisodeGUIDOKBodyAO1)
	if errGetTreatmentEpisodesTreatmentEpisodeGUIDOKBodyAO1 != nil {
		return nil, errGetTreatmentEpisodesTreatmentEpisodeGUIDOKBodyAO1
	}
	_parts = append(_parts, jsonDataGetTreatmentEpisodesTreatmentEpisodeGUIDOKBodyAO1)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this get treatment episodes treatment episode GUID o k body
func (o *GetTreatmentEpisodesTreatmentEpisodeGUIDOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with models.SuccessData
	if err := o.SuccessData.Validate(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetTreatmentEpisodesTreatmentEpisodeGUIDOKBody) validateData(formats strfmt.Registry) error {

	if swag.IsZero(o.Data) { // not required
		return nil
	}

	for i := 0; i < len(o.Data); i++ {
		if swag.IsZero(o.Data[i]) { // not required
			continue
		}

		if o.Data[i] != nil {
			if err := o.Data[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getTreatmentEpisodesTreatmentEpisodeGuidOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetTreatmentEpisodesTreatmentEpisodeGUIDOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetTreatmentEpisodesTreatmentEpisodeGUIDOKBody) UnmarshalBinary(b []byte) error {
	var res GetTreatmentEpisodesTreatmentEpisodeGUIDOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
