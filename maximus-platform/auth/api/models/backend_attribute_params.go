// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// BackendAttributeParams Backend_attribute_params
// swagger:model Backend_attribute_params
type BackendAttributeParams struct {

	// GUID
	// Required: true
	GUID struct {
		BackendAttributeOptions
	} `json:"GUID"`

	// email
	Email struct {
		BackendAttributeOptions
	} `json:"email,omitempty"`

	// first name
	FirstName struct {
		BackendAttributeOptions
	} `json:"firstName,omitempty"`

	// last name
	LastName struct {
		BackendAttributeOptions
	} `json:"lastName,omitempty"`

	// mobile
	Mobile struct {
		BackendAttributeOptions
	} `json:"mobile,omitempty"`

	// patronymic
	Patronymic struct {
		BackendAttributeOptions
	} `json:"patronymic,omitempty"`

	// username
	// Required: true
	Username struct {
		BackendAttributeOptions
	} `json:"username"`
}

// Validate validates this backend attribute params
func (m *BackendAttributeParams) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateGUID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateEmail(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateFirstName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLastName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMobile(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePatronymic(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUsername(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *BackendAttributeParams) validateGUID(formats strfmt.Registry) error {

	return nil
}

func (m *BackendAttributeParams) validateEmail(formats strfmt.Registry) error {

	if swag.IsZero(m.Email) { // not required
		return nil
	}

	return nil
}

func (m *BackendAttributeParams) validateFirstName(formats strfmt.Registry) error {

	if swag.IsZero(m.FirstName) { // not required
		return nil
	}

	return nil
}

func (m *BackendAttributeParams) validateLastName(formats strfmt.Registry) error {

	if swag.IsZero(m.LastName) { // not required
		return nil
	}

	return nil
}

func (m *BackendAttributeParams) validateMobile(formats strfmt.Registry) error {

	if swag.IsZero(m.Mobile) { // not required
		return nil
	}

	return nil
}

func (m *BackendAttributeParams) validatePatronymic(formats strfmt.Registry) error {

	if swag.IsZero(m.Patronymic) { // not required
		return nil
	}

	return nil
}

func (m *BackendAttributeParams) validateUsername(formats strfmt.Registry) error {

	return nil
}

// MarshalBinary interface implementation
func (m *BackendAttributeParams) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *BackendAttributeParams) UnmarshalBinary(b []byte) error {
	var res BackendAttributeParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
