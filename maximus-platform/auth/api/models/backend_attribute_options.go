// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// BackendAttributeOptions Backend_attribute_options
// swagger:model Backend_attribute_options
type BackendAttributeOptions struct {

	// Атрибут на бэкенде
	// Required: true
	Map *string `json:"map"`

	// Политика синхронизации
	// Required: true
	// Enum: [FIRST_LOGIN ALWAYS]
	Sync *string `json:"sync"`
}

// Validate validates this backend attribute options
func (m *BackendAttributeOptions) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateMap(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSync(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *BackendAttributeOptions) validateMap(formats strfmt.Registry) error {

	if err := validate.Required("map", "body", m.Map); err != nil {
		return err
	}

	return nil
}

var backendAttributeOptionsTypeSyncPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["FIRST_LOGIN","ALWAYS"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		backendAttributeOptionsTypeSyncPropEnum = append(backendAttributeOptionsTypeSyncPropEnum, v)
	}
}

const (

	// BackendAttributeOptionsSyncFIRSTLOGIN captures enum value "FIRST_LOGIN"
	BackendAttributeOptionsSyncFIRSTLOGIN string = "FIRST_LOGIN"

	// BackendAttributeOptionsSyncALWAYS captures enum value "ALWAYS"
	BackendAttributeOptionsSyncALWAYS string = "ALWAYS"
)

// prop value enum
func (m *BackendAttributeOptions) validateSyncEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, backendAttributeOptionsTypeSyncPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *BackendAttributeOptions) validateSync(formats strfmt.Registry) error {

	if err := validate.Required("sync", "body", m.Sync); err != nil {
		return err
	}

	// value enum
	if err := m.validateSyncEnum("sync", "body", *m.Sync); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *BackendAttributeOptions) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *BackendAttributeOptions) UnmarshalBinary(b []byte) error {
	var res BackendAttributeOptions
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
