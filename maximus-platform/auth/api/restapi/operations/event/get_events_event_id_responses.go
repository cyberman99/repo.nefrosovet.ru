// Code generated by go-swagger; DO NOT EDIT.

package event

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// GetEventsEventIDOKCode is the HTTP code returned for type GetEventsEventIDOK
const GetEventsEventIDOKCode int = 200

/*GetEventsEventIDOK Коллекция событий

swagger:response getEventsEventIdOK
*/
type GetEventsEventIDOK struct {

	/*
	  In: Body
	*/
	Payload *GetEventsEventIDOKBody `json:"body,omitempty"`
}

// NewGetEventsEventIDOK creates GetEventsEventIDOK with default headers values
func NewGetEventsEventIDOK() *GetEventsEventIDOK {

	return &GetEventsEventIDOK{}
}

// WithPayload adds the payload to the get events event Id o k response
func (o *GetEventsEventIDOK) WithPayload(payload *GetEventsEventIDOKBody) *GetEventsEventIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get events event Id o k response
func (o *GetEventsEventIDOK) SetPayload(payload *GetEventsEventIDOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetEventsEventIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetEventsEventIDNotFoundCode is the HTTP code returned for type GetEventsEventIDNotFound
const GetEventsEventIDNotFoundCode int = 404

/*GetEventsEventIDNotFound Not found

swagger:response getEventsEventIdNotFound
*/
type GetEventsEventIDNotFound struct {

	/*
	  In: Body
	*/
	Payload *GetEventsEventIDNotFoundBody `json:"body,omitempty"`
}

// NewGetEventsEventIDNotFound creates GetEventsEventIDNotFound with default headers values
func NewGetEventsEventIDNotFound() *GetEventsEventIDNotFound {

	return &GetEventsEventIDNotFound{}
}

// WithPayload adds the payload to the get events event Id not found response
func (o *GetEventsEventIDNotFound) WithPayload(payload *GetEventsEventIDNotFoundBody) *GetEventsEventIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get events event Id not found response
func (o *GetEventsEventIDNotFound) SetPayload(payload *GetEventsEventIDNotFoundBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetEventsEventIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetEventsEventIDMethodNotAllowedCode is the HTTP code returned for type GetEventsEventIDMethodNotAllowed
const GetEventsEventIDMethodNotAllowedCode int = 405

/*GetEventsEventIDMethodNotAllowed Invalid Method

swagger:response getEventsEventIdMethodNotAllowed
*/
type GetEventsEventIDMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *GetEventsEventIDMethodNotAllowedBody `json:"body,omitempty"`
}

// NewGetEventsEventIDMethodNotAllowed creates GetEventsEventIDMethodNotAllowed with default headers values
func NewGetEventsEventIDMethodNotAllowed() *GetEventsEventIDMethodNotAllowed {

	return &GetEventsEventIDMethodNotAllowed{}
}

// WithPayload adds the payload to the get events event Id method not allowed response
func (o *GetEventsEventIDMethodNotAllowed) WithPayload(payload *GetEventsEventIDMethodNotAllowedBody) *GetEventsEventIDMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get events event Id method not allowed response
func (o *GetEventsEventIDMethodNotAllowed) SetPayload(payload *GetEventsEventIDMethodNotAllowedBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetEventsEventIDMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetEventsEventIDInternalServerErrorCode is the HTTP code returned for type GetEventsEventIDInternalServerError
const GetEventsEventIDInternalServerErrorCode int = 500

/*GetEventsEventIDInternalServerError Internal server error

swagger:response getEventsEventIdInternalServerError
*/
type GetEventsEventIDInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *GetEventsEventIDInternalServerErrorBody `json:"body,omitempty"`
}

// NewGetEventsEventIDInternalServerError creates GetEventsEventIDInternalServerError with default headers values
func NewGetEventsEventIDInternalServerError() *GetEventsEventIDInternalServerError {

	return &GetEventsEventIDInternalServerError{}
}

// WithPayload adds the payload to the get events event Id internal server error response
func (o *GetEventsEventIDInternalServerError) WithPayload(payload *GetEventsEventIDInternalServerErrorBody) *GetEventsEventIDInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get events event Id internal server error response
func (o *GetEventsEventIDInternalServerError) SetPayload(payload *GetEventsEventIDInternalServerErrorBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetEventsEventIDInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
