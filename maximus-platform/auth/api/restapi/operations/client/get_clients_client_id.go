// Code generated by go-swagger; DO NOT EDIT.

package client

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"
	"strconv"

	errors "github.com/go-openapi/errors"
	middleware "github.com/go-openapi/runtime/middleware"
	strfmt "github.com/go-openapi/strfmt"
	swag "github.com/go-openapi/swag"
	validate "github.com/go-openapi/validate"

	models "repo.nefrosovet.ru/maximus-platform/auth/api/models"
)

// GetClientsClientIDHandlerFunc turns a function with the right signature into a get clients client ID handler
type GetClientsClientIDHandlerFunc func(GetClientsClientIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetClientsClientIDHandlerFunc) Handle(params GetClientsClientIDParams) middleware.Responder {
	return fn(params)
}

// GetClientsClientIDHandler interface for that can handle valid get clients client ID params
type GetClientsClientIDHandler interface {
	Handle(GetClientsClientIDParams) middleware.Responder
}

// NewGetClientsClientID creates a new http.Handler for the get clients client ID operation
func NewGetClientsClientID(ctx *middleware.Context, handler GetClientsClientIDHandler) *GetClientsClientID {
	return &GetClientsClientID{Context: ctx, Handler: handler}
}

/*GetClientsClientID swagger:route GET /clients/{clientID} Client getClientsClientId

Информация о клиенте

*/
type GetClientsClientID struct {
	Context *middleware.Context
	Handler GetClientsClientIDHandler
}

func (o *GetClientsClientID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetClientsClientIDParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

// GetClientsClientIDInternalServerErrorBody get clients client ID internal server error body
// swagger:model GetClientsClientIDInternalServerErrorBody
type GetClientsClientIDInternalServerErrorBody struct {
	models.Error500Data
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (o *GetClientsClientIDInternalServerErrorBody) UnmarshalJSON(raw []byte) error {
	// GetClientsClientIDInternalServerErrorBodyAO0
	var getClientsClientIDInternalServerErrorBodyAO0 models.Error500Data
	if err := swag.ReadJSON(raw, &getClientsClientIDInternalServerErrorBodyAO0); err != nil {
		return err
	}
	o.Error500Data = getClientsClientIDInternalServerErrorBodyAO0

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (o GetClientsClientIDInternalServerErrorBody) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 1)

	getClientsClientIDInternalServerErrorBodyAO0, err := swag.WriteJSON(o.Error500Data)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, getClientsClientIDInternalServerErrorBodyAO0)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this get clients client ID internal server error body
func (o *GetClientsClientIDInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with models.Error500Data
	if err := o.Error500Data.Validate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (o *GetClientsClientIDInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetClientsClientIDInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res GetClientsClientIDInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// GetClientsClientIDMethodNotAllowedBody get clients client ID method not allowed body
// swagger:model GetClientsClientIDMethodNotAllowedBody
type GetClientsClientIDMethodNotAllowedBody struct {
	models.Error405Data
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (o *GetClientsClientIDMethodNotAllowedBody) UnmarshalJSON(raw []byte) error {
	// GetClientsClientIDMethodNotAllowedBodyAO0
	var getClientsClientIDMethodNotAllowedBodyAO0 models.Error405Data
	if err := swag.ReadJSON(raw, &getClientsClientIDMethodNotAllowedBodyAO0); err != nil {
		return err
	}
	o.Error405Data = getClientsClientIDMethodNotAllowedBodyAO0

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (o GetClientsClientIDMethodNotAllowedBody) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 1)

	getClientsClientIDMethodNotAllowedBodyAO0, err := swag.WriteJSON(o.Error405Data)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, getClientsClientIDMethodNotAllowedBodyAO0)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this get clients client ID method not allowed body
func (o *GetClientsClientIDMethodNotAllowedBody) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with models.Error405Data
	if err := o.Error405Data.Validate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (o *GetClientsClientIDMethodNotAllowedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetClientsClientIDMethodNotAllowedBody) UnmarshalBinary(b []byte) error {
	var res GetClientsClientIDMethodNotAllowedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// GetClientsClientIDNotFoundBody get clients client ID not found body
// swagger:model GetClientsClientIDNotFoundBody
type GetClientsClientIDNotFoundBody struct {
	models.Error404Data
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (o *GetClientsClientIDNotFoundBody) UnmarshalJSON(raw []byte) error {
	// GetClientsClientIDNotFoundBodyAO0
	var getClientsClientIDNotFoundBodyAO0 models.Error404Data
	if err := swag.ReadJSON(raw, &getClientsClientIDNotFoundBodyAO0); err != nil {
		return err
	}
	o.Error404Data = getClientsClientIDNotFoundBodyAO0

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (o GetClientsClientIDNotFoundBody) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 1)

	getClientsClientIDNotFoundBodyAO0, err := swag.WriteJSON(o.Error404Data)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, getClientsClientIDNotFoundBodyAO0)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this get clients client ID not found body
func (o *GetClientsClientIDNotFoundBody) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with models.Error404Data
	if err := o.Error404Data.Validate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (o *GetClientsClientIDNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetClientsClientIDNotFoundBody) UnmarshalBinary(b []byte) error {
	var res GetClientsClientIDNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// GetClientsClientIDOKBody get clients client ID o k body
// swagger:model GetClientsClientIDOKBody
type GetClientsClientIDOKBody struct {
	models.SuccessData

	// data
	// Required: true
	Data []*DataItems0 `json:"data"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (o *GetClientsClientIDOKBody) UnmarshalJSON(raw []byte) error {
	// GetClientsClientIDOKBodyAO0
	var getClientsClientIDOKBodyAO0 models.SuccessData
	if err := swag.ReadJSON(raw, &getClientsClientIDOKBodyAO0); err != nil {
		return err
	}
	o.SuccessData = getClientsClientIDOKBodyAO0

	// GetClientsClientIDOKBodyAO1
	var dataGetClientsClientIDOKBodyAO1 struct {
		Data []*DataItems0 `json:"data"`
	}
	if err := swag.ReadJSON(raw, &dataGetClientsClientIDOKBodyAO1); err != nil {
		return err
	}

	o.Data = dataGetClientsClientIDOKBodyAO1.Data

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (o GetClientsClientIDOKBody) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 2)

	getClientsClientIDOKBodyAO0, err := swag.WriteJSON(o.SuccessData)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, getClientsClientIDOKBodyAO0)

	var dataGetClientsClientIDOKBodyAO1 struct {
		Data []*DataItems0 `json:"data"`
	}

	dataGetClientsClientIDOKBodyAO1.Data = o.Data

	jsonDataGetClientsClientIDOKBodyAO1, errGetClientsClientIDOKBodyAO1 := swag.WriteJSON(dataGetClientsClientIDOKBodyAO1)
	if errGetClientsClientIDOKBodyAO1 != nil {
		return nil, errGetClientsClientIDOKBodyAO1
	}
	_parts = append(_parts, jsonDataGetClientsClientIDOKBodyAO1)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this get clients client ID o k body
func (o *GetClientsClientIDOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with models.SuccessData
	if err := o.SuccessData.Validate(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetClientsClientIDOKBody) validateData(formats strfmt.Registry) error {

	if err := validate.Required("getClientsClientIdOK"+"."+"data", "body", o.Data); err != nil {
		return err
	}

	for i := 0; i < len(o.Data); i++ {
		if swag.IsZero(o.Data[i]) { // not required
			continue
		}

		if o.Data[i] != nil {
			if err := o.Data[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getClientsClientIdOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetClientsClientIDOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetClientsClientIDOKBody) UnmarshalBinary(b []byte) error {
	var res GetClientsClientIDOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
