// Code generated by go-swagger; DO NOT EDIT.

package client

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	errors "github.com/go-openapi/errors"
	middleware "github.com/go-openapi/runtime/middleware"
	strfmt "github.com/go-openapi/strfmt"
	swag "github.com/go-openapi/swag"
	validate "github.com/go-openapi/validate"

	models "repo.nefrosovet.ru/maximus-platform/auth/api/models"
)

// DeleteClientsClientIDHandlerFunc turns a function with the right signature into a delete clients client ID handler
type DeleteClientsClientIDHandlerFunc func(DeleteClientsClientIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DeleteClientsClientIDHandlerFunc) Handle(params DeleteClientsClientIDParams) middleware.Responder {
	return fn(params)
}

// DeleteClientsClientIDHandler interface for that can handle valid delete clients client ID params
type DeleteClientsClientIDHandler interface {
	Handle(DeleteClientsClientIDParams) middleware.Responder
}

// NewDeleteClientsClientID creates a new http.Handler for the delete clients client ID operation
func NewDeleteClientsClientID(ctx *middleware.Context, handler DeleteClientsClientIDHandler) *DeleteClientsClientID {
	return &DeleteClientsClientID{Context: ctx, Handler: handler}
}

/*DeleteClientsClientID swagger:route DELETE /clients/{clientID} Client deleteClientsClientId

Удаление клиента

*/
type DeleteClientsClientID struct {
	Context *middleware.Context
	Handler DeleteClientsClientIDHandler
}

func (o *DeleteClientsClientID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewDeleteClientsClientIDParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

// DeleteClientsClientIDInternalServerErrorBody delete clients client ID internal server error body
// swagger:model DeleteClientsClientIDInternalServerErrorBody
type DeleteClientsClientIDInternalServerErrorBody struct {
	models.Error500Data
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (o *DeleteClientsClientIDInternalServerErrorBody) UnmarshalJSON(raw []byte) error {
	// DeleteClientsClientIDInternalServerErrorBodyAO0
	var deleteClientsClientIDInternalServerErrorBodyAO0 models.Error500Data
	if err := swag.ReadJSON(raw, &deleteClientsClientIDInternalServerErrorBodyAO0); err != nil {
		return err
	}
	o.Error500Data = deleteClientsClientIDInternalServerErrorBodyAO0

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (o DeleteClientsClientIDInternalServerErrorBody) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 1)

	deleteClientsClientIDInternalServerErrorBodyAO0, err := swag.WriteJSON(o.Error500Data)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, deleteClientsClientIDInternalServerErrorBodyAO0)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this delete clients client ID internal server error body
func (o *DeleteClientsClientIDInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with models.Error500Data
	if err := o.Error500Data.Validate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (o *DeleteClientsClientIDInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteClientsClientIDInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res DeleteClientsClientIDInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// DeleteClientsClientIDMethodNotAllowedBody delete clients client ID method not allowed body
// swagger:model DeleteClientsClientIDMethodNotAllowedBody
type DeleteClientsClientIDMethodNotAllowedBody struct {
	models.Error405Data
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (o *DeleteClientsClientIDMethodNotAllowedBody) UnmarshalJSON(raw []byte) error {
	// DeleteClientsClientIDMethodNotAllowedBodyAO0
	var deleteClientsClientIDMethodNotAllowedBodyAO0 models.Error405Data
	if err := swag.ReadJSON(raw, &deleteClientsClientIDMethodNotAllowedBodyAO0); err != nil {
		return err
	}
	o.Error405Data = deleteClientsClientIDMethodNotAllowedBodyAO0

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (o DeleteClientsClientIDMethodNotAllowedBody) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 1)

	deleteClientsClientIDMethodNotAllowedBodyAO0, err := swag.WriteJSON(o.Error405Data)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, deleteClientsClientIDMethodNotAllowedBodyAO0)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this delete clients client ID method not allowed body
func (o *DeleteClientsClientIDMethodNotAllowedBody) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with models.Error405Data
	if err := o.Error405Data.Validate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (o *DeleteClientsClientIDMethodNotAllowedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteClientsClientIDMethodNotAllowedBody) UnmarshalBinary(b []byte) error {
	var res DeleteClientsClientIDMethodNotAllowedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// DeleteClientsClientIDNotFoundBody delete clients client ID not found body
// swagger:model DeleteClientsClientIDNotFoundBody
type DeleteClientsClientIDNotFoundBody struct {
	models.Error404Data
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (o *DeleteClientsClientIDNotFoundBody) UnmarshalJSON(raw []byte) error {
	// DeleteClientsClientIDNotFoundBodyAO0
	var deleteClientsClientIDNotFoundBodyAO0 models.Error404Data
	if err := swag.ReadJSON(raw, &deleteClientsClientIDNotFoundBodyAO0); err != nil {
		return err
	}
	o.Error404Data = deleteClientsClientIDNotFoundBodyAO0

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (o DeleteClientsClientIDNotFoundBody) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 1)

	deleteClientsClientIDNotFoundBodyAO0, err := swag.WriteJSON(o.Error404Data)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, deleteClientsClientIDNotFoundBodyAO0)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this delete clients client ID not found body
func (o *DeleteClientsClientIDNotFoundBody) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with models.Error404Data
	if err := o.Error404Data.Validate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (o *DeleteClientsClientIDNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteClientsClientIDNotFoundBody) UnmarshalBinary(b []byte) error {
	var res DeleteClientsClientIDNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// DeleteClientsClientIDOKBody delete clients client ID o k body
// swagger:model DeleteClientsClientIDOKBody
type DeleteClientsClientIDOKBody struct {
	models.SuccessData

	// data
	// Required: true
	Data []interface{} `json:"data"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (o *DeleteClientsClientIDOKBody) UnmarshalJSON(raw []byte) error {
	// DeleteClientsClientIDOKBodyAO0
	var deleteClientsClientIDOKBodyAO0 models.SuccessData
	if err := swag.ReadJSON(raw, &deleteClientsClientIDOKBodyAO0); err != nil {
		return err
	}
	o.SuccessData = deleteClientsClientIDOKBodyAO0

	// DeleteClientsClientIDOKBodyAO1
	var dataDeleteClientsClientIDOKBodyAO1 struct {
		Data []interface{} `json:"data"`
	}
	if err := swag.ReadJSON(raw, &dataDeleteClientsClientIDOKBodyAO1); err != nil {
		return err
	}

	o.Data = dataDeleteClientsClientIDOKBodyAO1.Data

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (o DeleteClientsClientIDOKBody) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 2)

	deleteClientsClientIDOKBodyAO0, err := swag.WriteJSON(o.SuccessData)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, deleteClientsClientIDOKBodyAO0)

	var dataDeleteClientsClientIDOKBodyAO1 struct {
		Data []interface{} `json:"data"`
	}

	dataDeleteClientsClientIDOKBodyAO1.Data = o.Data

	jsonDataDeleteClientsClientIDOKBodyAO1, errDeleteClientsClientIDOKBodyAO1 := swag.WriteJSON(dataDeleteClientsClientIDOKBodyAO1)
	if errDeleteClientsClientIDOKBodyAO1 != nil {
		return nil, errDeleteClientsClientIDOKBodyAO1
	}
	_parts = append(_parts, jsonDataDeleteClientsClientIDOKBodyAO1)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this delete clients client ID o k body
func (o *DeleteClientsClientIDOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with models.SuccessData
	if err := o.SuccessData.Validate(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DeleteClientsClientIDOKBody) validateData(formats strfmt.Registry) error {

	if err := validate.Required("deleteClientsClientIdOK"+"."+"data", "body", o.Data); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *DeleteClientsClientIDOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteClientsClientIDOKBody) UnmarshalBinary(b []byte) error {
	var res DeleteClientsClientIDOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
