// Code generated by go-swagger; DO NOT EDIT.

package backend

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// PostFlowOKCode is the HTTP code returned for type PostFlowOK
const PostFlowOKCode int = 200

/*PostFlowOK Объект последовательности авторизации

swagger:response postFlowOK
*/
type PostFlowOK struct {

	/*
	  In: Body
	*/
	Payload *PostFlowOKBody `json:"body,omitempty"`
}

// NewPostFlowOK creates PostFlowOK with default headers values
func NewPostFlowOK() *PostFlowOK {

	return &PostFlowOK{}
}

// WithPayload adds the payload to the post flow o k response
func (o *PostFlowOK) WithPayload(payload *PostFlowOKBody) *PostFlowOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post flow o k response
func (o *PostFlowOK) SetPayload(payload *PostFlowOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostFlowOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostFlowNotFoundCode is the HTTP code returned for type PostFlowNotFound
const PostFlowNotFoundCode int = 404

/*PostFlowNotFound Not found

swagger:response postFlowNotFound
*/
type PostFlowNotFound struct {

	/*
	  In: Body
	*/
	Payload *PostFlowNotFoundBody `json:"body,omitempty"`
}

// NewPostFlowNotFound creates PostFlowNotFound with default headers values
func NewPostFlowNotFound() *PostFlowNotFound {

	return &PostFlowNotFound{}
}

// WithPayload adds the payload to the post flow not found response
func (o *PostFlowNotFound) WithPayload(payload *PostFlowNotFoundBody) *PostFlowNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post flow not found response
func (o *PostFlowNotFound) SetPayload(payload *PostFlowNotFoundBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostFlowNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostFlowMethodNotAllowedCode is the HTTP code returned for type PostFlowMethodNotAllowed
const PostFlowMethodNotAllowedCode int = 405

/*PostFlowMethodNotAllowed Invalid Method

swagger:response postFlowMethodNotAllowed
*/
type PostFlowMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *PostFlowMethodNotAllowedBody `json:"body,omitempty"`
}

// NewPostFlowMethodNotAllowed creates PostFlowMethodNotAllowed with default headers values
func NewPostFlowMethodNotAllowed() *PostFlowMethodNotAllowed {

	return &PostFlowMethodNotAllowed{}
}

// WithPayload adds the payload to the post flow method not allowed response
func (o *PostFlowMethodNotAllowed) WithPayload(payload *PostFlowMethodNotAllowedBody) *PostFlowMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post flow method not allowed response
func (o *PostFlowMethodNotAllowed) SetPayload(payload *PostFlowMethodNotAllowedBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostFlowMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostFlowInternalServerErrorCode is the HTTP code returned for type PostFlowInternalServerError
const PostFlowInternalServerErrorCode int = 500

/*PostFlowInternalServerError Internal server error

swagger:response postFlowInternalServerError
*/
type PostFlowInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *PostFlowInternalServerErrorBody `json:"body,omitempty"`
}

// NewPostFlowInternalServerError creates PostFlowInternalServerError with default headers values
func NewPostFlowInternalServerError() *PostFlowInternalServerError {

	return &PostFlowInternalServerError{}
}

// WithPayload adds the payload to the post flow internal server error response
func (o *PostFlowInternalServerError) WithPayload(payload *PostFlowInternalServerErrorBody) *PostFlowInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post flow internal server error response
func (o *PostFlowInternalServerError) SetPayload(payload *PostFlowInternalServerErrorBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostFlowInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
