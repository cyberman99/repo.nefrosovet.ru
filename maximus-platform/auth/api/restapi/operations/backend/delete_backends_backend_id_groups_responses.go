// Code generated by go-swagger; DO NOT EDIT.

package backend

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// DeleteBackendsBackendIDGroupsOKCode is the HTTP code returned for type DeleteBackendsBackendIDGroupsOK
const DeleteBackendsBackendIDGroupsOKCode int = 200

/*DeleteBackendsBackendIDGroupsOK Объект групп бэкенда

swagger:response deleteBackendsBackendIdGroupsOK
*/
type DeleteBackendsBackendIDGroupsOK struct {

	/*
	  In: Body
	*/
	Payload *DeleteBackendsBackendIDGroupsOKBody `json:"body,omitempty"`
}

// NewDeleteBackendsBackendIDGroupsOK creates DeleteBackendsBackendIDGroupsOK with default headers values
func NewDeleteBackendsBackendIDGroupsOK() *DeleteBackendsBackendIDGroupsOK {

	return &DeleteBackendsBackendIDGroupsOK{}
}

// WithPayload adds the payload to the delete backends backend Id groups o k response
func (o *DeleteBackendsBackendIDGroupsOK) WithPayload(payload *DeleteBackendsBackendIDGroupsOKBody) *DeleteBackendsBackendIDGroupsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete backends backend Id groups o k response
func (o *DeleteBackendsBackendIDGroupsOK) SetPayload(payload *DeleteBackendsBackendIDGroupsOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteBackendsBackendIDGroupsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteBackendsBackendIDGroupsNotFoundCode is the HTTP code returned for type DeleteBackendsBackendIDGroupsNotFound
const DeleteBackendsBackendIDGroupsNotFoundCode int = 404

/*DeleteBackendsBackendIDGroupsNotFound Not found

swagger:response deleteBackendsBackendIdGroupsNotFound
*/
type DeleteBackendsBackendIDGroupsNotFound struct {

	/*
	  In: Body
	*/
	Payload *DeleteBackendsBackendIDGroupsNotFoundBody `json:"body,omitempty"`
}

// NewDeleteBackendsBackendIDGroupsNotFound creates DeleteBackendsBackendIDGroupsNotFound with default headers values
func NewDeleteBackendsBackendIDGroupsNotFound() *DeleteBackendsBackendIDGroupsNotFound {

	return &DeleteBackendsBackendIDGroupsNotFound{}
}

// WithPayload adds the payload to the delete backends backend Id groups not found response
func (o *DeleteBackendsBackendIDGroupsNotFound) WithPayload(payload *DeleteBackendsBackendIDGroupsNotFoundBody) *DeleteBackendsBackendIDGroupsNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete backends backend Id groups not found response
func (o *DeleteBackendsBackendIDGroupsNotFound) SetPayload(payload *DeleteBackendsBackendIDGroupsNotFoundBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteBackendsBackendIDGroupsNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteBackendsBackendIDGroupsMethodNotAllowedCode is the HTTP code returned for type DeleteBackendsBackendIDGroupsMethodNotAllowed
const DeleteBackendsBackendIDGroupsMethodNotAllowedCode int = 405

/*DeleteBackendsBackendIDGroupsMethodNotAllowed Invalid Method

swagger:response deleteBackendsBackendIdGroupsMethodNotAllowed
*/
type DeleteBackendsBackendIDGroupsMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *DeleteBackendsBackendIDGroupsMethodNotAllowedBody `json:"body,omitempty"`
}

// NewDeleteBackendsBackendIDGroupsMethodNotAllowed creates DeleteBackendsBackendIDGroupsMethodNotAllowed with default headers values
func NewDeleteBackendsBackendIDGroupsMethodNotAllowed() *DeleteBackendsBackendIDGroupsMethodNotAllowed {

	return &DeleteBackendsBackendIDGroupsMethodNotAllowed{}
}

// WithPayload adds the payload to the delete backends backend Id groups method not allowed response
func (o *DeleteBackendsBackendIDGroupsMethodNotAllowed) WithPayload(payload *DeleteBackendsBackendIDGroupsMethodNotAllowedBody) *DeleteBackendsBackendIDGroupsMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete backends backend Id groups method not allowed response
func (o *DeleteBackendsBackendIDGroupsMethodNotAllowed) SetPayload(payload *DeleteBackendsBackendIDGroupsMethodNotAllowedBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteBackendsBackendIDGroupsMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteBackendsBackendIDGroupsInternalServerErrorCode is the HTTP code returned for type DeleteBackendsBackendIDGroupsInternalServerError
const DeleteBackendsBackendIDGroupsInternalServerErrorCode int = 500

/*DeleteBackendsBackendIDGroupsInternalServerError Internal server error

swagger:response deleteBackendsBackendIdGroupsInternalServerError
*/
type DeleteBackendsBackendIDGroupsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *DeleteBackendsBackendIDGroupsInternalServerErrorBody `json:"body,omitempty"`
}

// NewDeleteBackendsBackendIDGroupsInternalServerError creates DeleteBackendsBackendIDGroupsInternalServerError with default headers values
func NewDeleteBackendsBackendIDGroupsInternalServerError() *DeleteBackendsBackendIDGroupsInternalServerError {

	return &DeleteBackendsBackendIDGroupsInternalServerError{}
}

// WithPayload adds the payload to the delete backends backend Id groups internal server error response
func (o *DeleteBackendsBackendIDGroupsInternalServerError) WithPayload(payload *DeleteBackendsBackendIDGroupsInternalServerErrorBody) *DeleteBackendsBackendIDGroupsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete backends backend Id groups internal server error response
func (o *DeleteBackendsBackendIDGroupsInternalServerError) SetPayload(payload *DeleteBackendsBackendIDGroupsInternalServerErrorBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteBackendsBackendIDGroupsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
