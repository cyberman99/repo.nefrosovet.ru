// Code generated by go-swagger; DO NOT EDIT.

package backend

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// PostBackendsLdapOKCode is the HTTP code returned for type PostBackendsLdapOK
const PostBackendsLdapOKCode int = 200

/*PostBackendsLdapOK Объект LDAP бэкенда

swagger:response postBackendsLdapOK
*/
type PostBackendsLdapOK struct {

	/*
	  In: Body
	*/
	Payload *PostBackendsLdapOKBody `json:"body,omitempty"`
}

// NewPostBackendsLdapOK creates PostBackendsLdapOK with default headers values
func NewPostBackendsLdapOK() *PostBackendsLdapOK {

	return &PostBackendsLdapOK{}
}

// WithPayload adds the payload to the post backends ldap o k response
func (o *PostBackendsLdapOK) WithPayload(payload *PostBackendsLdapOKBody) *PostBackendsLdapOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post backends ldap o k response
func (o *PostBackendsLdapOK) SetPayload(payload *PostBackendsLdapOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostBackendsLdapOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostBackendsLdapMethodNotAllowedCode is the HTTP code returned for type PostBackendsLdapMethodNotAllowed
const PostBackendsLdapMethodNotAllowedCode int = 405

/*PostBackendsLdapMethodNotAllowed Invalid Method

swagger:response postBackendsLdapMethodNotAllowed
*/
type PostBackendsLdapMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *PostBackendsLdapMethodNotAllowedBody `json:"body,omitempty"`
}

// NewPostBackendsLdapMethodNotAllowed creates PostBackendsLdapMethodNotAllowed with default headers values
func NewPostBackendsLdapMethodNotAllowed() *PostBackendsLdapMethodNotAllowed {

	return &PostBackendsLdapMethodNotAllowed{}
}

// WithPayload adds the payload to the post backends ldap method not allowed response
func (o *PostBackendsLdapMethodNotAllowed) WithPayload(payload *PostBackendsLdapMethodNotAllowedBody) *PostBackendsLdapMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post backends ldap method not allowed response
func (o *PostBackendsLdapMethodNotAllowed) SetPayload(payload *PostBackendsLdapMethodNotAllowedBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostBackendsLdapMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostBackendsLdapInternalServerErrorCode is the HTTP code returned for type PostBackendsLdapInternalServerError
const PostBackendsLdapInternalServerErrorCode int = 500

/*PostBackendsLdapInternalServerError Internal server error

swagger:response postBackendsLdapInternalServerError
*/
type PostBackendsLdapInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *PostBackendsLdapInternalServerErrorBody `json:"body,omitempty"`
}

// NewPostBackendsLdapInternalServerError creates PostBackendsLdapInternalServerError with default headers values
func NewPostBackendsLdapInternalServerError() *PostBackendsLdapInternalServerError {

	return &PostBackendsLdapInternalServerError{}
}

// WithPayload adds the payload to the post backends ldap internal server error response
func (o *PostBackendsLdapInternalServerError) WithPayload(payload *PostBackendsLdapInternalServerErrorBody) *PostBackendsLdapInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post backends ldap internal server error response
func (o *PostBackendsLdapInternalServerError) SetPayload(payload *PostBackendsLdapInternalServerErrorBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostBackendsLdapInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
