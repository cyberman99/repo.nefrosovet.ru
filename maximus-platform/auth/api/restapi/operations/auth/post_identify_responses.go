// Code generated by go-swagger; DO NOT EDIT.

package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// PostIdentifyOKCode is the HTTP code returned for type PostIdentifyOK
const PostIdentifyOKCode int = 200

/*PostIdentifyOK Результат аутентификации

swagger:response postIdentifyOK
*/
type PostIdentifyOK struct {

	/*
	  In: Body
	*/
	Payload *PostIdentifyOKBody `json:"body,omitempty"`
}

// NewPostIdentifyOK creates PostIdentifyOK with default headers values
func NewPostIdentifyOK() *PostIdentifyOK {

	return &PostIdentifyOK{}
}

// WithPayload adds the payload to the post identify o k response
func (o *PostIdentifyOK) WithPayload(payload *PostIdentifyOKBody) *PostIdentifyOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post identify o k response
func (o *PostIdentifyOK) SetPayload(payload *PostIdentifyOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostIdentifyOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostIdentifyUnauthorizedCode is the HTTP code returned for type PostIdentifyUnauthorized
const PostIdentifyUnauthorizedCode int = 401

/*PostIdentifyUnauthorized Access denied

swagger:response postIdentifyUnauthorized
*/
type PostIdentifyUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *PostIdentifyUnauthorizedBody `json:"body,omitempty"`
}

// NewPostIdentifyUnauthorized creates PostIdentifyUnauthorized with default headers values
func NewPostIdentifyUnauthorized() *PostIdentifyUnauthorized {

	return &PostIdentifyUnauthorized{}
}

// WithPayload adds the payload to the post identify unauthorized response
func (o *PostIdentifyUnauthorized) WithPayload(payload *PostIdentifyUnauthorizedBody) *PostIdentifyUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post identify unauthorized response
func (o *PostIdentifyUnauthorized) SetPayload(payload *PostIdentifyUnauthorizedBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostIdentifyUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostIdentifyMethodNotAllowedCode is the HTTP code returned for type PostIdentifyMethodNotAllowed
const PostIdentifyMethodNotAllowedCode int = 405

/*PostIdentifyMethodNotAllowed Invalid Method

swagger:response postIdentifyMethodNotAllowed
*/
type PostIdentifyMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *PostIdentifyMethodNotAllowedBody `json:"body,omitempty"`
}

// NewPostIdentifyMethodNotAllowed creates PostIdentifyMethodNotAllowed with default headers values
func NewPostIdentifyMethodNotAllowed() *PostIdentifyMethodNotAllowed {

	return &PostIdentifyMethodNotAllowed{}
}

// WithPayload adds the payload to the post identify method not allowed response
func (o *PostIdentifyMethodNotAllowed) WithPayload(payload *PostIdentifyMethodNotAllowedBody) *PostIdentifyMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post identify method not allowed response
func (o *PostIdentifyMethodNotAllowed) SetPayload(payload *PostIdentifyMethodNotAllowedBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostIdentifyMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostIdentifyInternalServerErrorCode is the HTTP code returned for type PostIdentifyInternalServerError
const PostIdentifyInternalServerErrorCode int = 500

/*PostIdentifyInternalServerError Internal server error

swagger:response postIdentifyInternalServerError
*/
type PostIdentifyInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *PostIdentifyInternalServerErrorBody `json:"body,omitempty"`
}

// NewPostIdentifyInternalServerError creates PostIdentifyInternalServerError with default headers values
func NewPostIdentifyInternalServerError() *PostIdentifyInternalServerError {

	return &PostIdentifyInternalServerError{}
}

// WithPayload adds the payload to the post identify internal server error response
func (o *PostIdentifyInternalServerError) WithPayload(payload *PostIdentifyInternalServerErrorBody) *PostIdentifyInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post identify internal server error response
func (o *PostIdentifyInternalServerError) SetPayload(payload *PostIdentifyInternalServerErrorBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostIdentifyInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
