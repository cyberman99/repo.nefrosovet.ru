// Code generated by go-swagger; DO NOT EDIT.

package role

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// GetRolesRoleIDUsersOKCode is the HTTP code returned for type GetRolesRoleIDUsersOK
const GetRolesRoleIDUsersOKCode int = 200

/*GetRolesRoleIDUsersOK Коллекция пользователей

swagger:response getRolesRoleIdUsersOK
*/
type GetRolesRoleIDUsersOK struct {

	/*
	  In: Body
	*/
	Payload *GetRolesRoleIDUsersOKBody `json:"body,omitempty"`
}

// NewGetRolesRoleIDUsersOK creates GetRolesRoleIDUsersOK with default headers values
func NewGetRolesRoleIDUsersOK() *GetRolesRoleIDUsersOK {

	return &GetRolesRoleIDUsersOK{}
}

// WithPayload adds the payload to the get roles role Id users o k response
func (o *GetRolesRoleIDUsersOK) WithPayload(payload *GetRolesRoleIDUsersOKBody) *GetRolesRoleIDUsersOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get roles role Id users o k response
func (o *GetRolesRoleIDUsersOK) SetPayload(payload *GetRolesRoleIDUsersOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRolesRoleIDUsersOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetRolesRoleIDUsersNotFoundCode is the HTTP code returned for type GetRolesRoleIDUsersNotFound
const GetRolesRoleIDUsersNotFoundCode int = 404

/*GetRolesRoleIDUsersNotFound Not found

swagger:response getRolesRoleIdUsersNotFound
*/
type GetRolesRoleIDUsersNotFound struct {

	/*
	  In: Body
	*/
	Payload *GetRolesRoleIDUsersNotFoundBody `json:"body,omitempty"`
}

// NewGetRolesRoleIDUsersNotFound creates GetRolesRoleIDUsersNotFound with default headers values
func NewGetRolesRoleIDUsersNotFound() *GetRolesRoleIDUsersNotFound {

	return &GetRolesRoleIDUsersNotFound{}
}

// WithPayload adds the payload to the get roles role Id users not found response
func (o *GetRolesRoleIDUsersNotFound) WithPayload(payload *GetRolesRoleIDUsersNotFoundBody) *GetRolesRoleIDUsersNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get roles role Id users not found response
func (o *GetRolesRoleIDUsersNotFound) SetPayload(payload *GetRolesRoleIDUsersNotFoundBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRolesRoleIDUsersNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetRolesRoleIDUsersMethodNotAllowedCode is the HTTP code returned for type GetRolesRoleIDUsersMethodNotAllowed
const GetRolesRoleIDUsersMethodNotAllowedCode int = 405

/*GetRolesRoleIDUsersMethodNotAllowed Invalid Method

swagger:response getRolesRoleIdUsersMethodNotAllowed
*/
type GetRolesRoleIDUsersMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *GetRolesRoleIDUsersMethodNotAllowedBody `json:"body,omitempty"`
}

// NewGetRolesRoleIDUsersMethodNotAllowed creates GetRolesRoleIDUsersMethodNotAllowed with default headers values
func NewGetRolesRoleIDUsersMethodNotAllowed() *GetRolesRoleIDUsersMethodNotAllowed {

	return &GetRolesRoleIDUsersMethodNotAllowed{}
}

// WithPayload adds the payload to the get roles role Id users method not allowed response
func (o *GetRolesRoleIDUsersMethodNotAllowed) WithPayload(payload *GetRolesRoleIDUsersMethodNotAllowedBody) *GetRolesRoleIDUsersMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get roles role Id users method not allowed response
func (o *GetRolesRoleIDUsersMethodNotAllowed) SetPayload(payload *GetRolesRoleIDUsersMethodNotAllowedBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRolesRoleIDUsersMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetRolesRoleIDUsersInternalServerErrorCode is the HTTP code returned for type GetRolesRoleIDUsersInternalServerError
const GetRolesRoleIDUsersInternalServerErrorCode int = 500

/*GetRolesRoleIDUsersInternalServerError Internal server error

swagger:response getRolesRoleIdUsersInternalServerError
*/
type GetRolesRoleIDUsersInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *GetRolesRoleIDUsersInternalServerErrorBody `json:"body,omitempty"`
}

// NewGetRolesRoleIDUsersInternalServerError creates GetRolesRoleIDUsersInternalServerError with default headers values
func NewGetRolesRoleIDUsersInternalServerError() *GetRolesRoleIDUsersInternalServerError {

	return &GetRolesRoleIDUsersInternalServerError{}
}

// WithPayload adds the payload to the get roles role Id users internal server error response
func (o *GetRolesRoleIDUsersInternalServerError) WithPayload(payload *GetRolesRoleIDUsersInternalServerErrorBody) *GetRolesRoleIDUsersInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get roles role Id users internal server error response
func (o *GetRolesRoleIDUsersInternalServerError) SetPayload(payload *GetRolesRoleIDUsersInternalServerErrorBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRolesRoleIDUsersInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
