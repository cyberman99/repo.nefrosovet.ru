// Code generated by go-swagger; DO NOT EDIT.

package role

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// GetRolesRoleIDOKCode is the HTTP code returned for type GetRolesRoleIDOK
const GetRolesRoleIDOKCode int = 200

/*GetRolesRoleIDOK Объект роли

swagger:response getRolesRoleIdOK
*/
type GetRolesRoleIDOK struct {

	/*
	  In: Body
	*/
	Payload *GetRolesRoleIDOKBody `json:"body,omitempty"`
}

// NewGetRolesRoleIDOK creates GetRolesRoleIDOK with default headers values
func NewGetRolesRoleIDOK() *GetRolesRoleIDOK {

	return &GetRolesRoleIDOK{}
}

// WithPayload adds the payload to the get roles role Id o k response
func (o *GetRolesRoleIDOK) WithPayload(payload *GetRolesRoleIDOKBody) *GetRolesRoleIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get roles role Id o k response
func (o *GetRolesRoleIDOK) SetPayload(payload *GetRolesRoleIDOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRolesRoleIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetRolesRoleIDNotFoundCode is the HTTP code returned for type GetRolesRoleIDNotFound
const GetRolesRoleIDNotFoundCode int = 404

/*GetRolesRoleIDNotFound Not found

swagger:response getRolesRoleIdNotFound
*/
type GetRolesRoleIDNotFound struct {

	/*
	  In: Body
	*/
	Payload *GetRolesRoleIDNotFoundBody `json:"body,omitempty"`
}

// NewGetRolesRoleIDNotFound creates GetRolesRoleIDNotFound with default headers values
func NewGetRolesRoleIDNotFound() *GetRolesRoleIDNotFound {

	return &GetRolesRoleIDNotFound{}
}

// WithPayload adds the payload to the get roles role Id not found response
func (o *GetRolesRoleIDNotFound) WithPayload(payload *GetRolesRoleIDNotFoundBody) *GetRolesRoleIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get roles role Id not found response
func (o *GetRolesRoleIDNotFound) SetPayload(payload *GetRolesRoleIDNotFoundBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRolesRoleIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetRolesRoleIDMethodNotAllowedCode is the HTTP code returned for type GetRolesRoleIDMethodNotAllowed
const GetRolesRoleIDMethodNotAllowedCode int = 405

/*GetRolesRoleIDMethodNotAllowed Invalid Method

swagger:response getRolesRoleIdMethodNotAllowed
*/
type GetRolesRoleIDMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *GetRolesRoleIDMethodNotAllowedBody `json:"body,omitempty"`
}

// NewGetRolesRoleIDMethodNotAllowed creates GetRolesRoleIDMethodNotAllowed with default headers values
func NewGetRolesRoleIDMethodNotAllowed() *GetRolesRoleIDMethodNotAllowed {

	return &GetRolesRoleIDMethodNotAllowed{}
}

// WithPayload adds the payload to the get roles role Id method not allowed response
func (o *GetRolesRoleIDMethodNotAllowed) WithPayload(payload *GetRolesRoleIDMethodNotAllowedBody) *GetRolesRoleIDMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get roles role Id method not allowed response
func (o *GetRolesRoleIDMethodNotAllowed) SetPayload(payload *GetRolesRoleIDMethodNotAllowedBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRolesRoleIDMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetRolesRoleIDInternalServerErrorCode is the HTTP code returned for type GetRolesRoleIDInternalServerError
const GetRolesRoleIDInternalServerErrorCode int = 500

/*GetRolesRoleIDInternalServerError Internal server error

swagger:response getRolesRoleIdInternalServerError
*/
type GetRolesRoleIDInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *GetRolesRoleIDInternalServerErrorBody `json:"body,omitempty"`
}

// NewGetRolesRoleIDInternalServerError creates GetRolesRoleIDInternalServerError with default headers values
func NewGetRolesRoleIDInternalServerError() *GetRolesRoleIDInternalServerError {

	return &GetRolesRoleIDInternalServerError{}
}

// WithPayload adds the payload to the get roles role Id internal server error response
func (o *GetRolesRoleIDInternalServerError) WithPayload(payload *GetRolesRoleIDInternalServerErrorBody) *GetRolesRoleIDInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get roles role Id internal server error response
func (o *GetRolesRoleIDInternalServerError) SetPayload(payload *GetRolesRoleIDInternalServerErrorBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRolesRoleIDInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
