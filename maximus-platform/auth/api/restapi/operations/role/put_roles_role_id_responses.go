// Code generated by go-swagger; DO NOT EDIT.

package role

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// PutRolesRoleIDOKCode is the HTTP code returned for type PutRolesRoleIDOK
const PutRolesRoleIDOKCode int = 200

/*PutRolesRoleIDOK Объект роли

swagger:response putRolesRoleIdOK
*/
type PutRolesRoleIDOK struct {

	/*
	  In: Body
	*/
	Payload *PutRolesRoleIDOKBody `json:"body,omitempty"`
}

// NewPutRolesRoleIDOK creates PutRolesRoleIDOK with default headers values
func NewPutRolesRoleIDOK() *PutRolesRoleIDOK {

	return &PutRolesRoleIDOK{}
}

// WithPayload adds the payload to the put roles role Id o k response
func (o *PutRolesRoleIDOK) WithPayload(payload *PutRolesRoleIDOKBody) *PutRolesRoleIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put roles role Id o k response
func (o *PutRolesRoleIDOK) SetPayload(payload *PutRolesRoleIDOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutRolesRoleIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutRolesRoleIDBadRequestCode is the HTTP code returned for type PutRolesRoleIDBadRequest
const PutRolesRoleIDBadRequestCode int = 400

/*PutRolesRoleIDBadRequest Коллекция авторизации

swagger:response putRolesRoleIdBadRequest
*/
type PutRolesRoleIDBadRequest struct {

	/*
	  In: Body
	*/
	Payload *PutRolesRoleIDBadRequestBody `json:"body,omitempty"`
}

// NewPutRolesRoleIDBadRequest creates PutRolesRoleIDBadRequest with default headers values
func NewPutRolesRoleIDBadRequest() *PutRolesRoleIDBadRequest {

	return &PutRolesRoleIDBadRequest{}
}

// WithPayload adds the payload to the put roles role Id bad request response
func (o *PutRolesRoleIDBadRequest) WithPayload(payload *PutRolesRoleIDBadRequestBody) *PutRolesRoleIDBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put roles role Id bad request response
func (o *PutRolesRoleIDBadRequest) SetPayload(payload *PutRolesRoleIDBadRequestBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutRolesRoleIDBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutRolesRoleIDNotFoundCode is the HTTP code returned for type PutRolesRoleIDNotFound
const PutRolesRoleIDNotFoundCode int = 404

/*PutRolesRoleIDNotFound Not found

swagger:response putRolesRoleIdNotFound
*/
type PutRolesRoleIDNotFound struct {

	/*
	  In: Body
	*/
	Payload *PutRolesRoleIDNotFoundBody `json:"body,omitempty"`
}

// NewPutRolesRoleIDNotFound creates PutRolesRoleIDNotFound with default headers values
func NewPutRolesRoleIDNotFound() *PutRolesRoleIDNotFound {

	return &PutRolesRoleIDNotFound{}
}

// WithPayload adds the payload to the put roles role Id not found response
func (o *PutRolesRoleIDNotFound) WithPayload(payload *PutRolesRoleIDNotFoundBody) *PutRolesRoleIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put roles role Id not found response
func (o *PutRolesRoleIDNotFound) SetPayload(payload *PutRolesRoleIDNotFoundBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutRolesRoleIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutRolesRoleIDMethodNotAllowedCode is the HTTP code returned for type PutRolesRoleIDMethodNotAllowed
const PutRolesRoleIDMethodNotAllowedCode int = 405

/*PutRolesRoleIDMethodNotAllowed Invalid Method

swagger:response putRolesRoleIdMethodNotAllowed
*/
type PutRolesRoleIDMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *PutRolesRoleIDMethodNotAllowedBody `json:"body,omitempty"`
}

// NewPutRolesRoleIDMethodNotAllowed creates PutRolesRoleIDMethodNotAllowed with default headers values
func NewPutRolesRoleIDMethodNotAllowed() *PutRolesRoleIDMethodNotAllowed {

	return &PutRolesRoleIDMethodNotAllowed{}
}

// WithPayload adds the payload to the put roles role Id method not allowed response
func (o *PutRolesRoleIDMethodNotAllowed) WithPayload(payload *PutRolesRoleIDMethodNotAllowedBody) *PutRolesRoleIDMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put roles role Id method not allowed response
func (o *PutRolesRoleIDMethodNotAllowed) SetPayload(payload *PutRolesRoleIDMethodNotAllowedBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutRolesRoleIDMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutRolesRoleIDInternalServerErrorCode is the HTTP code returned for type PutRolesRoleIDInternalServerError
const PutRolesRoleIDInternalServerErrorCode int = 500

/*PutRolesRoleIDInternalServerError Internal server error

swagger:response putRolesRoleIdInternalServerError
*/
type PutRolesRoleIDInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *PutRolesRoleIDInternalServerErrorBody `json:"body,omitempty"`
}

// NewPutRolesRoleIDInternalServerError creates PutRolesRoleIDInternalServerError with default headers values
func NewPutRolesRoleIDInternalServerError() *PutRolesRoleIDInternalServerError {

	return &PutRolesRoleIDInternalServerError{}
}

// WithPayload adds the payload to the put roles role Id internal server error response
func (o *PutRolesRoleIDInternalServerError) WithPayload(payload *PutRolesRoleIDInternalServerErrorBody) *PutRolesRoleIDInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put roles role Id internal server error response
func (o *PutRolesRoleIDInternalServerError) SetPayload(payload *PutRolesRoleIDInternalServerErrorBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutRolesRoleIDInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
