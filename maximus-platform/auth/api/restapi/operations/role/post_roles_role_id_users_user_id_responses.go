// Code generated by go-swagger; DO NOT EDIT.

package role

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// PostRolesRoleIDUsersUserIDOKCode is the HTTP code returned for type PostRolesRoleIDUsersUserIDOK
const PostRolesRoleIDUsersUserIDOKCode int = 200

/*PostRolesRoleIDUsersUserIDOK Коллекция пользователей

swagger:response postRolesRoleIdUsersUserIdOK
*/
type PostRolesRoleIDUsersUserIDOK struct {

	/*
	  In: Body
	*/
	Payload *PostRolesRoleIDUsersUserIDOKBody `json:"body,omitempty"`
}

// NewPostRolesRoleIDUsersUserIDOK creates PostRolesRoleIDUsersUserIDOK with default headers values
func NewPostRolesRoleIDUsersUserIDOK() *PostRolesRoleIDUsersUserIDOK {

	return &PostRolesRoleIDUsersUserIDOK{}
}

// WithPayload adds the payload to the post roles role Id users user Id o k response
func (o *PostRolesRoleIDUsersUserIDOK) WithPayload(payload *PostRolesRoleIDUsersUserIDOKBody) *PostRolesRoleIDUsersUserIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post roles role Id users user Id o k response
func (o *PostRolesRoleIDUsersUserIDOK) SetPayload(payload *PostRolesRoleIDUsersUserIDOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostRolesRoleIDUsersUserIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostRolesRoleIDUsersUserIDBadRequestCode is the HTTP code returned for type PostRolesRoleIDUsersUserIDBadRequest
const PostRolesRoleIDUsersUserIDBadRequestCode int = 400

/*PostRolesRoleIDUsersUserIDBadRequest Коллекция авторизации

swagger:response postRolesRoleIdUsersUserIdBadRequest
*/
type PostRolesRoleIDUsersUserIDBadRequest struct {

	/*
	  In: Body
	*/
	Payload *PostRolesRoleIDUsersUserIDBadRequestBody `json:"body,omitempty"`
}

// NewPostRolesRoleIDUsersUserIDBadRequest creates PostRolesRoleIDUsersUserIDBadRequest with default headers values
func NewPostRolesRoleIDUsersUserIDBadRequest() *PostRolesRoleIDUsersUserIDBadRequest {

	return &PostRolesRoleIDUsersUserIDBadRequest{}
}

// WithPayload adds the payload to the post roles role Id users user Id bad request response
func (o *PostRolesRoleIDUsersUserIDBadRequest) WithPayload(payload *PostRolesRoleIDUsersUserIDBadRequestBody) *PostRolesRoleIDUsersUserIDBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post roles role Id users user Id bad request response
func (o *PostRolesRoleIDUsersUserIDBadRequest) SetPayload(payload *PostRolesRoleIDUsersUserIDBadRequestBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostRolesRoleIDUsersUserIDBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostRolesRoleIDUsersUserIDNotFoundCode is the HTTP code returned for type PostRolesRoleIDUsersUserIDNotFound
const PostRolesRoleIDUsersUserIDNotFoundCode int = 404

/*PostRolesRoleIDUsersUserIDNotFound Not found

swagger:response postRolesRoleIdUsersUserIdNotFound
*/
type PostRolesRoleIDUsersUserIDNotFound struct {

	/*
	  In: Body
	*/
	Payload *PostRolesRoleIDUsersUserIDNotFoundBody `json:"body,omitempty"`
}

// NewPostRolesRoleIDUsersUserIDNotFound creates PostRolesRoleIDUsersUserIDNotFound with default headers values
func NewPostRolesRoleIDUsersUserIDNotFound() *PostRolesRoleIDUsersUserIDNotFound {

	return &PostRolesRoleIDUsersUserIDNotFound{}
}

// WithPayload adds the payload to the post roles role Id users user Id not found response
func (o *PostRolesRoleIDUsersUserIDNotFound) WithPayload(payload *PostRolesRoleIDUsersUserIDNotFoundBody) *PostRolesRoleIDUsersUserIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post roles role Id users user Id not found response
func (o *PostRolesRoleIDUsersUserIDNotFound) SetPayload(payload *PostRolesRoleIDUsersUserIDNotFoundBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostRolesRoleIDUsersUserIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostRolesRoleIDUsersUserIDMethodNotAllowedCode is the HTTP code returned for type PostRolesRoleIDUsersUserIDMethodNotAllowed
const PostRolesRoleIDUsersUserIDMethodNotAllowedCode int = 405

/*PostRolesRoleIDUsersUserIDMethodNotAllowed Invalid Method

swagger:response postRolesRoleIdUsersUserIdMethodNotAllowed
*/
type PostRolesRoleIDUsersUserIDMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *PostRolesRoleIDUsersUserIDMethodNotAllowedBody `json:"body,omitempty"`
}

// NewPostRolesRoleIDUsersUserIDMethodNotAllowed creates PostRolesRoleIDUsersUserIDMethodNotAllowed with default headers values
func NewPostRolesRoleIDUsersUserIDMethodNotAllowed() *PostRolesRoleIDUsersUserIDMethodNotAllowed {

	return &PostRolesRoleIDUsersUserIDMethodNotAllowed{}
}

// WithPayload adds the payload to the post roles role Id users user Id method not allowed response
func (o *PostRolesRoleIDUsersUserIDMethodNotAllowed) WithPayload(payload *PostRolesRoleIDUsersUserIDMethodNotAllowedBody) *PostRolesRoleIDUsersUserIDMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post roles role Id users user Id method not allowed response
func (o *PostRolesRoleIDUsersUserIDMethodNotAllowed) SetPayload(payload *PostRolesRoleIDUsersUserIDMethodNotAllowedBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostRolesRoleIDUsersUserIDMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostRolesRoleIDUsersUserIDInternalServerErrorCode is the HTTP code returned for type PostRolesRoleIDUsersUserIDInternalServerError
const PostRolesRoleIDUsersUserIDInternalServerErrorCode int = 500

/*PostRolesRoleIDUsersUserIDInternalServerError Internal server error

swagger:response postRolesRoleIdUsersUserIdInternalServerError
*/
type PostRolesRoleIDUsersUserIDInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *PostRolesRoleIDUsersUserIDInternalServerErrorBody `json:"body,omitempty"`
}

// NewPostRolesRoleIDUsersUserIDInternalServerError creates PostRolesRoleIDUsersUserIDInternalServerError with default headers values
func NewPostRolesRoleIDUsersUserIDInternalServerError() *PostRolesRoleIDUsersUserIDInternalServerError {

	return &PostRolesRoleIDUsersUserIDInternalServerError{}
}

// WithPayload adds the payload to the post roles role Id users user Id internal server error response
func (o *PostRolesRoleIDUsersUserIDInternalServerError) WithPayload(payload *PostRolesRoleIDUsersUserIDInternalServerErrorBody) *PostRolesRoleIDUsersUserIDInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post roles role Id users user Id internal server error response
func (o *PostRolesRoleIDUsersUserIDInternalServerError) SetPayload(payload *PostRolesRoleIDUsersUserIDInternalServerErrorBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostRolesRoleIDUsersUserIDInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
