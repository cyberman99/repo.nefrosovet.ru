// Code generated by go-swagger; DO NOT EDIT.

package role

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// GetRolesOKCode is the HTTP code returned for type GetRolesOK
const GetRolesOKCode int = 200

/*GetRolesOK Объект роли

swagger:response getRolesOK
*/
type GetRolesOK struct {

	/*
	  In: Body
	*/
	Payload *GetRolesOKBody `json:"body,omitempty"`
}

// NewGetRolesOK creates GetRolesOK with default headers values
func NewGetRolesOK() *GetRolesOK {

	return &GetRolesOK{}
}

// WithPayload adds the payload to the get roles o k response
func (o *GetRolesOK) WithPayload(payload *GetRolesOKBody) *GetRolesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get roles o k response
func (o *GetRolesOK) SetPayload(payload *GetRolesOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRolesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetRolesBadRequestCode is the HTTP code returned for type GetRolesBadRequest
const GetRolesBadRequestCode int = 400

/*GetRolesBadRequest Коллекция авторизации

swagger:response getRolesBadRequest
*/
type GetRolesBadRequest struct {

	/*
	  In: Body
	*/
	Payload *GetRolesBadRequestBody `json:"body,omitempty"`
}

// NewGetRolesBadRequest creates GetRolesBadRequest with default headers values
func NewGetRolesBadRequest() *GetRolesBadRequest {

	return &GetRolesBadRequest{}
}

// WithPayload adds the payload to the get roles bad request response
func (o *GetRolesBadRequest) WithPayload(payload *GetRolesBadRequestBody) *GetRolesBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get roles bad request response
func (o *GetRolesBadRequest) SetPayload(payload *GetRolesBadRequestBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRolesBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetRolesMethodNotAllowedCode is the HTTP code returned for type GetRolesMethodNotAllowed
const GetRolesMethodNotAllowedCode int = 405

/*GetRolesMethodNotAllowed Invalid Method

swagger:response getRolesMethodNotAllowed
*/
type GetRolesMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *GetRolesMethodNotAllowedBody `json:"body,omitempty"`
}

// NewGetRolesMethodNotAllowed creates GetRolesMethodNotAllowed with default headers values
func NewGetRolesMethodNotAllowed() *GetRolesMethodNotAllowed {

	return &GetRolesMethodNotAllowed{}
}

// WithPayload adds the payload to the get roles method not allowed response
func (o *GetRolesMethodNotAllowed) WithPayload(payload *GetRolesMethodNotAllowedBody) *GetRolesMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get roles method not allowed response
func (o *GetRolesMethodNotAllowed) SetPayload(payload *GetRolesMethodNotAllowedBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRolesMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetRolesInternalServerErrorCode is the HTTP code returned for type GetRolesInternalServerError
const GetRolesInternalServerErrorCode int = 500

/*GetRolesInternalServerError Internal server error

swagger:response getRolesInternalServerError
*/
type GetRolesInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *GetRolesInternalServerErrorBody `json:"body,omitempty"`
}

// NewGetRolesInternalServerError creates GetRolesInternalServerError with default headers values
func NewGetRolesInternalServerError() *GetRolesInternalServerError {

	return &GetRolesInternalServerError{}
}

// WithPayload adds the payload to the get roles internal server error response
func (o *GetRolesInternalServerError) WithPayload(payload *GetRolesInternalServerErrorBody) *GetRolesInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get roles internal server error response
func (o *GetRolesInternalServerError) SetPayload(payload *GetRolesInternalServerErrorBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRolesInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
