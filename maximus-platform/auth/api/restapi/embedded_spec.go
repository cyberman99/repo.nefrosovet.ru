// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "#### RESTFUL Auth API\n",
    "title": "Auth API",
    "version": "2.0.0"
  },
  "host": "auth.maximus.lan",
  "basePath": "/",
  "paths": {
    "/admin": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Admin"
        ],
        "summary": "Редактирование админской учетной записи",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Admin_params"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/Base_response_200"
          },
          "400": {
            "$ref": "#/responses/Base_response_400"
          },
          "405": {
            "$ref": "#/responses/Base_response_405"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      }
    },
    "/backends": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Backend"
        ],
        "summary": "Коллекция бэкендов",
        "responses": {
          "200": {
            "$ref": "#/responses/Base_response_200"
          },
          "405": {
            "$ref": "#/responses/Base_response_405"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      }
    },
    "/backends/ldap": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Backend"
        ],
        "summary": "Создание LDAP бэкенда",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Backend_ldap_params"
                },
                {
                  "$ref": "#/definitions/Password_object"
                },
                {
                  "$ref": "#/definitions/Backend_params"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/Backend_ldap_response_200"
          },
          "405": {
            "$ref": "#/responses/Base_response_405"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      }
    },
    "/backends/ldap/{backendID}": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Backend"
        ],
        "summary": "Изменение LDAP бэкенда",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Backend_ldap_params"
                },
                {
                  "$ref": "#/definitions/Password_object"
                },
                {
                  "$ref": "#/definitions/Backend_params"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/Backend_ldap_response_200"
          },
          "404": {
            "$ref": "#/responses/Base_response_404"
          },
          "405": {
            "$ref": "#/responses/Base_response_405"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Backend"
        ],
        "summary": "Изменение LDAP бэкенда",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Backend_patch_ldap_params"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/Backend_ldap_response_200"
          },
          "404": {
            "$ref": "#/responses/Base_response_404"
          },
          "405": {
            "$ref": "#/responses/Base_response_405"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/backendID"
        }
      ]
    },
    "/backends/oauth2": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Backend"
        ],
        "summary": "Создание oauth2 бэкенда",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Backend_oauth2_params"
                },
                {
                  "$ref": "#/definitions/Backend_params"
                },
                {
                  "$ref": "#/definitions/Backend_oauth2_ID_param"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/Backend_oauth2_response_200"
          },
          "405": {
            "$ref": "#/responses/Base_response_405"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      }
    },
    "/backends/oauth2/{backendID}": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Backend"
        ],
        "summary": "Изменение oauth2 бэкенда",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Backend_oauth2_params"
                },
                {
                  "$ref": "#/definitions/Backend_params"
                },
                {
                  "$ref": "#/definitions/Backend_oauth2_ID_param"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/Backend_oauth2_response_200"
          },
          "404": {
            "$ref": "#/responses/Base_response_404"
          },
          "405": {
            "$ref": "#/responses/Base_response_405"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Backend"
        ],
        "summary": "Изменение oauth2 бэкенда",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Backend_patch_oauth2_params"
                },
                {
                  "$ref": "#/definitions/Backend_oauth2_ID_param"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/Backend_oauth2_response_200"
          },
          "404": {
            "$ref": "#/responses/Base_response_404"
          },
          "405": {
            "$ref": "#/responses/Base_response_405"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/backendID"
        }
      ]
    },
    "/backends/{backendID}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Backend"
        ],
        "summary": "Информация о бэкенде",
        "responses": {
          "200": {
            "$ref": "#/responses/Base_response_200"
          },
          "404": {
            "$ref": "#/responses/Base_response_404"
          },
          "405": {
            "$ref": "#/responses/Base_response_405"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      },
      "delete": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Backend"
        ],
        "summary": "Удаление бэкенда",
        "responses": {
          "200": {
            "$ref": "#/responses/Base_response_200"
          },
          "404": {
            "$ref": "#/responses/Base_response_404"
          },
          "405": {
            "$ref": "#/responses/Base_response_405"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/backendID"
        }
      ]
    },
    "/backends/{backendID}/groups": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Backend"
        ],
        "summary": "Коллекция соответствия групп бэкенда",
        "responses": {
          "200": {
            "$ref": "#/responses/Backend_group_response_200"
          },
          "404": {
            "$ref": "#/responses/Base_response_404"
          },
          "405": {
            "$ref": "#/responses/Base_response_405"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Backend"
        ],
        "summary": "Редактироание соответствия групп бэкенда",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "allOf": [
                  {
                    "$ref": "#/definitions/Backend_group_params"
                  }
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/Backend_group_response_200"
          },
          "404": {
            "$ref": "#/responses/Base_response_404"
          },
          "405": {
            "$ref": "#/responses/Base_response_405"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      },
      "delete": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Backend"
        ],
        "summary": "Удаление соответствия групп бэкенда",
        "responses": {
          "200": {
            "$ref": "#/responses/Backend_group_response_200"
          },
          "404": {
            "$ref": "#/responses/Base_response_404"
          },
          "405": {
            "$ref": "#/responses/Base_response_405"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/backendID"
        }
      ]
    },
    "/backends/{backendID}/test": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Backend"
        ],
        "summary": "Тест коннекта к бэкенду",
        "responses": {
          "200": {
            "$ref": "#/responses/Backend_test_response"
          },
          "400": {
            "$ref": "#/responses/Backend_test_response"
          },
          "404": {
            "$ref": "#/responses/Base_response_404"
          },
          "405": {
            "$ref": "#/responses/Base_response_405"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/backendID"
        }
      ]
    },
    "/client": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Auth"
        ],
        "summary": "Аутентификация клиента",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Auth_client_params"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/Auth_response_200"
          },
          "401": {
            "$ref": "#/responses/Base_response_401"
          },
          "405": {
            "$ref": "#/responses/Base_response_405"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      }
    },
    "/clients": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Client"
        ],
        "summary": "Коллекция клиентов",
        "responses": {
          "200": {
            "$ref": "#/responses/Client_response_200"
          },
          "405": {
            "$ref": "#/responses/Base_response_405"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Client"
        ],
        "summary": "Создание клиента",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Client_params"
                },
                {
                  "$ref": "#/definitions/Password_object"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/Client_response_200"
          },
          "400": {
            "$ref": "#/responses/Base_response_400"
          },
          "404": {
            "$ref": "#/responses/Base_response_404"
          },
          "405": {
            "$ref": "#/responses/Base_response_405"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      }
    },
    "/clients/{clientID}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Client"
        ],
        "summary": "Информация о клиенте",
        "responses": {
          "200": {
            "$ref": "#/responses/Client_response_200"
          },
          "404": {
            "$ref": "#/responses/Base_response_404"
          },
          "405": {
            "$ref": "#/responses/Base_response_405"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Client"
        ],
        "summary": "Изменение клиента",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Client_params"
                },
                {
                  "$ref": "#/definitions/Password_object"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/Client_response_200"
          },
          "400": {
            "$ref": "#/responses/Base_response_400"
          },
          "404": {
            "$ref": "#/responses/Base_response_404"
          },
          "405": {
            "$ref": "#/responses/Base_response_405"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      },
      "delete": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Client"
        ],
        "summary": "Удаление клиента",
        "responses": {
          "200": {
            "$ref": "#/responses/Base_response_200"
          },
          "404": {
            "$ref": "#/responses/Base_response_404"
          },
          "405": {
            "$ref": "#/responses/Base_response_405"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Client"
        ],
        "summary": "Изменение клиента",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Patch_client_params"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/Client_response_200"
          },
          "400": {
            "$ref": "#/responses/Base_response_400"
          },
          "404": {
            "$ref": "#/responses/Base_response_404"
          },
          "405": {
            "$ref": "#/responses/Base_response_405"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/clientID"
        }
      ]
    },
    "/events": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Event"
        ],
        "summary": "Коллекция событий",
        "responses": {
          "200": {
            "$ref": "#/responses/Event_response_200"
          },
          "405": {
            "$ref": "#/responses/Base_response_405"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      }
    },
    "/events/{eventID}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Event"
        ],
        "summary": "Информация о событии",
        "responses": {
          "200": {
            "$ref": "#/responses/Event_response_200"
          },
          "404": {
            "$ref": "#/responses/Base_response_404"
          },
          "405": {
            "$ref": "#/responses/Base_response_405"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/eventID"
        }
      ]
    },
    "/flow": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Backend"
        ],
        "summary": "Коллекция последовательности аутентификации",
        "responses": {
          "200": {
            "$ref": "#/responses/Flow_response_200"
          },
          "405": {
            "$ref": "#/responses/Base_response_405"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Backend"
        ],
        "summary": "Редактирование последовательности аутентификации",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "allOf": [
                  {
                    "$ref": "#/definitions/Flow_params"
                  }
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/Flow_response_200"
          },
          "404": {
            "$ref": "#/responses/Base_response_404"
          },
          "405": {
            "$ref": "#/responses/Base_response_405"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      }
    },
    "/identify": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Auth"
        ],
        "summary": "Идентификация пользователя",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Identify_params"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/Auth_response_200"
          },
          "401": {
            "$ref": "#/responses/Base_response_401"
          },
          "405": {
            "$ref": "#/responses/Base_response_405"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      }
    },
    "/jwk": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "JWK"
        ],
        "summary": "Информация о ключе",
        "responses": {
          "200": {
            "$ref": "#/responses/JWK_response_200"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      }
    },
    "/oauth2/{backendID}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Auth"
        ],
        "summary": "Получение URI для аутентификации по OAuth2",
        "parameters": [
          {
            "$ref": "#/parameters/backendID"
          },
          {
            "$ref": "#/parameters/redirectURI"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/OAuthPath_response_200"
          },
          "400": {
            "$ref": "#/responses/Base_response_400"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      }
    },
    "/oauth2/{backendID}/consent": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Auth"
        ],
        "summary": "Обмен authorizationCode на access_token и refresh_token",
        "parameters": [
          {
            "$ref": "#/parameters/backendID"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OAuth2_consent_params"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/Auth_response_200"
          },
          "400": {
            "$ref": "#/responses/Base_response_400"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      }
    },
    "/refresh": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Auth"
        ],
        "summary": "Регенерация токенов",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Auth_refresh_params"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/Auth_response_200"
          },
          "401": {
            "$ref": "#/responses/Base_response_401"
          },
          "405": {
            "$ref": "#/responses/Base_response_405"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      }
    },
    "/roles": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Role"
        ],
        "summary": "Коллекция ролей",
        "responses": {
          "200": {
            "$ref": "#/responses/Role_response_200"
          },
          "400": {
            "$ref": "#/responses/Base_response_400"
          },
          "405": {
            "$ref": "#/responses/Base_response_405"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Role"
        ],
        "summary": "Создание роли",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Role_params"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/Role_response_200"
          },
          "405": {
            "$ref": "#/responses/Base_response_405"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      }
    },
    "/roles/{roleID}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Role"
        ],
        "summary": "Информация о роли",
        "responses": {
          "200": {
            "$ref": "#/responses/Role_response_200"
          },
          "404": {
            "$ref": "#/responses/Base_response_404"
          },
          "405": {
            "$ref": "#/responses/Base_response_405"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Role"
        ],
        "summary": "Изменение роли",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "description": {
                  "description": "Описание роли",
                  "type": "string",
                  "example": "Рядовая медсестра"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/Role_response_200"
          },
          "400": {
            "$ref": "#/responses/Base_response_400"
          },
          "404": {
            "$ref": "#/responses/Base_response_404"
          },
          "405": {
            "$ref": "#/responses/Base_response_405"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      },
      "delete": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Role"
        ],
        "summary": "Удаление роли",
        "responses": {
          "200": {
            "$ref": "#/responses/Role_response_200"
          },
          "404": {
            "$ref": "#/responses/Base_response_404"
          },
          "405": {
            "$ref": "#/responses/Base_response_405"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/roleID"
        }
      ]
    },
    "/roles/{roleID}/users": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Role"
        ],
        "summary": "Коллекция пользователей роли",
        "responses": {
          "200": {
            "$ref": "#/responses/User_Role_response_200"
          },
          "404": {
            "$ref": "#/responses/Base_response_404"
          },
          "405": {
            "$ref": "#/responses/Base_response_405"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/roleID"
        }
      ]
    },
    "/roles/{roleID}/users/{userID}": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Role"
        ],
        "summary": "Добавление пользователя в роль",
        "responses": {
          "200": {
            "$ref": "#/responses/User_Role_response_200"
          },
          "400": {
            "$ref": "#/responses/Base_response_400"
          },
          "404": {
            "$ref": "#/responses/Base_response_404"
          },
          "405": {
            "$ref": "#/responses/Base_response_405"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      },
      "delete": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Role"
        ],
        "summary": "Удаление пользователя из роли",
        "responses": {
          "200": {
            "$ref": "#/responses/Base_response_200"
          },
          "400": {
            "$ref": "#/responses/Base_response_400"
          },
          "404": {
            "$ref": "#/responses/Base_response_404"
          },
          "405": {
            "$ref": "#/responses/Base_response_405"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/roleID"
        },
        {
          "$ref": "#/parameters/userID"
        }
      ]
    },
    "/user": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Auth"
        ],
        "summary": "Аутентификация пользователя по логин-паролю",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Auth_user_params"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/Auth_response_200"
          },
          "400": {
            "$ref": "#/responses/Base_response_400"
          },
          "401": {
            "$ref": "#/responses/Base_response_401"
          },
          "405": {
            "$ref": "#/responses/Base_response_405"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      }
    },
    "/whoami": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Token"
        ],
        "summary": "Информация о токене",
        "responses": {
          "200": {
            "$ref": "#/responses/Token_response_200"
          },
          "401": {
            "$ref": "#/responses/Base_response_401"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      }
    }
  },
  "definitions": {
    "Admin_params": {
      "title": "Admin_params",
      "required": [
        "password"
      ],
      "properties": {
        "password": {
          "description": "Пароль пользователя",
          "type": "string",
          "minLength": 1,
          "example": "xxxxxxxx"
        }
      }
    },
    "Auth_client_params": {
      "title": "Auth_client_params",
      "required": [
        "clientID",
        "password"
      ],
      "properties": {
        "clientID": {
          "description": "Идентификатор клиента",
          "type": "string",
          "example": "870d16eb-891c-4e96-afbf-e830ebf3be34"
        },
        "password": {
          "description": "Пароль клиента",
          "type": "string",
          "example": "xxxxxxxx"
        }
      }
    },
    "Auth_refresh_params": {
      "title": "Auth_refresh_params",
      "required": [
        "refreshToken"
      ],
      "properties": {
        "refreshToken": {
          "description": "Токен обновления accessToken",
          "type": "string",
          "example": "eyJhbGciOiJ...EZCIv5YkunsQBS8"
        }
      }
    },
    "Auth_user_params": {
      "title": "Auth_user_params",
      "required": [
        "login",
        "password"
      ],
      "properties": {
        "login": {
          "description": "Логин пользователя",
          "type": "string",
          "example": "user"
        },
        "password": {
          "description": "Пароль пользователя",
          "type": "string",
          "example": "xxxxxxxx"
        }
      }
    },
    "BackendID_object": {
      "title": "BackendID_object",
      "properties": {
        "ID": {
          "description": "Идентификатор бэкенда",
          "type": "string",
          "example": "6931ba11-2a08-4bf5-b9b0-aa4ed3046331"
        }
      }
    },
    "Backend_attribute_options": {
      "type": "object",
      "title": "Backend_attribute_options",
      "required": [
        "map",
        "sync"
      ],
      "properties": {
        "map": {
          "description": "Атрибут на бэкенде",
          "type": "string",
          "example": "attributename"
        },
        "sync": {
          "description": "Политика синхронизации",
          "type": "string",
          "enum": [
            "FIRST_LOGIN",
            "ALWAYS"
          ]
        }
      }
    },
    "Backend_attribute_params": {
      "type": "object",
      "title": "Backend_attribute_params",
      "required": [
        "GUID",
        "username"
      ],
      "properties": {
        "GUID": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Backend_attribute_options"
            }
          ]
        },
        "email": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Backend_attribute_options"
            }
          ]
        },
        "firstName": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Backend_attribute_options"
            }
          ]
        },
        "lastName": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Backend_attribute_options"
            }
          ]
        },
        "mobile": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Backend_attribute_options"
            }
          ]
        },
        "patronymic": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Backend_attribute_options"
            }
          ]
        },
        "username": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Backend_attribute_options"
            }
          ]
        }
      }
    },
    "Backend_group_params": {
      "type": "object",
      "title": "Backend_group_params",
      "required": [
        "group",
        "roleID"
      ],
      "properties": {
        "group": {
          "description": "Название группы",
          "type": "string",
          "example": "grG_DC-001_sec_Git"
        },
        "roleID": {
          "description": "Идентификатор роли",
          "type": "string",
          "example": "NURSE"
        }
      }
    },
    "Backend_ldap_params": {
      "title": "Backend_ldap_params",
      "required": [
        "host",
        "port",
        "bindDN",
        "baseDN",
        "filter",
        "sync"
      ],
      "properties": {
        "baseDN": {
          "description": "База поиска",
          "type": "string",
          "example": "o=Diacare-Soft,dc=lan"
        },
        "bindDN": {
          "description": "DN пользователя",
          "type": "string",
          "example": "cn=Administraytor,ou=Users,o=Diacare-Soft,dc=lan"
        },
        "cipher": {
          "description": "Использование шифрования",
          "type": "string",
          "default": "NONE",
          "enum": [
            "NONE",
            "TLS",
            "STARTTLS"
          ],
          "example": "TLS"
        },
        "filter": {
          "description": "Фильтр поиска",
          "type": "string",
          "example": "(|(userPrincipalName=%u@diacare.lan)(mobile=%u))"
        },
        "host": {
          "description": "Ldap хост",
          "type": "string",
          "example": "127.0.0.1"
        },
        "port": {
          "description": "Ldap порт",
          "type": "integer",
          "example": 389
        },
        "sync": {
          "description": "Сущность синхронизации",
          "type": "string",
          "enum": [
            "PATIENT",
            "EMPLOYEE"
          ],
          "example": "PATIENT"
        }
      }
    },
    "Backend_oauth2_ID_param": {
      "title": "Backend_oauth2_ID_param",
      "properties": {
        "ID": {
          "description": "Кастомный ID бэкенда (Для OAuth)",
          "type": "string",
          "example": "mainGoogle"
        }
      }
    },
    "Backend_oauth2_params": {
      "title": "Backend_oauth2_params",
      "required": [
        "provider",
        "clientID",
        "clientSecret",
        "sync"
      ],
      "properties": {
        "clientID": {
          "description": "Идентификатор приложения",
          "type": "string",
          "example": "testID"
        },
        "clientSecret": {
          "description": "Секретный ключ приложения",
          "type": "string",
          "example": "testSecret"
        },
        "provider": {
          "description": "Название сервиса, на котором авторизуемся",
          "type": "string",
          "enum": [
            "GITHUB",
            "GOOGLE",
            "EMPLOYEE",
            "YANDEX",
            "ESIA"
          ],
          "example": "GITHUB"
        },
        "sync": {
          "description": "Сущность синхронизации",
          "type": "string",
          "enum": [
            "PATIENT",
            "EMPLOYEE"
          ],
          "example": "PATIENT"
        }
      }
    },
    "Backend_params": {
      "title": "Backend_params",
      "required": [
        "description",
        "attributes"
      ],
      "properties": {
        "attributes": {
          "allOf": [
            {
              "$ref": "#/definitions/Backend_attribute_params"
            }
          ]
        },
        "description": {
          "description": "Описание бэкенда",
          "type": "string",
          "example": "MS AD"
        }
      }
    },
    "Backend_patch_ldap_params": {
      "title": "Backend_patch_ldap_params",
      "properties": {
        "baseDN": {
          "description": "База поиска",
          "type": "string",
          "x-nullable": true,
          "example": "o=Diacare-Soft,dc=lan"
        },
        "bindDN": {
          "description": "DN пользователя",
          "type": "string",
          "x-nullable": true,
          "example": "cn=Administraytor,ou=Users,o=Diacare-Soft,dc=lan"
        },
        "cipher": {
          "description": "Использование шифрования",
          "type": "string",
          "default": "NONE",
          "enum": [
            "NONE",
            "TLS",
            "STARTTLS"
          ],
          "example": "TLS"
        },
        "description": {
          "description": "Описание бэкенда",
          "type": "string",
          "x-nullable": true,
          "example": "MS AD"
        },
        "filter": {
          "description": "Фильтр поиска",
          "type": "string",
          "x-nullable": true,
          "example": "(|(userPrincipalName=%u@diacare.lan)(mobile=%u))"
        },
        "host": {
          "description": "Ldap хост",
          "type": "string",
          "x-nullable": true,
          "example": "127.0.0.1"
        },
        "password": {
          "description": "Пароль пользователя",
          "type": "string",
          "x-nullable": true,
          "example": "d00962456208e72f"
        },
        "port": {
          "description": "Ldap порт",
          "type": "integer",
          "x-nullable": true,
          "example": 389
        },
        "sync": {
          "description": "Сущность синхронизации",
          "type": "string",
          "enum": [
            "PATIENT",
            "EMPLOYEE"
          ],
          "x-nullable": true,
          "example": "PATIENT"
        }
      }
    },
    "Backend_patch_oauth2_params": {
      "title": "Backend_patch_oauth2_params",
      "properties": {
        "clientID": {
          "description": "Идентификатор приложения",
          "type": "string",
          "x-nullable": true,
          "example": "testID"
        },
        "clientSecret": {
          "description": "Секретный ключ приложения",
          "type": "string",
          "x-nullable": true,
          "example": "testSecret"
        },
        "description": {
          "description": "Описание бэкенда",
          "type": "string",
          "x-nullable": true,
          "example": "MS AD"
        },
        "provider": {
          "description": "Название сервиса, на котором авторизуемся",
          "type": "string",
          "enum": [
            "GITHUB",
            "GOOGLE",
            "EMPLOYEE",
            "YANDEX",
            "ESIA"
          ],
          "x-nullable": true,
          "example": "GITHUB"
        },
        "sync": {
          "description": "Сущность синхронизации",
          "type": "string",
          "enum": [
            "PATIENT",
            "EMPLOYEE"
          ],
          "x-nullable": true,
          "example": "PATIENT"
        }
      }
    },
    "Backend_test_params": {
      "title": "Backend_test_params",
      "properties": {
        "error": {
          "description": "Детализация ошибки",
          "type": "string",
          "x-nullable": true,
          "example": "Protocol failure"
        },
        "status": {
          "description": "Статус коннекта к бэкенду",
          "type": "string",
          "enum": [
            "SUCCESS",
            "FAILED"
          ],
          "example": "FAILED"
        }
      }
    },
    "Base_data": {
      "description": "Возвращает статус ответа",
      "type": "object",
      "required": [
        "version"
      ],
      "properties": {
        "version": {
          "description": "Версия ответа сервиса",
          "type": "string",
          "example": "2.0.0"
        }
      }
    },
    "Client_params": {
      "title": "Client_params",
      "required": [
        "description"
      ],
      "properties": {
        "description": {
          "description": "Описание клиента",
          "type": "string",
          "example": "MX-071"
        }
      }
    },
    "Error_400_data": {
      "allOf": [
        {
          "$ref": "#/definitions/Error_data"
        },
        {
          "type": "object",
          "title": "Error_Error_400_data",
          "required": [
            "message",
            "errors"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {}
            },
            "message": {
              "type": "string",
              "example": "Validation error"
            }
          }
        }
      ]
    },
    "Error_401_data": {
      "allOf": [
        {
          "$ref": "#/definitions/Error_data"
        },
        {
          "type": "object",
          "title": "Error_401_data",
          "required": [
            "message",
            "errors"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {}
            },
            "message": {
              "description": "сообщение ответа",
              "type": "string",
              "example": "Invalid token"
            }
          }
        }
      ]
    },
    "Error_404_data": {
      "allOf": [
        {
          "$ref": "#/definitions/Error_data"
        },
        {
          "type": "object",
          "title": "Error_Error_404_data",
          "required": [
            "message",
            "errors"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {}
            },
            "message": {
              "description": "сообщение ответа",
              "type": "string",
              "example": "Entity not found"
            }
          }
        }
      ]
    },
    "Error_405_data": {
      "allOf": [
        {
          "$ref": "#/definitions/Error_data"
        },
        {
          "type": "object",
          "title": "Error_Error_405_data",
          "properties": {
            "errors": {},
            "message": {
              "description": "сообщение ответа",
              "type": "string",
              "example": "Method ${METHOD} not allowed"
            }
          }
        }
      ]
    },
    "Error_500_data": {
      "allOf": [
        {
          "$ref": "#/definitions/Error_data"
        },
        {
          "type": "object",
          "title": "Error_Error_500_data",
          "required": [
            "message",
            "errors"
          ],
          "properties": {
            "errors": {},
            "message": {
              "description": "сообщение ответа",
              "type": "string",
              "example": "Internal server error"
            }
          }
        }
      ]
    },
    "Error_data": {
      "description": "Все плохо",
      "allOf": [
        {
          "$ref": "#/definitions/Base_data"
        },
        {
          "type": "object",
          "title": "Error_data",
          "required": [
            "data"
          ],
          "properties": {
            "data": {}
          }
        }
      ]
    },
    "Event_params": {
      "title": "Event_params",
      "required": [
        "ID",
        "created",
        "type",
        "status"
      ],
      "properties": {
        "ID": {
          "description": "Идентификатор события",
          "type": "string",
          "example": "3fb6a05c-a9e4-412d-b8a5-4a433db20d2f"
        },
        "IP": {
          "description": "IP адрес источника",
          "type": "string",
          "example": "192.168.0.1"
        },
        "created": {
          "description": "Дата-время события",
          "type": "string",
          "example": "2005-08-09T18:31:42+03:30"
        },
        "entityID": {
          "description": "Идентификатор субъекта",
          "type": "string",
          "x-nullable": true,
          "example": "ADMIN"
        },
        "entityLogin": {
          "description": "Логин субъекта",
          "type": "string",
          "x-nullable": true,
          "example": "admin"
        },
        "status": {
          "description": "Статус события",
          "type": "string",
          "enum": [
            "SUCCESS",
            "FAILED"
          ],
          "example": "SUCCESS"
        },
        "type": {
          "description": "Тип события",
          "type": "string",
          "enum": [
            "USER_LOGIN",
            "CLIENT_LOGIN",
            "DRIVER_LOGIN",
            "USER_REFRESH",
            "CLIENT_REFRESH"
          ],
          "example": "USER_LOGIN"
        }
      }
    },
    "Flow_params": {
      "type": "object",
      "title": "Flow_params",
      "required": [
        "backendID",
        "order"
      ],
      "properties": {
        "backendID": {
          "description": "Идентификатор бэкенда",
          "type": "string",
          "example": "xxxxxxxx"
        },
        "order": {
          "description": "Порядковый номер",
          "type": "integer",
          "example": 1
        }
      }
    },
    "Identify_params": {
      "title": "Identify_params",
      "required": [
        "cardNumber"
      ],
      "properties": {
        "cardNumber": {
          "description": "Номер смарт-карты",
          "type": "string",
          "example": "111222333444555"
        },
        "user": {
          "description": "Тип пользователя",
          "type": "string",
          "enum": [
            "PATIENT",
            "EMPLOYEE"
          ],
          "example": "EMPLOYEE"
        }
      }
    },
    "OAuth2_consent_params": {
      "title": "OAuth2_consent_params",
      "properties": {
        "authorizationCode": {
          "description": "Код авторизации для дальнейшго обмена на access_token и refresh_token",
          "type": "string",
          "example": "4%2FWAH3WKmebgxdEPdPBOqFCHW0_5VS6nU-bjAdW304eYsNTkVUCHT6jv8Rh00-m7I4N-arCaJK3D3ZVnzmxPBiCno"
        },
        "redirectURI": {
          "description": "URI, на который был перенаправлен клиент после аутентификации",
          "type": "string"
        }
      }
    },
    "Password_object": {
      "title": "Password_object",
      "required": [
        "password"
      ],
      "properties": {
        "password": {
          "description": "Пароль пользователя",
          "type": "string",
          "minLength": 1,
          "example": "d00962456208e72f"
        }
      }
    },
    "Patch_client_params": {
      "title": "Patch_client_params",
      "properties": {
        "description": {
          "description": "Описание клиента",
          "type": "string",
          "x-nullable": true,
          "example": "MX-071"
        },
        "password": {
          "description": "Пароль пользователя",
          "type": "string",
          "minLength": 1,
          "x-nullable": true,
          "example": "d00962456208e72f"
        }
      }
    },
    "Role_params": {
      "title": "Role_params",
      "required": [
        "ID",
        "description"
      ],
      "properties": {
        "ID": {
          "description": "Идентификатор роли",
          "type": "string",
          "example": "NURSE"
        },
        "description": {
          "description": "Описание роли",
          "type": "string",
          "example": "Рядовая медсестра"
        }
      }
    },
    "Success_data": {
      "description": "Все хорошо",
      "allOf": [
        {
          "$ref": "#/definitions/Base_data"
        },
        {
          "type": "object",
          "title": "Success_data",
          "required": [
            "message",
            "errors"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {}
            },
            "message": {
              "description": "сообщение ответа",
              "type": "string",
              "example": "SUCCESS"
            }
          }
        }
      ]
    }
  },
  "parameters": {
    "backendID": {
      "type": "string",
      "description": "Идентификатор бэкенда",
      "name": "backendID",
      "in": "path",
      "required": true
    },
    "clientID": {
      "type": "string",
      "description": "Идентификатор клиента",
      "name": "clientID",
      "in": "path",
      "required": true
    },
    "eventID": {
      "type": "string",
      "description": "Идентификатор события",
      "name": "eventID",
      "in": "path",
      "required": true
    },
    "redirectURI": {
      "type": "string",
      "description": "URI, на который будет перенаправлен клиент после аутентификации",
      "name": "redirectURI",
      "in": "query",
      "required": true
    },
    "roleID": {
      "type": "string",
      "description": "Идентификатор роли",
      "name": "roleID",
      "in": "path",
      "required": true
    },
    "userID": {
      "type": "string",
      "description": "Идентификатор пользователя",
      "name": "userID",
      "in": "path",
      "required": true
    }
  },
  "responses": {
    "Auth_response_200": {
      "description": "Результат аутентификации",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Success_data"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "accessToken",
                        "refreshToken"
                      ],
                      "properties": {
                        "accessToken": {
                          "description": "Токен доступа",
                          "type": "string",
                          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJJRCI6ImFkbWluIi...bfTSMwuonKU8Wrs00b6hLYfHLEeM"
                        },
                        "refreshToken": {
                          "description": "Токен обновления",
                          "type": "string",
                          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJJRCI6ImluIiwiZXhwIjox...49_ysqm_ZFDj0Y5RfnC-AY"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        ]
      }
    },
    "Backend_attribute_response_200": {
      "description": "Объект атрибутов бэкенда",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Success_data"
          },
          {
            "type": "object",
            "required": [
              "data"
            ],
            "properties": {
              "data": {
                "allOf": [
                  {
                    "$ref": "#/definitions/Backend_attribute_params"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "Backend_group_response_200": {
      "description": "Объект групп бэкенда",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Success_data"
          },
          {
            "type": "object",
            "required": [
              "data"
            ],
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/definitions/Backend_group_params"
                    }
                  ]
                }
              }
            }
          }
        ]
      }
    },
    "Backend_ldap_response_200": {
      "description": "Объект LDAP бэкенда",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Success_data"
          },
          {
            "type": "object",
            "required": [
              "data"
            ],
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/definitions/BackendID_object"
                    },
                    {
                      "$ref": "#/definitions/Backend_ldap_params"
                    },
                    {
                      "$ref": "#/definitions/Backend_params"
                    }
                  ],
                  "x-go-name": "ldap-data-item"
                }
              }
            }
          }
        ]
      }
    },
    "Backend_oauth2_response_200": {
      "description": "Объект oauth2 бэкенда",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Success_data"
          },
          {
            "type": "object",
            "required": [
              "data"
            ],
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/definitions/BackendID_object"
                    },
                    {
                      "$ref": "#/definitions/Backend_oauth2_params"
                    },
                    {
                      "$ref": "#/definitions/Backend_params"
                    }
                  ],
                  "x-go-name": "oauth2-data-item"
                }
              }
            }
          }
        ]
      }
    },
    "Backend_test_response": {
      "description": "Объект теста бэкенда",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Success_data"
          },
          {
            "type": "object",
            "required": [
              "data"
            ],
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/definitions/Backend_test_params"
                    }
                  ],
                  "x-go-name": "test-data-item"
                }
              }
            }
          }
        ]
      }
    },
    "Base_response_200": {
      "description": "SUCCESS",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Success_data"
          },
          {
            "type": "object",
            "required": [
              "data"
            ],
            "properties": {
              "data": {
                "type": "array",
                "items": {}
              }
            }
          }
        ]
      }
    },
    "Base_response_400": {
      "description": "Коллекция авторизации",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Error_400_data"
          },
          {
            "type": "object",
            "required": [
              "message",
              "errors"
            ],
            "properties": {
              "errors": {
                "type": "object",
                "properties": {
                  "core": {
                    "type": "string"
                  },
                  "json": {
                    "type": "string"
                  },
                  "validation": {
                    "type": "object"
                  }
                }
              },
              "message": {
                "type": "string",
                "example": "Authentication failure"
              }
            }
          }
        ]
      }
    },
    "Base_response_401": {
      "description": "Access denied",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Error_401_data"
          }
        ]
      }
    },
    "Base_response_404": {
      "description": "Not found",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Error_404_data"
          }
        ]
      }
    },
    "Base_response_405": {
      "description": "Invalid Method",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Error_405_data"
          }
        ]
      }
    },
    "Base_response_500": {
      "description": "Internal server error",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Error_500_data"
          }
        ]
      }
    },
    "Client_response_200": {
      "description": "Объект клиента",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Success_data"
          },
          {
            "type": "object",
            "required": [
              "data"
            ],
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "ID": {
                          "description": "Идентификатор клиента",
                          "type": "string",
                          "example": "d00962f4-d052-4fb4-99d6-91b56208e72f"
                        }
                      }
                    },
                    {
                      "$ref": "#/definitions/Client_params"
                    }
                  ]
                }
              }
            }
          }
        ]
      }
    },
    "Event_response_200": {
      "description": "Коллекция событий",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Success_data"
          },
          {
            "type": "object",
            "required": [
              "data"
            ],
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/definitions/Event_params"
                    }
                  ]
                }
              }
            }
          }
        ]
      }
    },
    "Flow_response_200": {
      "description": "Объект последовательности авторизации",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Success_data"
          },
          {
            "type": "object",
            "required": [
              "data"
            ],
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/definitions/Flow_params"
                    }
                  ],
                  "x-go-name": "flow-data-item"
                }
              }
            }
          }
        ]
      }
    },
    "JWK_response_200": {
      "description": "Информация о ключах подписи токенов",
      "schema": {
        "allOf": [
          {
            "type": "object",
            "required": [
              "keys"
            ],
            "properties": {
              "keys": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "kid",
                        "alg",
                        "k",
                        "kty"
                      ],
                      "properties": {
                        "alg": {
                          "description": "Криптографический алгоритм подписи",
                          "type": "string",
                          "enum": [
                            "HS256"
                          ],
                          "example": "HS256"
                        },
                        "k": {
                          "description": "Криптографический ключ",
                          "type": "string",
                          "example": "AyM1SysPpbyDfgZld3umj1qzKjAzZr1Z9CAow"
                        },
                        "kid": {
                          "description": "Идентификатор ключа",
                          "type": "string",
                          "example": "AyM1SysPpbyDfgZld3umj1qzKjAzZr1Z9CAow"
                        },
                        "kty": {
                          "description": "...",
                          "type": "string",
                          "example": "oct"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        ]
      }
    },
    "OAuthPath_response_200": {
      "description": "Результат запроса пути для аутентификации",
      "schema": {
        "allOf": [
          {
            "type": "object",
            "required": [
              "OAuth2Path"
            ],
            "properties": {
              "OAuth2Path": {
                "description": "Путь для аутентификации клиента",
                "type": "string",
                "example": "https://accounts.google.com/o/oauth2/auth?access_type=offline\u0026client_id=123456789012-9sj2937kja2pdj5he21bs33lb409udhd.apps.googleusercontent.com\u0026redirect_uri=http%3A%2F%nefrosovet.ru%3A8484%2Foauth2%2Fgoogle%2Fcallback\u0026response_type=code\u0026scope=email+profile+openid"
              }
            }
          }
        ]
      }
    },
    "Role_response_200": {
      "description": "Объект роли",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Success_data"
          },
          {
            "type": "object",
            "required": [
              "data"
            ],
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "default"
                  ],
                  "allOf": [
                    {
                      "$ref": "#/definitions/Role_params"
                    }
                  ],
                  "properties": {
                    "default": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        ]
      }
    },
    "Token_response_200": {
      "description": "Инфо о токене",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Success_data"
          },
          {
            "type": "object",
            "required": [
              "data"
            ],
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "ID": {
                          "description": "Идентификатор субъекта",
                          "type": "string",
                          "example": "d00962f4-d052-4fb4-99d6-91b56208e72f"
                        },
                        "roles": {
                          "description": "Роли пользователя",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "NURSE"
                          ]
                        },
                        "type": {
                          "description": "Тип субъекта",
                          "type": "string",
                          "enum": [
                            "CLIENT",
                            "USER"
                          ],
                          "example": "USER"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        ]
      }
    },
    "User_Role_response_200": {
      "description": "Коллекция пользователей",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Success_data"
          },
          {
            "type": "object",
            "required": [
              "data"
            ],
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "description": "Массив идентификаторов пользователей",
                  "type": "string",
                  "example": [
                    "d00962f4-d052-4fb4-99d6-91b56208e72f"
                  ]
                }
              }
            }
          }
        ]
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "#### RESTFUL Auth API\n",
    "title": "Auth API",
    "version": "2.0.0"
  },
  "host": "auth.maximus.lan",
  "basePath": "/",
  "paths": {
    "/admin": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Admin"
        ],
        "summary": "Редактирование админской учетной записи",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Admin_params"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "SUCCESS",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {}
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Коллекция авторизации",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_400_data"
                },
                {
                  "type": "object",
                  "required": [
                    "message",
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {
                        "core": {
                          "type": "string"
                        },
                        "json": {
                          "type": "string"
                        },
                        "validation": {
                          "type": "object"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Authentication failure"
                    }
                  }
                }
              ]
            }
          },
          "405": {
            "description": "Invalid Method",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_405_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      }
    },
    "/backends": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Backend"
        ],
        "summary": "Коллекция бэкендов",
        "responses": {
          "200": {
            "description": "SUCCESS",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {}
                    }
                  }
                }
              ]
            }
          },
          "405": {
            "description": "Invalid Method",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_405_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      }
    },
    "/backends/ldap": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Backend"
        ],
        "summary": "Создание LDAP бэкенда",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Backend_ldap_params"
                },
                {
                  "$ref": "#/definitions/Password_object"
                },
                {
                  "$ref": "#/definitions/Backend_params"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Объект LDAP бэкенда",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "$ref": "#/definitions/BackendID_object"
                          },
                          {
                            "$ref": "#/definitions/Backend_ldap_params"
                          },
                          {
                            "$ref": "#/definitions/Backend_params"
                          }
                        ],
                        "x-go-name": "ldap-data-item"
                      }
                    }
                  }
                }
              ]
            }
          },
          "405": {
            "description": "Invalid Method",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_405_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      }
    },
    "/backends/ldap/{backendID}": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Backend"
        ],
        "summary": "Изменение LDAP бэкенда",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Backend_ldap_params"
                },
                {
                  "$ref": "#/definitions/Password_object"
                },
                {
                  "$ref": "#/definitions/Backend_params"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Объект LDAP бэкенда",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "$ref": "#/definitions/BackendID_object"
                          },
                          {
                            "$ref": "#/definitions/Backend_ldap_params"
                          },
                          {
                            "$ref": "#/definitions/Backend_params"
                          }
                        ],
                        "x-go-name": "ldap-data-item"
                      }
                    }
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_404_data"
                }
              ]
            }
          },
          "405": {
            "description": "Invalid Method",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_405_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Backend"
        ],
        "summary": "Изменение LDAP бэкенда",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Backend_patch_ldap_params"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Объект LDAP бэкенда",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "$ref": "#/definitions/BackendID_object"
                          },
                          {
                            "$ref": "#/definitions/Backend_ldap_params"
                          },
                          {
                            "$ref": "#/definitions/Backend_params"
                          }
                        ],
                        "x-go-name": "ldap-data-item"
                      }
                    }
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_404_data"
                }
              ]
            }
          },
          "405": {
            "description": "Invalid Method",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_405_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "Идентификатор бэкенда",
          "name": "backendID",
          "in": "path",
          "required": true
        }
      ]
    },
    "/backends/oauth2": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Backend"
        ],
        "summary": "Создание oauth2 бэкенда",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Backend_oauth2_params"
                },
                {
                  "$ref": "#/definitions/Backend_params"
                },
                {
                  "$ref": "#/definitions/Backend_oauth2_ID_param"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Объект oauth2 бэкенда",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "$ref": "#/definitions/BackendID_object"
                          },
                          {
                            "$ref": "#/definitions/Backend_oauth2_params"
                          },
                          {
                            "$ref": "#/definitions/Backend_params"
                          }
                        ],
                        "x-go-name": "oauth2-data-item"
                      }
                    }
                  }
                }
              ]
            }
          },
          "405": {
            "description": "Invalid Method",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_405_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      }
    },
    "/backends/oauth2/{backendID}": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Backend"
        ],
        "summary": "Изменение oauth2 бэкенда",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Backend_oauth2_params"
                },
                {
                  "$ref": "#/definitions/Backend_params"
                },
                {
                  "$ref": "#/definitions/Backend_oauth2_ID_param"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Объект oauth2 бэкенда",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "$ref": "#/definitions/BackendID_object"
                          },
                          {
                            "$ref": "#/definitions/Backend_oauth2_params"
                          },
                          {
                            "$ref": "#/definitions/Backend_params"
                          }
                        ],
                        "x-go-name": "oauth2-data-item"
                      }
                    }
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_404_data"
                }
              ]
            }
          },
          "405": {
            "description": "Invalid Method",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_405_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Backend"
        ],
        "summary": "Изменение oauth2 бэкенда",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Backend_patch_oauth2_params"
                },
                {
                  "$ref": "#/definitions/Backend_oauth2_ID_param"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Объект oauth2 бэкенда",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "$ref": "#/definitions/BackendID_object"
                          },
                          {
                            "$ref": "#/definitions/Backend_oauth2_params"
                          },
                          {
                            "$ref": "#/definitions/Backend_params"
                          }
                        ],
                        "x-go-name": "oauth2-data-item"
                      }
                    }
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_404_data"
                }
              ]
            }
          },
          "405": {
            "description": "Invalid Method",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_405_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "Идентификатор бэкенда",
          "name": "backendID",
          "in": "path",
          "required": true
        }
      ]
    },
    "/backends/{backendID}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Backend"
        ],
        "summary": "Информация о бэкенде",
        "responses": {
          "200": {
            "description": "SUCCESS",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {}
                    }
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_404_data"
                }
              ]
            }
          },
          "405": {
            "description": "Invalid Method",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_405_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      },
      "delete": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Backend"
        ],
        "summary": "Удаление бэкенда",
        "responses": {
          "200": {
            "description": "SUCCESS",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {}
                    }
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_404_data"
                }
              ]
            }
          },
          "405": {
            "description": "Invalid Method",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_405_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "Идентификатор бэкенда",
          "name": "backendID",
          "in": "path",
          "required": true
        }
      ]
    },
    "/backends/{backendID}/groups": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Backend"
        ],
        "summary": "Коллекция соответствия групп бэкенда",
        "responses": {
          "200": {
            "description": "Объект групп бэкенда",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "$ref": "#/definitions/Backend_group_params"
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_404_data"
                }
              ]
            }
          },
          "405": {
            "description": "Invalid Method",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_405_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Backend"
        ],
        "summary": "Редактироание соответствия групп бэкенда",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "allOf": [
                  {
                    "$ref": "#/definitions/Backend_group_params"
                  }
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Объект групп бэкенда",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "$ref": "#/definitions/Backend_group_params"
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_404_data"
                }
              ]
            }
          },
          "405": {
            "description": "Invalid Method",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_405_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      },
      "delete": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Backend"
        ],
        "summary": "Удаление соответствия групп бэкенда",
        "responses": {
          "200": {
            "description": "Объект групп бэкенда",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "$ref": "#/definitions/Backend_group_params"
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_404_data"
                }
              ]
            }
          },
          "405": {
            "description": "Invalid Method",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_405_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "Идентификатор бэкенда",
          "name": "backendID",
          "in": "path",
          "required": true
        }
      ]
    },
    "/backends/{backendID}/test": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Backend"
        ],
        "summary": "Тест коннекта к бэкенду",
        "responses": {
          "200": {
            "description": "Объект теста бэкенда",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "$ref": "#/definitions/Backend_test_params"
                          }
                        ],
                        "x-go-name": "test-data-item"
                      }
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Объект теста бэкенда",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "$ref": "#/definitions/Backend_test_params"
                          }
                        ],
                        "x-go-name": "test-data-item"
                      }
                    }
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_404_data"
                }
              ]
            }
          },
          "405": {
            "description": "Invalid Method",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_405_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "Идентификатор бэкенда",
          "name": "backendID",
          "in": "path",
          "required": true
        }
      ]
    },
    "/client": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Auth"
        ],
        "summary": "Аутентификация клиента",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Auth_client_params"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Результат аутентификации",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "type": "object",
                            "required": [
                              "accessToken",
                              "refreshToken"
                            ],
                            "properties": {
                              "accessToken": {
                                "description": "Токен доступа",
                                "type": "string",
                                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJJRCI6ImFkbWluIi...bfTSMwuonKU8Wrs00b6hLYfHLEeM"
                              },
                              "refreshToken": {
                                "description": "Токен обновления",
                                "type": "string",
                                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJJRCI6ImluIiwiZXhwIjox...49_ysqm_ZFDj0Y5RfnC-AY"
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            }
          },
          "401": {
            "description": "Access denied",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_401_data"
                }
              ]
            }
          },
          "405": {
            "description": "Invalid Method",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_405_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      }
    },
    "/clients": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Client"
        ],
        "summary": "Коллекция клиентов",
        "responses": {
          "200": {
            "description": "Объект клиента",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "ID": {
                                "description": "Идентификатор клиента",
                                "type": "string",
                                "example": "d00962f4-d052-4fb4-99d6-91b56208e72f"
                              }
                            }
                          },
                          {
                            "$ref": "#/definitions/Client_params"
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            }
          },
          "405": {
            "description": "Invalid Method",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_405_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Client"
        ],
        "summary": "Создание клиента",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Client_params"
                },
                {
                  "$ref": "#/definitions/Password_object"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Объект клиента",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "ID": {
                                "description": "Идентификатор клиента",
                                "type": "string",
                                "example": "d00962f4-d052-4fb4-99d6-91b56208e72f"
                              }
                            }
                          },
                          {
                            "$ref": "#/definitions/Client_params"
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Коллекция авторизации",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_400_data"
                },
                {
                  "type": "object",
                  "required": [
                    "message",
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {
                        "core": {
                          "type": "string"
                        },
                        "json": {
                          "type": "string"
                        },
                        "validation": {
                          "type": "object"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Authentication failure"
                    }
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_404_data"
                }
              ]
            }
          },
          "405": {
            "description": "Invalid Method",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_405_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      }
    },
    "/clients/{clientID}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Client"
        ],
        "summary": "Информация о клиенте",
        "responses": {
          "200": {
            "description": "Объект клиента",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "ID": {
                                "description": "Идентификатор клиента",
                                "type": "string",
                                "example": "d00962f4-d052-4fb4-99d6-91b56208e72f"
                              }
                            }
                          },
                          {
                            "$ref": "#/definitions/Client_params"
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_404_data"
                }
              ]
            }
          },
          "405": {
            "description": "Invalid Method",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_405_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Client"
        ],
        "summary": "Изменение клиента",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Client_params"
                },
                {
                  "$ref": "#/definitions/Password_object"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Объект клиента",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "ID": {
                                "description": "Идентификатор клиента",
                                "type": "string",
                                "example": "d00962f4-d052-4fb4-99d6-91b56208e72f"
                              }
                            }
                          },
                          {
                            "$ref": "#/definitions/Client_params"
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Коллекция авторизации",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_400_data"
                },
                {
                  "type": "object",
                  "required": [
                    "message",
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {
                        "core": {
                          "type": "string"
                        },
                        "json": {
                          "type": "string"
                        },
                        "validation": {
                          "type": "object"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Authentication failure"
                    }
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_404_data"
                }
              ]
            }
          },
          "405": {
            "description": "Invalid Method",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_405_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      },
      "delete": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Client"
        ],
        "summary": "Удаление клиента",
        "responses": {
          "200": {
            "description": "SUCCESS",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {}
                    }
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_404_data"
                }
              ]
            }
          },
          "405": {
            "description": "Invalid Method",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_405_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Client"
        ],
        "summary": "Изменение клиента",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Patch_client_params"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Объект клиента",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "ID": {
                                "description": "Идентификатор клиента",
                                "type": "string",
                                "example": "d00962f4-d052-4fb4-99d6-91b56208e72f"
                              }
                            }
                          },
                          {
                            "$ref": "#/definitions/Client_params"
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Коллекция авторизации",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_400_data"
                },
                {
                  "type": "object",
                  "required": [
                    "message",
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {
                        "core": {
                          "type": "string"
                        },
                        "json": {
                          "type": "string"
                        },
                        "validation": {
                          "type": "object"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Authentication failure"
                    }
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_404_data"
                }
              ]
            }
          },
          "405": {
            "description": "Invalid Method",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_405_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "Идентификатор клиента",
          "name": "clientID",
          "in": "path",
          "required": true
        }
      ]
    },
    "/events": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Event"
        ],
        "summary": "Коллекция событий",
        "responses": {
          "200": {
            "description": "Коллекция событий",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "$ref": "#/definitions/Event_params"
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            }
          },
          "405": {
            "description": "Invalid Method",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_405_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      }
    },
    "/events/{eventID}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Event"
        ],
        "summary": "Информация о событии",
        "responses": {
          "200": {
            "description": "Коллекция событий",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "$ref": "#/definitions/Event_params"
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_404_data"
                }
              ]
            }
          },
          "405": {
            "description": "Invalid Method",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_405_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "Идентификатор события",
          "name": "eventID",
          "in": "path",
          "required": true
        }
      ]
    },
    "/flow": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Backend"
        ],
        "summary": "Коллекция последовательности аутентификации",
        "responses": {
          "200": {
            "description": "Объект последовательности авторизации",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "$ref": "#/definitions/Flow_params"
                          }
                        ],
                        "x-go-name": "flow-data-item"
                      }
                    }
                  }
                }
              ]
            }
          },
          "405": {
            "description": "Invalid Method",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_405_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Backend"
        ],
        "summary": "Редактирование последовательности аутентификации",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "allOf": [
                  {
                    "$ref": "#/definitions/Flow_params"
                  }
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Объект последовательности авторизации",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "$ref": "#/definitions/Flow_params"
                          }
                        ],
                        "x-go-name": "flow-data-item"
                      }
                    }
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_404_data"
                }
              ]
            }
          },
          "405": {
            "description": "Invalid Method",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_405_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      }
    },
    "/identify": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Auth"
        ],
        "summary": "Идентификация пользователя",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Identify_params"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Результат аутентификации",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "type": "object",
                            "required": [
                              "accessToken",
                              "refreshToken"
                            ],
                            "properties": {
                              "accessToken": {
                                "description": "Токен доступа",
                                "type": "string",
                                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJJRCI6ImFkbWluIi...bfTSMwuonKU8Wrs00b6hLYfHLEeM"
                              },
                              "refreshToken": {
                                "description": "Токен обновления",
                                "type": "string",
                                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJJRCI6ImluIiwiZXhwIjox...49_ysqm_ZFDj0Y5RfnC-AY"
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            }
          },
          "401": {
            "description": "Access denied",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_401_data"
                }
              ]
            }
          },
          "405": {
            "description": "Invalid Method",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_405_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      }
    },
    "/jwk": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "JWK"
        ],
        "summary": "Информация о ключе",
        "responses": {
          "200": {
            "description": "Информация о ключах подписи токенов",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "required": [
                    "keys"
                  ],
                  "properties": {
                    "keys": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "type": "object",
                            "required": [
                              "kid",
                              "alg",
                              "k",
                              "kty"
                            ],
                            "properties": {
                              "alg": {
                                "description": "Криптографический алгоритм подписи",
                                "type": "string",
                                "enum": [
                                  "HS256"
                                ],
                                "example": "HS256"
                              },
                              "k": {
                                "description": "Криптографический ключ",
                                "type": "string",
                                "example": "AyM1SysPpbyDfgZld3umj1qzKjAzZr1Z9CAow"
                              },
                              "kid": {
                                "description": "Идентификатор ключа",
                                "type": "string",
                                "example": "AyM1SysPpbyDfgZld3umj1qzKjAzZr1Z9CAow"
                              },
                              "kty": {
                                "description": "...",
                                "type": "string",
                                "example": "oct"
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      }
    },
    "/oauth2/{backendID}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Auth"
        ],
        "summary": "Получение URI для аутентификации по OAuth2",
        "parameters": [
          {
            "type": "string",
            "description": "Идентификатор бэкенда",
            "name": "backendID",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "URI, на который будет перенаправлен клиент после аутентификации",
            "name": "redirectURI",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Результат запроса пути для аутентификации",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "required": [
                    "OAuth2Path"
                  ],
                  "properties": {
                    "OAuth2Path": {
                      "description": "Путь для аутентификации клиента",
                      "type": "string",
                      "example": "https://accounts.google.com/o/oauth2/auth?access_type=offline\u0026client_id=123456789012-9sj2937kja2pdj5he21bs33lb409udhd.apps.googleusercontent.com\u0026redirect_uri=http%3A%2F%nefrosovet.ru%3A8484%2Foauth2%2Fgoogle%2Fcallback\u0026response_type=code\u0026scope=email+profile+openid"
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Коллекция авторизации",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_400_data"
                },
                {
                  "type": "object",
                  "required": [
                    "message",
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {
                        "core": {
                          "type": "string"
                        },
                        "json": {
                          "type": "string"
                        },
                        "validation": {
                          "type": "object"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Authentication failure"
                    }
                  }
                }
              ]
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      }
    },
    "/oauth2/{backendID}/consent": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Auth"
        ],
        "summary": "Обмен authorizationCode на access_token и refresh_token",
        "parameters": [
          {
            "type": "string",
            "description": "Идентификатор бэкенда",
            "name": "backendID",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/OAuth2_consent_params"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Результат аутентификации",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "type": "object",
                            "required": [
                              "accessToken",
                              "refreshToken"
                            ],
                            "properties": {
                              "accessToken": {
                                "description": "Токен доступа",
                                "type": "string",
                                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJJRCI6ImFkbWluIi...bfTSMwuonKU8Wrs00b6hLYfHLEeM"
                              },
                              "refreshToken": {
                                "description": "Токен обновления",
                                "type": "string",
                                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJJRCI6ImluIiwiZXhwIjox...49_ysqm_ZFDj0Y5RfnC-AY"
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Коллекция авторизации",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_400_data"
                },
                {
                  "type": "object",
                  "required": [
                    "message",
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {
                        "core": {
                          "type": "string"
                        },
                        "json": {
                          "type": "string"
                        },
                        "validation": {
                          "type": "object"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Authentication failure"
                    }
                  }
                }
              ]
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      }
    },
    "/refresh": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Auth"
        ],
        "summary": "Регенерация токенов",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Auth_refresh_params"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Результат аутентификации",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "type": "object",
                            "required": [
                              "accessToken",
                              "refreshToken"
                            ],
                            "properties": {
                              "accessToken": {
                                "description": "Токен доступа",
                                "type": "string",
                                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJJRCI6ImFkbWluIi...bfTSMwuonKU8Wrs00b6hLYfHLEeM"
                              },
                              "refreshToken": {
                                "description": "Токен обновления",
                                "type": "string",
                                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJJRCI6ImluIiwiZXhwIjox...49_ysqm_ZFDj0Y5RfnC-AY"
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            }
          },
          "401": {
            "description": "Access denied",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_401_data"
                }
              ]
            }
          },
          "405": {
            "description": "Invalid Method",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_405_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      }
    },
    "/roles": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Role"
        ],
        "summary": "Коллекция ролей",
        "responses": {
          "200": {
            "description": "Объект роли",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "default"
                        ],
                        "allOf": [
                          {
                            "$ref": "#/definitions/Role_params"
                          }
                        ],
                        "properties": {
                          "default": {
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Коллекция авторизации",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_400_data"
                },
                {
                  "type": "object",
                  "required": [
                    "message",
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {
                        "core": {
                          "type": "string"
                        },
                        "json": {
                          "type": "string"
                        },
                        "validation": {
                          "type": "object"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Authentication failure"
                    }
                  }
                }
              ]
            }
          },
          "405": {
            "description": "Invalid Method",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_405_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Role"
        ],
        "summary": "Создание роли",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Role_params"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Объект роли",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "default"
                        ],
                        "allOf": [
                          {
                            "$ref": "#/definitions/Role_params"
                          }
                        ],
                        "properties": {
                          "default": {
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "405": {
            "description": "Invalid Method",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_405_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      }
    },
    "/roles/{roleID}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Role"
        ],
        "summary": "Информация о роли",
        "responses": {
          "200": {
            "description": "Объект роли",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "default"
                        ],
                        "allOf": [
                          {
                            "$ref": "#/definitions/Role_params"
                          }
                        ],
                        "properties": {
                          "default": {
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_404_data"
                }
              ]
            }
          },
          "405": {
            "description": "Invalid Method",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_405_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Role"
        ],
        "summary": "Изменение роли",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "description": {
                  "description": "Описание роли",
                  "type": "string",
                  "example": "Рядовая медсестра"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Объект роли",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "default"
                        ],
                        "allOf": [
                          {
                            "$ref": "#/definitions/Role_params"
                          }
                        ],
                        "properties": {
                          "default": {
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Коллекция авторизации",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_400_data"
                },
                {
                  "type": "object",
                  "required": [
                    "message",
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {
                        "core": {
                          "type": "string"
                        },
                        "json": {
                          "type": "string"
                        },
                        "validation": {
                          "type": "object"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Authentication failure"
                    }
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_404_data"
                }
              ]
            }
          },
          "405": {
            "description": "Invalid Method",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_405_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      },
      "delete": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Role"
        ],
        "summary": "Удаление роли",
        "responses": {
          "200": {
            "description": "Объект роли",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "default"
                        ],
                        "allOf": [
                          {
                            "$ref": "#/definitions/Role_params"
                          }
                        ],
                        "properties": {
                          "default": {
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_404_data"
                }
              ]
            }
          },
          "405": {
            "description": "Invalid Method",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_405_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "Идентификатор роли",
          "name": "roleID",
          "in": "path",
          "required": true
        }
      ]
    },
    "/roles/{roleID}/users": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Role"
        ],
        "summary": "Коллекция пользователей роли",
        "responses": {
          "200": {
            "description": "Коллекция пользователей",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "description": "Массив идентификаторов пользователей",
                        "type": "string",
                        "example": [
                          "d00962f4-d052-4fb4-99d6-91b56208e72f"
                        ]
                      }
                    }
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_404_data"
                }
              ]
            }
          },
          "405": {
            "description": "Invalid Method",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_405_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "Идентификатор роли",
          "name": "roleID",
          "in": "path",
          "required": true
        }
      ]
    },
    "/roles/{roleID}/users/{userID}": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Role"
        ],
        "summary": "Добавление пользователя в роль",
        "responses": {
          "200": {
            "description": "Коллекция пользователей",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "description": "Массив идентификаторов пользователей",
                        "type": "string",
                        "example": [
                          "d00962f4-d052-4fb4-99d6-91b56208e72f"
                        ]
                      }
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Коллекция авторизации",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_400_data"
                },
                {
                  "type": "object",
                  "required": [
                    "message",
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {
                        "core": {
                          "type": "string"
                        },
                        "json": {
                          "type": "string"
                        },
                        "validation": {
                          "type": "object"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Authentication failure"
                    }
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_404_data"
                }
              ]
            }
          },
          "405": {
            "description": "Invalid Method",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_405_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      },
      "delete": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Role"
        ],
        "summary": "Удаление пользователя из роли",
        "responses": {
          "200": {
            "description": "SUCCESS",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {}
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Коллекция авторизации",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_400_data"
                },
                {
                  "type": "object",
                  "required": [
                    "message",
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {
                        "core": {
                          "type": "string"
                        },
                        "json": {
                          "type": "string"
                        },
                        "validation": {
                          "type": "object"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Authentication failure"
                    }
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_404_data"
                }
              ]
            }
          },
          "405": {
            "description": "Invalid Method",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_405_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "description": "Идентификатор роли",
          "name": "roleID",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "description": "Идентификатор пользователя",
          "name": "userID",
          "in": "path",
          "required": true
        }
      ]
    },
    "/user": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Auth"
        ],
        "summary": "Аутентификация пользователя по логин-паролю",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Auth_user_params"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Результат аутентификации",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "type": "object",
                            "required": [
                              "accessToken",
                              "refreshToken"
                            ],
                            "properties": {
                              "accessToken": {
                                "description": "Токен доступа",
                                "type": "string",
                                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJJRCI6ImFkbWluIi...bfTSMwuonKU8Wrs00b6hLYfHLEeM"
                              },
                              "refreshToken": {
                                "description": "Токен обновления",
                                "type": "string",
                                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJJRCI6ImluIiwiZXhwIjox...49_ysqm_ZFDj0Y5RfnC-AY"
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Коллекция авторизации",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_400_data"
                },
                {
                  "type": "object",
                  "required": [
                    "message",
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {
                        "core": {
                          "type": "string"
                        },
                        "json": {
                          "type": "string"
                        },
                        "validation": {
                          "type": "object"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Authentication failure"
                    }
                  }
                }
              ]
            }
          },
          "401": {
            "description": "Access denied",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_401_data"
                }
              ]
            }
          },
          "405": {
            "description": "Invalid Method",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_405_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      }
    },
    "/whoami": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Token"
        ],
        "summary": "Информация о токене",
        "responses": {
          "200": {
            "description": "Инфо о токене",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "ID": {
                                "description": "Идентификатор субъекта",
                                "type": "string",
                                "example": "d00962f4-d052-4fb4-99d6-91b56208e72f"
                              },
                              "roles": {
                                "description": "Роли пользователя",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "example": [
                                  "NURSE"
                                ]
                              },
                              "type": {
                                "description": "Тип субъекта",
                                "type": "string",
                                "enum": [
                                  "CLIENT",
                                  "USER"
                                ],
                                "example": "USER"
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            }
          },
          "401": {
            "description": "Access denied",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_401_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Admin_params": {
      "title": "Admin_params",
      "required": [
        "password"
      ],
      "properties": {
        "password": {
          "description": "Пароль пользователя",
          "type": "string",
          "minLength": 1,
          "example": "xxxxxxxx"
        }
      }
    },
    "Auth_client_params": {
      "title": "Auth_client_params",
      "required": [
        "clientID",
        "password"
      ],
      "properties": {
        "clientID": {
          "description": "Идентификатор клиента",
          "type": "string",
          "example": "870d16eb-891c-4e96-afbf-e830ebf3be34"
        },
        "password": {
          "description": "Пароль клиента",
          "type": "string",
          "example": "xxxxxxxx"
        }
      }
    },
    "Auth_refresh_params": {
      "title": "Auth_refresh_params",
      "required": [
        "refreshToken"
      ],
      "properties": {
        "refreshToken": {
          "description": "Токен обновления accessToken",
          "type": "string",
          "example": "eyJhbGciOiJ...EZCIv5YkunsQBS8"
        }
      }
    },
    "Auth_user_params": {
      "title": "Auth_user_params",
      "required": [
        "login",
        "password"
      ],
      "properties": {
        "login": {
          "description": "Логин пользователя",
          "type": "string",
          "example": "user"
        },
        "password": {
          "description": "Пароль пользователя",
          "type": "string",
          "example": "xxxxxxxx"
        }
      }
    },
    "BackendID_object": {
      "title": "BackendID_object",
      "properties": {
        "ID": {
          "description": "Идентификатор бэкенда",
          "type": "string",
          "example": "6931ba11-2a08-4bf5-b9b0-aa4ed3046331"
        }
      }
    },
    "Backend_attribute_options": {
      "type": "object",
      "title": "Backend_attribute_options",
      "required": [
        "map",
        "sync"
      ],
      "properties": {
        "map": {
          "description": "Атрибут на бэкенде",
          "type": "string",
          "example": "attributename"
        },
        "sync": {
          "description": "Политика синхронизации",
          "type": "string",
          "enum": [
            "FIRST_LOGIN",
            "ALWAYS"
          ]
        }
      }
    },
    "Backend_attribute_params": {
      "type": "object",
      "title": "Backend_attribute_params",
      "required": [
        "GUID",
        "username"
      ],
      "properties": {
        "GUID": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Backend_attribute_options"
            }
          ]
        },
        "email": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Backend_attribute_options"
            }
          ]
        },
        "firstName": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Backend_attribute_options"
            }
          ]
        },
        "lastName": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Backend_attribute_options"
            }
          ]
        },
        "mobile": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Backend_attribute_options"
            }
          ]
        },
        "patronymic": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Backend_attribute_options"
            }
          ]
        },
        "username": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Backend_attribute_options"
            }
          ]
        }
      }
    },
    "Backend_group_params": {
      "type": "object",
      "title": "Backend_group_params",
      "required": [
        "group",
        "roleID"
      ],
      "properties": {
        "group": {
          "description": "Название группы",
          "type": "string",
          "example": "grG_DC-001_sec_Git"
        },
        "roleID": {
          "description": "Идентификатор роли",
          "type": "string",
          "example": "NURSE"
        }
      }
    },
    "Backend_ldap_params": {
      "title": "Backend_ldap_params",
      "required": [
        "host",
        "port",
        "bindDN",
        "baseDN",
        "filter",
        "sync"
      ],
      "properties": {
        "baseDN": {
          "description": "База поиска",
          "type": "string",
          "example": "o=Diacare-Soft,dc=lan"
        },
        "bindDN": {
          "description": "DN пользователя",
          "type": "string",
          "example": "cn=Administraytor,ou=Users,o=Diacare-Soft,dc=lan"
        },
        "cipher": {
          "description": "Использование шифрования",
          "type": "string",
          "default": "NONE",
          "enum": [
            "NONE",
            "TLS",
            "STARTTLS"
          ],
          "example": "TLS"
        },
        "filter": {
          "description": "Фильтр поиска",
          "type": "string",
          "example": "(|(userPrincipalName=%u@diacare.lan)(mobile=%u))"
        },
        "host": {
          "description": "Ldap хост",
          "type": "string",
          "example": "127.0.0.1"
        },
        "port": {
          "description": "Ldap порт",
          "type": "integer",
          "example": 389
        },
        "sync": {
          "description": "Сущность синхронизации",
          "type": "string",
          "enum": [
            "PATIENT",
            "EMPLOYEE"
          ],
          "example": "PATIENT"
        }
      }
    },
    "Backend_oauth2_ID_param": {
      "title": "Backend_oauth2_ID_param",
      "properties": {
        "ID": {
          "description": "Кастомный ID бэкенда (Для OAuth)",
          "type": "string",
          "example": "mainGoogle"
        }
      }
    },
    "Backend_oauth2_params": {
      "title": "Backend_oauth2_params",
      "required": [
        "provider",
        "clientID",
        "clientSecret",
        "sync"
      ],
      "properties": {
        "clientID": {
          "description": "Идентификатор приложения",
          "type": "string",
          "example": "testID"
        },
        "clientSecret": {
          "description": "Секретный ключ приложения",
          "type": "string",
          "example": "testSecret"
        },
        "provider": {
          "description": "Название сервиса, на котором авторизуемся",
          "type": "string",
          "enum": [
            "GITHUB",
            "GOOGLE",
            "EMPLOYEE",
            "YANDEX",
            "ESIA"
          ],
          "example": "GITHUB"
        },
        "sync": {
          "description": "Сущность синхронизации",
          "type": "string",
          "enum": [
            "PATIENT",
            "EMPLOYEE"
          ],
          "example": "PATIENT"
        }
      }
    },
    "Backend_params": {
      "title": "Backend_params",
      "required": [
        "description",
        "attributes"
      ],
      "properties": {
        "attributes": {
          "allOf": [
            {
              "$ref": "#/definitions/Backend_attribute_params"
            }
          ]
        },
        "description": {
          "description": "Описание бэкенда",
          "type": "string",
          "example": "MS AD"
        }
      }
    },
    "Backend_patch_ldap_params": {
      "title": "Backend_patch_ldap_params",
      "properties": {
        "baseDN": {
          "description": "База поиска",
          "type": "string",
          "x-nullable": true,
          "example": "o=Diacare-Soft,dc=lan"
        },
        "bindDN": {
          "description": "DN пользователя",
          "type": "string",
          "x-nullable": true,
          "example": "cn=Administraytor,ou=Users,o=Diacare-Soft,dc=lan"
        },
        "cipher": {
          "description": "Использование шифрования",
          "type": "string",
          "default": "NONE",
          "enum": [
            "NONE",
            "TLS",
            "STARTTLS"
          ],
          "example": "TLS"
        },
        "description": {
          "description": "Описание бэкенда",
          "type": "string",
          "x-nullable": true,
          "example": "MS AD"
        },
        "filter": {
          "description": "Фильтр поиска",
          "type": "string",
          "x-nullable": true,
          "example": "(|(userPrincipalName=%u@diacare.lan)(mobile=%u))"
        },
        "host": {
          "description": "Ldap хост",
          "type": "string",
          "x-nullable": true,
          "example": "127.0.0.1"
        },
        "password": {
          "description": "Пароль пользователя",
          "type": "string",
          "x-nullable": true,
          "example": "d00962456208e72f"
        },
        "port": {
          "description": "Ldap порт",
          "type": "integer",
          "x-nullable": true,
          "example": 389
        },
        "sync": {
          "description": "Сущность синхронизации",
          "type": "string",
          "enum": [
            "PATIENT",
            "EMPLOYEE"
          ],
          "x-nullable": true,
          "example": "PATIENT"
        }
      }
    },
    "Backend_patch_oauth2_params": {
      "title": "Backend_patch_oauth2_params",
      "properties": {
        "clientID": {
          "description": "Идентификатор приложения",
          "type": "string",
          "x-nullable": true,
          "example": "testID"
        },
        "clientSecret": {
          "description": "Секретный ключ приложения",
          "type": "string",
          "x-nullable": true,
          "example": "testSecret"
        },
        "description": {
          "description": "Описание бэкенда",
          "type": "string",
          "x-nullable": true,
          "example": "MS AD"
        },
        "provider": {
          "description": "Название сервиса, на котором авторизуемся",
          "type": "string",
          "enum": [
            "GITHUB",
            "GOOGLE",
            "EMPLOYEE",
            "YANDEX",
            "ESIA"
          ],
          "x-nullable": true,
          "example": "GITHUB"
        },
        "sync": {
          "description": "Сущность синхронизации",
          "type": "string",
          "enum": [
            "PATIENT",
            "EMPLOYEE"
          ],
          "x-nullable": true,
          "example": "PATIENT"
        }
      }
    },
    "Backend_test_params": {
      "title": "Backend_test_params",
      "properties": {
        "error": {
          "description": "Детализация ошибки",
          "type": "string",
          "x-nullable": true,
          "example": "Protocol failure"
        },
        "status": {
          "description": "Статус коннекта к бэкенду",
          "type": "string",
          "enum": [
            "SUCCESS",
            "FAILED"
          ],
          "example": "FAILED"
        }
      }
    },
    "Base_data": {
      "description": "Возвращает статус ответа",
      "type": "object",
      "required": [
        "version"
      ],
      "properties": {
        "version": {
          "description": "Версия ответа сервиса",
          "type": "string",
          "example": "2.0.0"
        }
      }
    },
    "Client_params": {
      "title": "Client_params",
      "required": [
        "description"
      ],
      "properties": {
        "description": {
          "description": "Описание клиента",
          "type": "string",
          "example": "MX-071"
        }
      }
    },
    "Error_400_data": {
      "allOf": [
        {
          "$ref": "#/definitions/Error_data"
        },
        {
          "type": "object",
          "title": "Error_Error_400_data",
          "required": [
            "message",
            "errors"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {}
            },
            "message": {
              "type": "string",
              "example": "Validation error"
            }
          }
        }
      ]
    },
    "Error_401_data": {
      "allOf": [
        {
          "$ref": "#/definitions/Error_data"
        },
        {
          "type": "object",
          "title": "Error_401_data",
          "required": [
            "message",
            "errors"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {}
            },
            "message": {
              "description": "сообщение ответа",
              "type": "string",
              "example": "Invalid token"
            }
          }
        }
      ]
    },
    "Error_404_data": {
      "allOf": [
        {
          "$ref": "#/definitions/Error_data"
        },
        {
          "type": "object",
          "title": "Error_Error_404_data",
          "required": [
            "message",
            "errors"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {}
            },
            "message": {
              "description": "сообщение ответа",
              "type": "string",
              "example": "Entity not found"
            }
          }
        }
      ]
    },
    "Error_405_data": {
      "allOf": [
        {
          "$ref": "#/definitions/Error_data"
        },
        {
          "type": "object",
          "title": "Error_Error_405_data",
          "properties": {
            "errors": {},
            "message": {
              "description": "сообщение ответа",
              "type": "string",
              "example": "Method ${METHOD} not allowed"
            }
          }
        }
      ]
    },
    "Error_500_data": {
      "allOf": [
        {
          "$ref": "#/definitions/Error_data"
        },
        {
          "type": "object",
          "title": "Error_Error_500_data",
          "required": [
            "message",
            "errors"
          ],
          "properties": {
            "errors": {},
            "message": {
              "description": "сообщение ответа",
              "type": "string",
              "example": "Internal server error"
            }
          }
        }
      ]
    },
    "Error_data": {
      "description": "Все плохо",
      "allOf": [
        {
          "$ref": "#/definitions/Base_data"
        },
        {
          "type": "object",
          "title": "Error_data",
          "required": [
            "data"
          ],
          "properties": {
            "data": {}
          }
        }
      ]
    },
    "Event_params": {
      "title": "Event_params",
      "required": [
        "ID",
        "created",
        "type",
        "status"
      ],
      "properties": {
        "ID": {
          "description": "Идентификатор события",
          "type": "string",
          "example": "3fb6a05c-a9e4-412d-b8a5-4a433db20d2f"
        },
        "IP": {
          "description": "IP адрес источника",
          "type": "string",
          "example": "192.168.0.1"
        },
        "created": {
          "description": "Дата-время события",
          "type": "string",
          "example": "2005-08-09T18:31:42+03:30"
        },
        "entityID": {
          "description": "Идентификатор субъекта",
          "type": "string",
          "x-nullable": true,
          "example": "ADMIN"
        },
        "entityLogin": {
          "description": "Логин субъекта",
          "type": "string",
          "x-nullable": true,
          "example": "admin"
        },
        "status": {
          "description": "Статус события",
          "type": "string",
          "enum": [
            "SUCCESS",
            "FAILED"
          ],
          "example": "SUCCESS"
        },
        "type": {
          "description": "Тип события",
          "type": "string",
          "enum": [
            "USER_LOGIN",
            "CLIENT_LOGIN",
            "DRIVER_LOGIN",
            "USER_REFRESH",
            "CLIENT_REFRESH"
          ],
          "example": "USER_LOGIN"
        }
      }
    },
    "Flow_params": {
      "type": "object",
      "title": "Flow_params",
      "required": [
        "backendID",
        "order"
      ],
      "properties": {
        "backendID": {
          "description": "Идентификатор бэкенда",
          "type": "string",
          "example": "xxxxxxxx"
        },
        "order": {
          "description": "Порядковый номер",
          "type": "integer",
          "example": 1
        }
      }
    },
    "Identify_params": {
      "title": "Identify_params",
      "required": [
        "cardNumber"
      ],
      "properties": {
        "cardNumber": {
          "description": "Номер смарт-карты",
          "type": "string",
          "example": "111222333444555"
        },
        "user": {
          "description": "Тип пользователя",
          "type": "string",
          "enum": [
            "PATIENT",
            "EMPLOYEE"
          ],
          "example": "EMPLOYEE"
        }
      }
    },
    "OAuth2_consent_params": {
      "title": "OAuth2_consent_params",
      "properties": {
        "authorizationCode": {
          "description": "Код авторизации для дальнейшго обмена на access_token и refresh_token",
          "type": "string",
          "example": "4%2FWAH3WKmebgxdEPdPBOqFCHW0_5VS6nU-bjAdW304eYsNTkVUCHT6jv8Rh00-m7I4N-arCaJK3D3ZVnzmxPBiCno"
        },
        "redirectURI": {
          "description": "URI, на который был перенаправлен клиент после аутентификации",
          "type": "string"
        }
      }
    },
    "Password_object": {
      "title": "Password_object",
      "required": [
        "password"
      ],
      "properties": {
        "password": {
          "description": "Пароль пользователя",
          "type": "string",
          "minLength": 1,
          "example": "d00962456208e72f"
        }
      }
    },
    "Patch_client_params": {
      "title": "Patch_client_params",
      "properties": {
        "description": {
          "description": "Описание клиента",
          "type": "string",
          "x-nullable": true,
          "example": "MX-071"
        },
        "password": {
          "description": "Пароль пользователя",
          "type": "string",
          "minLength": 1,
          "x-nullable": true,
          "example": "d00962456208e72f"
        }
      }
    },
    "Role_params": {
      "title": "Role_params",
      "required": [
        "ID",
        "description"
      ],
      "properties": {
        "ID": {
          "description": "Идентификатор роли",
          "type": "string",
          "example": "NURSE"
        },
        "description": {
          "description": "Описание роли",
          "type": "string",
          "example": "Рядовая медсестра"
        }
      }
    },
    "Success_data": {
      "description": "Все хорошо",
      "allOf": [
        {
          "$ref": "#/definitions/Base_data"
        },
        {
          "type": "object",
          "title": "Success_data",
          "required": [
            "message",
            "errors"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {}
            },
            "message": {
              "description": "сообщение ответа",
              "type": "string",
              "example": "SUCCESS"
            }
          }
        }
      ]
    }
  },
  "parameters": {
    "backendID": {
      "type": "string",
      "description": "Идентификатор бэкенда",
      "name": "backendID",
      "in": "path",
      "required": true
    },
    "clientID": {
      "type": "string",
      "description": "Идентификатор клиента",
      "name": "clientID",
      "in": "path",
      "required": true
    },
    "eventID": {
      "type": "string",
      "description": "Идентификатор события",
      "name": "eventID",
      "in": "path",
      "required": true
    },
    "redirectURI": {
      "type": "string",
      "description": "URI, на который будет перенаправлен клиент после аутентификации",
      "name": "redirectURI",
      "in": "query",
      "required": true
    },
    "roleID": {
      "type": "string",
      "description": "Идентификатор роли",
      "name": "roleID",
      "in": "path",
      "required": true
    },
    "userID": {
      "type": "string",
      "description": "Идентификатор пользователя",
      "name": "userID",
      "in": "path",
      "required": true
    }
  },
  "responses": {
    "Auth_response_200": {
      "description": "Результат аутентификации",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Success_data"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "accessToken",
                        "refreshToken"
                      ],
                      "properties": {
                        "accessToken": {
                          "description": "Токен доступа",
                          "type": "string",
                          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJJRCI6ImFkbWluIi...bfTSMwuonKU8Wrs00b6hLYfHLEeM"
                        },
                        "refreshToken": {
                          "description": "Токен обновления",
                          "type": "string",
                          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJJRCI6ImluIiwiZXhwIjox...49_ysqm_ZFDj0Y5RfnC-AY"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        ]
      }
    },
    "Backend_attribute_response_200": {
      "description": "Объект атрибутов бэкенда",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Success_data"
          },
          {
            "type": "object",
            "required": [
              "data"
            ],
            "properties": {
              "data": {
                "allOf": [
                  {
                    "$ref": "#/definitions/Backend_attribute_params"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "Backend_group_response_200": {
      "description": "Объект групп бэкенда",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Success_data"
          },
          {
            "type": "object",
            "required": [
              "data"
            ],
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/definitions/Backend_group_params"
                    }
                  ]
                }
              }
            }
          }
        ]
      }
    },
    "Backend_ldap_response_200": {
      "description": "Объект LDAP бэкенда",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Success_data"
          },
          {
            "type": "object",
            "required": [
              "data"
            ],
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/definitions/BackendID_object"
                    },
                    {
                      "$ref": "#/definitions/Backend_ldap_params"
                    },
                    {
                      "$ref": "#/definitions/Backend_params"
                    }
                  ],
                  "x-go-name": "ldap-data-item"
                }
              }
            }
          }
        ]
      }
    },
    "Backend_oauth2_response_200": {
      "description": "Объект oauth2 бэкенда",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Success_data"
          },
          {
            "type": "object",
            "required": [
              "data"
            ],
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/definitions/BackendID_object"
                    },
                    {
                      "$ref": "#/definitions/Backend_oauth2_params"
                    },
                    {
                      "$ref": "#/definitions/Backend_params"
                    }
                  ],
                  "x-go-name": "oauth2-data-item"
                }
              }
            }
          }
        ]
      }
    },
    "Backend_test_response": {
      "description": "Объект теста бэкенда",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Success_data"
          },
          {
            "type": "object",
            "required": [
              "data"
            ],
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/definitions/Backend_test_params"
                    }
                  ],
                  "x-go-name": "test-data-item"
                }
              }
            }
          }
        ]
      }
    },
    "Base_response_200": {
      "description": "SUCCESS",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Success_data"
          },
          {
            "type": "object",
            "required": [
              "data"
            ],
            "properties": {
              "data": {
                "type": "array",
                "items": {}
              }
            }
          }
        ]
      }
    },
    "Base_response_400": {
      "description": "Коллекция авторизации",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Error_400_data"
          },
          {
            "type": "object",
            "required": [
              "message",
              "errors"
            ],
            "properties": {
              "errors": {
                "type": "object",
                "properties": {
                  "core": {
                    "type": "string"
                  },
                  "json": {
                    "type": "string"
                  },
                  "validation": {
                    "type": "object"
                  }
                }
              },
              "message": {
                "type": "string",
                "example": "Authentication failure"
              }
            }
          }
        ]
      }
    },
    "Base_response_401": {
      "description": "Access denied",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Error_401_data"
          }
        ]
      }
    },
    "Base_response_404": {
      "description": "Not found",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Error_404_data"
          }
        ]
      }
    },
    "Base_response_405": {
      "description": "Invalid Method",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Error_405_data"
          }
        ]
      }
    },
    "Base_response_500": {
      "description": "Internal server error",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Error_500_data"
          }
        ]
      }
    },
    "Client_response_200": {
      "description": "Объект клиента",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Success_data"
          },
          {
            "type": "object",
            "required": [
              "data"
            ],
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "ID": {
                          "description": "Идентификатор клиента",
                          "type": "string",
                          "example": "d00962f4-d052-4fb4-99d6-91b56208e72f"
                        }
                      }
                    },
                    {
                      "$ref": "#/definitions/Client_params"
                    }
                  ]
                }
              }
            }
          }
        ]
      }
    },
    "Event_response_200": {
      "description": "Коллекция событий",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Success_data"
          },
          {
            "type": "object",
            "required": [
              "data"
            ],
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/definitions/Event_params"
                    }
                  ]
                }
              }
            }
          }
        ]
      }
    },
    "Flow_response_200": {
      "description": "Объект последовательности авторизации",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Success_data"
          },
          {
            "type": "object",
            "required": [
              "data"
            ],
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/definitions/Flow_params"
                    }
                  ],
                  "x-go-name": "flow-data-item"
                }
              }
            }
          }
        ]
      }
    },
    "JWK_response_200": {
      "description": "Информация о ключах подписи токенов",
      "schema": {
        "allOf": [
          {
            "type": "object",
            "required": [
              "keys"
            ],
            "properties": {
              "keys": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "kid",
                        "alg",
                        "k",
                        "kty"
                      ],
                      "properties": {
                        "alg": {
                          "description": "Криптографический алгоритм подписи",
                          "type": "string",
                          "enum": [
                            "HS256"
                          ],
                          "example": "HS256"
                        },
                        "k": {
                          "description": "Криптографический ключ",
                          "type": "string",
                          "example": "AyM1SysPpbyDfgZld3umj1qzKjAzZr1Z9CAow"
                        },
                        "kid": {
                          "description": "Идентификатор ключа",
                          "type": "string",
                          "example": "AyM1SysPpbyDfgZld3umj1qzKjAzZr1Z9CAow"
                        },
                        "kty": {
                          "description": "...",
                          "type": "string",
                          "example": "oct"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        ]
      }
    },
    "OAuthPath_response_200": {
      "description": "Результат запроса пути для аутентификации",
      "schema": {
        "allOf": [
          {
            "type": "object",
            "required": [
              "OAuth2Path"
            ],
            "properties": {
              "OAuth2Path": {
                "description": "Путь для аутентификации клиента",
                "type": "string",
                "example": "https://accounts.google.com/o/oauth2/auth?access_type=offline\u0026client_id=123456789012-9sj2937kja2pdj5he21bs33lb409udhd.apps.googleusercontent.com\u0026redirect_uri=http%3A%2F%nefrosovet.ru%3A8484%2Foauth2%2Fgoogle%2Fcallback\u0026response_type=code\u0026scope=email+profile+openid"
              }
            }
          }
        ]
      }
    },
    "Role_response_200": {
      "description": "Объект роли",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Success_data"
          },
          {
            "type": "object",
            "required": [
              "data"
            ],
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "default"
                  ],
                  "allOf": [
                    {
                      "$ref": "#/definitions/Role_params"
                    }
                  ],
                  "properties": {
                    "default": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        ]
      }
    },
    "Token_response_200": {
      "description": "Инфо о токене",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Success_data"
          },
          {
            "type": "object",
            "required": [
              "data"
            ],
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "ID": {
                          "description": "Идентификатор субъекта",
                          "type": "string",
                          "example": "d00962f4-d052-4fb4-99d6-91b56208e72f"
                        },
                        "roles": {
                          "description": "Роли пользователя",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "NURSE"
                          ]
                        },
                        "type": {
                          "description": "Тип субъекта",
                          "type": "string",
                          "enum": [
                            "CLIENT",
                            "USER"
                          ],
                          "example": "USER"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        ]
      }
    },
    "User_Role_response_200": {
      "description": "Коллекция пользователей",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Success_data"
          },
          {
            "type": "object",
            "required": [
              "data"
            ],
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "description": "Массив идентификаторов пользователей",
                  "type": "string",
                  "example": [
                    "d00962f4-d052-4fb4-99d6-91b56208e72f"
                  ]
                }
              }
            }
          }
        ]
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}`))
}
