version: '3.7'
networks:
  patient:

services:
  app:
    image: "${CI_REGISTRY_IMAGE}:${CI_PIPELINE_ID}"
    container_name: "patient_app-${CI_JOB_ID}"
    labels:
      log.label: "patient_app"
    environment:
      - PATIENT_LOGGING_OUTPUT=STDOUT
      - PATIENT_LOGGING_FORMAT=TEXT
      - PATIENT_LOGGING_LEVEL=INFO

      - PATIENT_HTTP_PORT=80
      - PATIENT_HTTP_HOST=0.0.0.0

      - PATIENT_SENTRYDSN=https://ada34a695baa4ad1a9d5e488e4727a3f@sentry.diacare-soft.ru/33

      - PATIENT_DB_LOGIN=patient
      - PATIENT_DB_PASSWORD=CvV1pH2nvA
      - PATIENT_DB_DATABASE=patient
      - PATIENT_DB_APP_NAME=patient
      - PATIENT_DB_HOST=db
      - PATIENT_DB_PORT=5432
    networks:
      - patient
    depends_on:
      - db
      - migrate
    ports:
      - 80

  db:
    image: postgres:11.5
    restart: always
    container_name: "postgresql-${CI_JOB_ID}"
    networks:
      - patient
    ports:
      - 5432
    environment:
      - POSTGRES_DB=patient
      - POSTGRES_USER=patient
      - POSTGRES_PASSWORD=CvV1pH2nvA

  migrate:
    image: "${CI_REGISTRY_IMAGE}:${CI_PIPELINE_ID}"
    container_name: "patient_migrate-${CI_JOB_ID}"
    labels:
      log.label: "patient_migrate"
    environment:
      - PATIENT_LOGGING_OUTPUT=STDOUT
      - PATIENT_LOGGING_FORMAT=TEXT
      - PATIENT_LOGGING_LEVEL=DEBUG

      - PATIENT_DB_LOGIN=patient
      - PATIENT_DB_PASSWORD=CvV1pH2nvA
      - PATIENT_DB_DATABASE=patient
      - PATIENT_DB_APP_NAME=patient
      - PATIENT_DB_HOST=db
      - PATIENT_DB_PORT=5432

      - PATIENT_MIGRATIONS_PATH=file://../../db/migrations
    networks:
      - patient
    depends_on:
      - db
    command: migrate --up

  filebeat:
    container_name: "filebeat-${CI_JOB_ID}"
    user: root
    build:
      context: .
      dockerfile: Dockerfile.filebeat
      labels:
        - "image.version=${CI_JOB_ID}"
    environment:
      PIPELINE_ID: "${CI_PIPELINE_ID}"
      JOB_ID: "${CI_JOB_ID}"
    networks:
      - patient
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro

  postman:
    image: newman
    container_name: "postman-${CI_JOB_ID}"
    build:
      context: .
      labels:
        - "image.version=${CI_JOB_ID}"
    networks:
      - patient
    depends_on:
      - app
    volumes:
      - /storage/report:/storage/report:z
    command: run /storage/collection.json -r cli,htmlextra --reporter-htmlextra-export /storage/report/${CI_PROJECT_NAME}-${CI_JOB_ID}.html --color on --global-var patientHost=http://app
