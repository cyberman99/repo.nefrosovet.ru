// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// EmployeeObject Employee_object
// swagger:model Employee_object
type EmployeeObject struct {

	// Идентификатор сотрудника клиники
	// Format: uuid
	ID *strfmt.UUID `json:"ID"`

	// Имя
	// Min Length: 1
	FirstName string `json:"firstName,omitempty"`

	// Фамилия
	// Min Length: 1
	LastName string `json:"lastName,omitempty"`

	// Отчество
	// Min Length: 1
	Patronymic *string `json:"patronymic"`

	// Идентификатор аватара на статик-сервисе
	// Format: uuid
	PhotoID *strfmt.UUID `json:"photoID"`
}

// Validate validates this employee object
func (m *EmployeeObject) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateFirstName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLastName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePatronymic(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePhotoID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *EmployeeObject) validateID(formats strfmt.Registry) error {

	if swag.IsZero(m.ID) { // not required
		return nil
	}

	if err := validate.FormatOf("ID", "body", "uuid", m.ID.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *EmployeeObject) validateFirstName(formats strfmt.Registry) error {

	if swag.IsZero(m.FirstName) { // not required
		return nil
	}

	if err := validate.MinLength("firstName", "body", string(m.FirstName), 1); err != nil {
		return err
	}

	return nil
}

func (m *EmployeeObject) validateLastName(formats strfmt.Registry) error {

	if swag.IsZero(m.LastName) { // not required
		return nil
	}

	if err := validate.MinLength("lastName", "body", string(m.LastName), 1); err != nil {
		return err
	}

	return nil
}

func (m *EmployeeObject) validatePatronymic(formats strfmt.Registry) error {

	if swag.IsZero(m.Patronymic) { // not required
		return nil
	}

	if err := validate.MinLength("patronymic", "body", string(*m.Patronymic), 1); err != nil {
		return err
	}

	return nil
}

func (m *EmployeeObject) validatePhotoID(formats strfmt.Registry) error {

	if swag.IsZero(m.PhotoID) { // not required
		return nil
	}

	if err := validate.FormatOf("photoID", "body", "uuid", m.PhotoID.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *EmployeeObject) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *EmployeeObject) UnmarshalBinary(b []byte) error {
	var res EmployeeObject
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
