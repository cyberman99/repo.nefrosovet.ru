// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "#### RESTFUL PATIENT WP API\n",
    "title": "Patient WP API",
    "version": "1.0.0"
  },
  "host": "patient.maximus.lan",
  "basePath": "/",
  "paths": {
    "/confirm": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Access"
        ],
        "summary": "Подтверждение кода",
        "operationId": "CodeConfirmation",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "allOf": [
                {
                  "$ref": "#/definitions/Confirmation_object"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/Base_response_200"
          },
          "400": {
            "$ref": "#/responses/Confirm_response_400"
          },
          "401": {
            "$ref": "#/responses/Base_response_401"
          },
          "404": {
            "$ref": "#/responses/Base_response_404"
          },
          "405": {
            "$ref": "#/responses/Base_response_405"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      }
    },
    "/employees/{employeeID}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Employee"
        ],
        "summary": "Информация о сотруднике клиники",
        "operationId": "EmployeeView",
        "responses": {
          "200": {
            "$ref": "#/responses/Employee_response_200"
          },
          "404": {
            "$ref": "#/responses/Base_response_404"
          },
          "405": {
            "$ref": "#/responses/Base_response_405"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/employeeID"
        }
      ]
    },
    "/recovery": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Access"
        ],
        "summary": "Восстановление доступа пациента",
        "operationId": "PasswordRecovery",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "allOf": [
                {
                  "$ref": "#/definitions/Registration_object"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/Base_response_200"
          },
          "400": {
            "$ref": "#/responses/Registration_response_400"
          },
          "404": {
            "$ref": "#/responses/Base_response_404"
          },
          "405": {
            "$ref": "#/responses/Base_response_405"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      }
    },
    "/registration": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Access"
        ],
        "summary": "Регистрация пациента",
        "operationId": "PatientRegistration",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "allOf": [
                {
                  "$ref": "#/definitions/Registration_object"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/Base_response_200"
          },
          "400": {
            "$ref": "#/responses/Registration_response_400"
          },
          "405": {
            "$ref": "#/responses/Base_response_405"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      }
    },
    "/users/{userID}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Профиль пациента",
        "operationId": "PatientProfileView",
        "responses": {
          "200": {
            "$ref": "#/responses/Profile_response_200"
          },
          "404": {
            "$ref": "#/responses/Base_response_404"
          },
          "405": {
            "$ref": "#/responses/Base_response_405"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Редактирование профиля пациента",
        "operationId": "PatientProfileUpdate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "allOf": [
                {
                  "$ref": "#/definitions/Profile_object"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/Profile_response_200"
          },
          "400": {
            "$ref": "#/responses/Profile_response_400"
          },
          "404": {
            "$ref": "#/responses/Base_response_404"
          },
          "405": {
            "$ref": "#/responses/Base_response_405"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/userID"
        }
      ]
    },
    "/users/{userID}/appointments": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Appointment"
        ],
        "summary": "Коллекция назначений",
        "operationId": "AppointmentCollection",
        "parameters": [
          {
            "$ref": "#/parameters/userID"
          },
          {
            "$ref": "#/parameters/filter.dateFrom"
          },
          {
            "$ref": "#/parameters/filter.dateTo"
          },
          {
            "$ref": "#/parameters/filter.typeCode"
          },
          {
            "$ref": "#/parameters/filter.statusCode"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/Appointment_response_200"
          },
          "400": {
            "$ref": "#/responses/Appointment_response_400"
          },
          "404": {
            "$ref": "#/responses/Base_response_404"
          },
          "405": {
            "$ref": "#/responses/Base_response_405"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      }
    },
    "/users/{userID}/appointments/{appointmentID}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Appointment"
        ],
        "summary": "Информация о назначении",
        "operationId": "AppointmentView",
        "responses": {
          "200": {
            "$ref": "#/responses/Appointment_response_200"
          },
          "404": {
            "$ref": "#/responses/Base_response_404"
          },
          "405": {
            "$ref": "#/responses/Base_response_405"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/userID"
        },
        {
          "$ref": "#/parameters/appointmentID"
        }
      ]
    },
    "/users/{userID}/appointments/{appointmentID}/params": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Appointment"
        ],
        "summary": "Параметры назначения",
        "operationId": "AppointmentParamsCollection",
        "responses": {
          "200": {
            "$ref": "#/responses/Appointment_params_response_200"
          },
          "404": {
            "$ref": "#/responses/Base_response_404"
          },
          "405": {
            "$ref": "#/responses/Base_response_405"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/userID"
        },
        {
          "$ref": "#/parameters/appointmentID"
        },
        {
          "$ref": "#/parameters/limit"
        },
        {
          "$ref": "#/parameters/offset"
        }
      ]
    },
    "/users/{userID}/contacts": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Коллекция контактных данных пациента",
        "operationId": "PatientcontactView",
        "responses": {
          "200": {
            "$ref": "#/responses/Contact_response_200"
          },
          "404": {
            "$ref": "#/responses/Base_response_404"
          },
          "405": {
            "$ref": "#/responses/Base_response_405"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Редактирование контактов пациента",
        "operationId": "PatientContactUpdate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "allOf": [
                {
                  "$ref": "#/definitions/Registration_object"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/Contact_response_200"
          },
          "400": {
            "$ref": "#/responses/Contact_response_400"
          },
          "404": {
            "$ref": "#/responses/Base_response_404"
          },
          "405": {
            "$ref": "#/responses/Base_response_405"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/userID"
        }
      ]
    },
    "/users/{userID}/programs": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Program"
        ],
        "summary": "Коллекция программ назначений",
        "operationId": "AppointmentProgramCollection",
        "parameters": [
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/Appointment_program_response_200"
          },
          "401": {
            "$ref": "#/responses/Base_response_401"
          },
          "404": {
            "$ref": "#/responses/Base_response_404"
          },
          "405": {
            "$ref": "#/responses/Base_response_405"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/userID"
        }
      ]
    },
    "/users/{userID}/programs/{programID}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Program"
        ],
        "summary": "Информация о программе назначений",
        "operationId": "AppointmentProgramView",
        "responses": {
          "200": {
            "$ref": "#/responses/Appointment_program_response_200"
          },
          "404": {
            "$ref": "#/responses/Base_response_404"
          },
          "405": {
            "$ref": "#/responses/Base_response_405"
          },
          "500": {
            "$ref": "#/responses/Base_response_500"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/programID"
        },
        {
          "$ref": "#/parameters/userID"
        }
      ]
    }
  },
  "definitions": {
    "Appointment_object": {
      "title": "Appointment_object",
      "properties": {
        "ID": {
          "description": "Идентификатор назначения",
          "type": "string",
          "format": "uuid",
          "example": "5f253247-92b1-49cb-add9-aaa05b63d58e"
        },
        "comment": {
          "description": "Комментарий врача",
          "type": "string",
          "x-nullable": true,
          "x-omitempty": false,
          "example": "Пример комментария"
        },
        "doctorID": {
          "description": "Идентификатор врача",
          "type": "string",
          "format": "uuid",
          "x-nullable": true,
          "x-omitempty": false,
          "example": "82d8c94f-10f3-40fd-8889-b6f15d2f8d64"
        },
        "duration": {
          "description": "Продолжительность выполнения назанчения",
          "type": "integer",
          "x-nullable": true,
          "x-omitempty": false,
          "example": 300
        },
        "performed": {
          "description": "Фактическая дата выполнения назначения",
          "type": "string",
          "format": "date-time",
          "x-nullable": true,
          "x-omitempty": false,
          "example": "2019-03-08T08:06:54Z"
        },
        "planned": {
          "description": "Плановая дата назначения",
          "type": "string",
          "format": "date-time",
          "example": "2019-03-08T08:06:54Z"
        },
        "programID": {
          "description": "Идентификатор программы лечения",
          "type": "string",
          "format": "uuid",
          "example": "5f253247-92b1-49cb-add9-aaa05b63d58e"
        },
        "statusCode": {
          "description": "Статус выполнения назначения",
          "type": "string",
          "enum": [
            "PERFORMED",
            "NOT_PERFORMED",
            "HALF_PERFORMED"
          ],
          "example": "PERFORMED"
        },
        "typeCode": {
          "description": "Кодификатор типа назначения",
          "type": "string",
          "example": "DRUG"
        }
      }
    },
    "Appointment_param_object": {
      "title": "Appointment_param_object",
      "required": [
        "typeCode",
        "value"
      ],
      "properties": {
        "typeCode": {
          "description": "Кодификатор типа параметра",
          "type": "string",
          "example": "123"
        },
        "value": {
          "description": "Значение параметра",
          "type": "string",
          "example": "123"
        }
      }
    },
    "Appointment_program_object": {
      "title": "Appointment_program_object",
      "properties": {
        "ID": {
          "description": "Идентификатор программы назначений",
          "type": "string",
          "format": "uuid",
          "example": "82d8c94f-10f3-40fd-8889-b6f15d2f8d64"
        },
        "begin": {
          "description": "Дата начала программы назанчения",
          "type": "string",
          "format": "date-time",
          "example": "2019-03-08T08:06:54Z"
        },
        "comment": {
          "description": "Комментарий врача",
          "type": "string",
          "x-nullable": true,
          "x-omitempty": false,
          "example": "пример комментария"
        },
        "doctorID": {
          "description": "Идентификатор врача",
          "type": "string",
          "format": "uuid",
          "x-nullable": true,
          "x-omitempty": false,
          "example": "82d8c94f-10f3-40fd-8889-b6f15d2f8d64"
        },
        "end": {
          "description": "Дата окончания программы назанчения",
          "type": "string",
          "format": "date-time",
          "x-nullable": true,
          "x-omitempty": false,
          "example": "2019-03-08T08:06:54Z"
        },
        "periodicity": {
          "description": "Периодичность",
          "type": "string",
          "x-nullable": true,
          "x-omitempty": false,
          "example": "3 раза в день"
        },
        "statusCode": {
          "description": "Статус программы назначений",
          "type": "string",
          "enum": [
            "OPEN",
            "CLOSED"
          ],
          "example": "OPEN"
        },
        "typeCode": {
          "description": "Тип программы назначений",
          "type": "string"
        }
      }
    },
    "Base_data": {
      "description": "Возвращает статус ответа",
      "type": "object",
      "required": [
        "version"
      ],
      "properties": {
        "version": {
          "description": "Версия ответа сервиса",
          "type": "string",
          "example": "2.0.0"
        }
      }
    },
    "Confirmation_object": {
      "title": "Confirmation_object",
      "required": [
        "code",
        "password"
      ],
      "properties": {
        "code": {
          "description": "Код подтверждения",
          "type": "string",
          "example": "1234"
        },
        "password": {
          "description": "Пароль пользователя",
          "type": "string",
          "example": "example password"
        }
      }
    },
    "Contact_object": {
      "title": "Contact_object",
      "properties": {
        "type": {
          "description": "тип контактных данных",
          "type": "string",
          "enum": [
            "EMAIL",
            "MOBILE"
          ],
          "example": "EMAIL"
        },
        "value": {
          "description": "Контактные данные",
          "type": "string",
          "example": "user@company.com"
        },
        "verified": {
          "description": "Статус подтверждения",
          "type": "boolean",
          "example": true
        }
      }
    },
    "Employee_object": {
      "title": "Employee_object",
      "properties": {
        "ID": {
          "description": "Идентификатор сотрудника клиники",
          "type": "string",
          "format": "uuid",
          "x-nullable": true,
          "x-omitempty": false,
          "example": "3c2713df-690a-4ebf-8364-8caccf806940"
        },
        "firstName": {
          "description": "Имя",
          "type": "string",
          "minLength": 1,
          "example": "Иван"
        },
        "lastName": {
          "description": "Фамилия",
          "type": "string",
          "minLength": 1,
          "example": "Иванов"
        },
        "patronymic": {
          "description": "Отчество",
          "type": "string",
          "minLength": 1,
          "x-nullable": true,
          "x-omitempty": false,
          "example": "Иванович"
        },
        "photoID": {
          "description": "Идентификатор аватара на статик-сервисе",
          "type": "string",
          "format": "uuid",
          "x-nullable": true,
          "x-omitempty": false,
          "example": "82d8c94f-10f3-40fd-8889-b6f15d2f8d64"
        }
      }
    },
    "Error_400_data": {
      "allOf": [
        {
          "$ref": "#/definitions/Error_data"
        },
        {
          "type": "object",
          "title": "Error_Error_400_data",
          "required": [
            "message",
            "errors"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {}
            },
            "message": {
              "type": "string",
              "example": "Validation error"
            }
          }
        }
      ]
    },
    "Error_401_data": {
      "allOf": [
        {
          "$ref": "#/definitions/Error_data"
        },
        {
          "type": "object",
          "title": "Error_401_data",
          "required": [
            "message",
            "errors"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {}
            },
            "message": {
              "description": "сообщение ответа",
              "type": "string",
              "example": "Invalid token"
            }
          }
        }
      ]
    },
    "Error_404_data": {
      "allOf": [
        {
          "$ref": "#/definitions/Error_data"
        },
        {
          "type": "object",
          "title": "Error_Error_404_data",
          "required": [
            "message",
            "errors"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {}
            },
            "message": {
              "description": "сообщение ответа",
              "type": "string",
              "example": "Entity not found"
            }
          }
        }
      ]
    },
    "Error_405_data": {
      "allOf": [
        {
          "$ref": "#/definitions/Error_data"
        },
        {
          "type": "object",
          "title": "Error_Error_405_data",
          "properties": {
            "errors": {},
            "message": {
              "description": "сообщение ответа",
              "type": "string",
              "example": "Method ${METHOD} not allowed"
            }
          }
        }
      ]
    },
    "Error_500_data": {
      "allOf": [
        {
          "$ref": "#/definitions/Error_data"
        },
        {
          "type": "object",
          "title": "Error_Error_500_data",
          "required": [
            "message",
            "errors"
          ],
          "properties": {
            "errors": {},
            "message": {
              "description": "сообщение ответа",
              "type": "string",
              "example": "Internal server error"
            }
          }
        }
      ]
    },
    "Error_data": {
      "description": "Все плохо",
      "allOf": [
        {
          "$ref": "#/definitions/Base_data"
        },
        {
          "type": "object",
          "title": "Error_data",
          "required": [
            "data"
          ],
          "properties": {
            "data": {}
          }
        }
      ]
    },
    "Profile_object": {
      "title": "Screening_object",
      "properties": {
        "firstName": {
          "description": "Имя",
          "type": "string",
          "minLength": 1,
          "example": "Иван"
        },
        "lastName": {
          "description": "Фамилия",
          "type": "string",
          "minLength": 1,
          "example": "Иванов"
        },
        "locale": {
          "description": "Локаль интерфейса",
          "type": "string",
          "minLength": 1,
          "pattern": "^[A-Z]{3}$",
          "example": "RUS"
        },
        "patronymic": {
          "description": "Отчество",
          "type": "string",
          "minLength": 1,
          "example": "Иванович"
        },
        "theme": {
          "description": "Тема интерфейса",
          "type": "string",
          "enum": [
            "DARK",
            "LIGHT"
          ],
          "example": "DARK"
        }
      }
    },
    "Registration_object": {
      "title": "Registration_object",
      "properties": {
        "email": {
          "description": "E-mail адрес",
          "type": "string",
          "format": "email",
          "x-nullable": true,
          "example": "a@b.ru"
        },
        "mobile": {
          "description": "Номер мобильного телефона",
          "type": "string",
          "pattern": "\\d{11}",
          "x-nullable": true,
          "example": "12356789"
        }
      }
    },
    "Success_data": {
      "description": "Все хорошо",
      "allOf": [
        {
          "$ref": "#/definitions/Base_data"
        },
        {
          "type": "object",
          "title": "Success_data",
          "required": [
            "message",
            "errors"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {}
            },
            "message": {
              "description": "сообщение ответа",
              "type": "string",
              "example": "SUCCESS"
            }
          }
        }
      ]
    }
  },
  "parameters": {
    "appointmentID": {
      "type": "string",
      "format": "uuid",
      "description": "Идентификатор медицинского назначения",
      "name": "appointmentID",
      "in": "path",
      "required": true
    },
    "employeeID": {
      "type": "string",
      "format": "uuid",
      "description": "Идентификатор сотрудника клиники",
      "name": "employeeID",
      "in": "path",
      "required": true
    },
    "filter.dateFrom": {
      "type": "string",
      "format": "date",
      "description": "Дата не ранее чем",
      "name": "dateFrom",
      "in": "query",
      "required": true
    },
    "filter.dateTo": {
      "type": "string",
      "format": "date",
      "description": "Дата не позднее чем",
      "name": "dateTo",
      "in": "query",
      "required": true
    },
    "filter.statusCode": {
      "type": "array",
      "items": {
        "enum": [
          "PERFORMED",
          "NOT_PERFORMED",
          "HALF_PERFORMED"
        ],
        "type": "string"
      },
      "description": "Кодификатор статуса",
      "name": "statusCode",
      "in": "query"
    },
    "filter.typeCode": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Кодификатор типа",
      "name": "typeCode",
      "in": "query"
    },
    "limit": {
      "type": "integer",
      "description": "Лимит",
      "name": "limit",
      "in": "query"
    },
    "offset": {
      "type": "integer",
      "description": "Шаг",
      "name": "offset",
      "in": "query"
    },
    "programID": {
      "type": "string",
      "format": "uuid",
      "description": "Идентификатор программы медицинских назначений",
      "name": "programID",
      "in": "path",
      "required": true
    },
    "userID": {
      "type": "string",
      "format": "uuid",
      "description": "Идентификатор пользователя",
      "name": "userID",
      "in": "path",
      "required": true
    }
  },
  "responses": {
    "Appointment_params_response_200": {
      "description": "Коллекция объектов параметров медицинского назначения",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Success_data"
          },
          {
            "type": "object",
            "required": [
              "data"
            ],
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/definitions/Appointment_param_object"
                    }
                  ],
                  "x-go-name": "appointment-params-data-item"
                }
              }
            }
          }
        ]
      }
    },
    "Appointment_program_response_200": {
      "description": "Коллекция объектов программ медицинских назначений",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Success_data"
          },
          {
            "type": "object",
            "required": [
              "data"
            ],
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/definitions/Appointment_program_object"
                    }
                  ],
                  "x-go-name": "program-data-item"
                }
              }
            }
          }
        ]
      }
    },
    "Appointment_response_200": {
      "description": "Коллекция медицинских назначений",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Success_data"
          },
          {
            "type": "object",
            "required": [
              "data"
            ],
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/definitions/Appointment_object"
                    }
                  ],
                  "x-go-name": "appointment-data-item"
                }
              }
            }
          }
        ]
      }
    },
    "Appointment_response_400": {
      "description": "Validation error",
      "schema": {
        "allOf": [
          {
            "$ref": "#/responses/Base_response_400"
          },
          {
            "type": "object"
          },
          {
            "properties": {
              "errors": {
                "type": "object",
                "properties": {
                  "validation": {
                    "type": "object",
                    "properties": {
                      "dateFrom": {
                        "type": "string",
                        "enum": [
                          "format",
                          "required"
                        ],
                        "example": "format"
                      },
                      "dateTo": {
                        "type": "string",
                        "enum": [
                          "format",
                          "required"
                        ],
                        "example": "format"
                      },
                      "statusCode": {
                        "type": "string",
                        "enum": [
                          "oneof"
                        ],
                        "example": "oneof"
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      }
    },
    "Base_response_200": {
      "description": "SUCCESS",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Success_data"
          },
          {
            "type": "object",
            "required": [
              "data"
            ],
            "properties": {
              "data": {
                "type": "array",
                "items": {}
              }
            }
          }
        ]
      }
    },
    "Base_response_400": {
      "description": "Ошибка валидации",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Error_400_data"
          },
          {
            "type": "object",
            "required": [
              "message",
              "errors"
            ],
            "properties": {
              "errors": {
                "type": "object",
                "properties": {
                  "core": {
                    "type": "string"
                  },
                  "json": {
                    "type": "string"
                  },
                  "validation": {
                    "type": "object"
                  }
                }
              },
              "message": {
                "type": "string",
                "example": "Authentication failure"
              }
            }
          }
        ]
      }
    },
    "Base_response_401": {
      "description": "Access denied",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Error_401_data"
          }
        ]
      }
    },
    "Base_response_404": {
      "description": "Not found",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Error_404_data"
          }
        ]
      }
    },
    "Base_response_405": {
      "description": "Invalid Method",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Error_405_data"
          }
        ]
      }
    },
    "Base_response_500": {
      "description": "Internal server error",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Error_500_data"
          }
        ]
      }
    },
    "Confirm_response_400": {
      "description": "Validation error",
      "schema": {
        "allOf": [
          {
            "$ref": "#/responses/Base_response_400"
          },
          {
            "type": "object"
          },
          {
            "properties": {
              "errors": {
                "type": "object",
                "properties": {
                  "validation": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "enum": [
                          "string",
                          "required"
                        ],
                        "example": "string"
                      },
                      "password": {
                        "type": "string",
                        "enum": [
                          "string",
                          "required"
                        ],
                        "example": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      }
    },
    "Contact_response_200": {
      "description": "Объект контакта пациента",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Success_data"
          },
          {
            "type": "object",
            "required": [
              "data"
            ],
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/definitions/Contact_object"
                    }
                  ],
                  "x-go-name": "contact-data-item"
                }
              }
            }
          }
        ]
      }
    },
    "Contact_response_400": {
      "description": "Validation error",
      "schema": {
        "allOf": [
          {
            "$ref": "#/responses/Base_response_400"
          },
          {
            "type": "object"
          },
          {
            "properties": {
              "errors": {
                "type": "object",
                "properties": {
                  "validation": {
                    "type": "object",
                    "properties": {
                      "email": {
                        "type": "string",
                        "enum": [
                          "string",
                          "format"
                        ],
                        "example": "string"
                      },
                      "mobile": {
                        "type": "string",
                        "enum": [
                          "string",
                          "format"
                        ],
                        "example": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      }
    },
    "Employee_response_200": {
      "description": "Объект информации о сотруднике",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Success_data"
          },
          {
            "type": "object",
            "required": [
              "data"
            ],
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/definitions/Employee_object"
                    }
                  ],
                  "x-go-name": "employee-data-item"
                }
              }
            }
          }
        ]
      }
    },
    "Profile_response_200": {
      "description": "Объект профиля пациента",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Success_data"
          },
          {
            "type": "object",
            "required": [
              "data"
            ],
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/definitions/Profile_object"
                    }
                  ],
                  "x-go-name": "profile-data-item"
                }
              }
            }
          }
        ]
      }
    },
    "Profile_response_400": {
      "description": "Validation error",
      "schema": {
        "allOf": [
          {
            "$ref": "#/responses/Base_response_400"
          },
          {
            "type": "object"
          },
          {
            "properties": {
              "errors": {
                "type": "object",
                "properties": {
                  "validation": {
                    "type": "object",
                    "properties": {
                      "firstName": {
                        "type": "string",
                        "enum": [
                          "string"
                        ],
                        "example": "string"
                      },
                      "lastName": {
                        "type": "string",
                        "enum": [
                          "string"
                        ],
                        "example": "string"
                      },
                      "locale": {
                        "type": "string",
                        "enum": [
                          "string",
                          "format"
                        ],
                        "example": "string"
                      },
                      "patronymic": {
                        "type": "string",
                        "enum": [
                          "string"
                        ],
                        "example": "string"
                      },
                      "theme": {
                        "type": "string",
                        "enum": [
                          "string",
                          "oneof"
                        ],
                        "example": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      }
    },
    "Registration_response_400": {
      "description": "Validation error",
      "schema": {
        "allOf": [
          {
            "$ref": "#/responses/Base_response_400"
          },
          {
            "type": "object"
          },
          {
            "properties": {
              "errors": {
                "type": "object",
                "properties": {
                  "validation": {
                    "type": "object",
                    "properties": {
                      "email": {
                        "type": "string",
                        "enum": [
                          "string",
                          "format"
                        ],
                        "example": "string"
                      },
                      "mobile": {
                        "type": "string",
                        "enum": [
                          "string",
                          "format"
                        ],
                        "example": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "#### RESTFUL PATIENT WP API\n",
    "title": "Patient WP API",
    "version": "1.0.0"
  },
  "host": "patient.maximus.lan",
  "basePath": "/",
  "paths": {
    "/confirm": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Access"
        ],
        "summary": "Подтверждение кода",
        "operationId": "CodeConfirmation",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "allOf": [
                {
                  "$ref": "#/definitions/Confirmation_object"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "SUCCESS",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {}
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Validation error",
            "schema": {
              "allOf": [
                {
                  "description": "Ошибка валидации",
                  "schema": {
                    "allOf": [
                      {
                        "$ref": "#/definitions/Error_400_data"
                      },
                      {
                        "properties": {
                          "errors": {
                            "properties": {
                              "core": {
                                "type": "string"
                              },
                              "json": {
                                "type": "string"
                              },
                              "validation": {
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "message": {
                            "example": "Authentication failure",
                            "type": "string"
                          }
                        },
                        "required": [
                          "message",
                          "errors"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                },
                {
                  "type": "object"
                },
                {
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {
                        "validation": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "enum": [
                                "string",
                                "required"
                              ],
                              "example": "string"
                            },
                            "password": {
                              "type": "string",
                              "enum": [
                                "string",
                                "required"
                              ],
                              "example": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "401": {
            "description": "Access denied",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_401_data"
                }
              ]
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_404_data"
                }
              ]
            }
          },
          "405": {
            "description": "Invalid Method",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_405_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      }
    },
    "/employees/{employeeID}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Employee"
        ],
        "summary": "Информация о сотруднике клиники",
        "operationId": "EmployeeView",
        "responses": {
          "200": {
            "description": "Объект информации о сотруднике",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "$ref": "#/definitions/Employee_object"
                          }
                        ],
                        "x-go-name": "employee-data-item"
                      }
                    }
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_404_data"
                }
              ]
            }
          },
          "405": {
            "description": "Invalid Method",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_405_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "format": "uuid",
          "description": "Идентификатор сотрудника клиники",
          "name": "employeeID",
          "in": "path",
          "required": true
        }
      ]
    },
    "/recovery": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Access"
        ],
        "summary": "Восстановление доступа пациента",
        "operationId": "PasswordRecovery",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "allOf": [
                {
                  "$ref": "#/definitions/Registration_object"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "SUCCESS",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {}
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Validation error",
            "schema": {
              "allOf": [
                {
                  "description": "Ошибка валидации",
                  "schema": {
                    "allOf": [
                      {
                        "$ref": "#/definitions/Error_400_data"
                      },
                      {
                        "properties": {
                          "errors": {
                            "properties": {
                              "core": {
                                "type": "string"
                              },
                              "json": {
                                "type": "string"
                              },
                              "validation": {
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "message": {
                            "example": "Authentication failure",
                            "type": "string"
                          }
                        },
                        "required": [
                          "message",
                          "errors"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                },
                {
                  "type": "object"
                },
                {
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {
                        "validation": {
                          "type": "object",
                          "properties": {
                            "email": {
                              "type": "string",
                              "enum": [
                                "string",
                                "format"
                              ],
                              "example": "string"
                            },
                            "mobile": {
                              "type": "string",
                              "enum": [
                                "string",
                                "format"
                              ],
                              "example": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_404_data"
                }
              ]
            }
          },
          "405": {
            "description": "Invalid Method",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_405_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      }
    },
    "/registration": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Access"
        ],
        "summary": "Регистрация пациента",
        "operationId": "PatientRegistration",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "allOf": [
                {
                  "$ref": "#/definitions/Registration_object"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "SUCCESS",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {}
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Validation error",
            "schema": {
              "allOf": [
                {
                  "description": "Ошибка валидации",
                  "schema": {
                    "allOf": [
                      {
                        "$ref": "#/definitions/Error_400_data"
                      },
                      {
                        "properties": {
                          "errors": {
                            "properties": {
                              "core": {
                                "type": "string"
                              },
                              "json": {
                                "type": "string"
                              },
                              "validation": {
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "message": {
                            "example": "Authentication failure",
                            "type": "string"
                          }
                        },
                        "required": [
                          "message",
                          "errors"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                },
                {
                  "type": "object"
                },
                {
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {
                        "validation": {
                          "type": "object",
                          "properties": {
                            "email": {
                              "type": "string",
                              "enum": [
                                "string",
                                "format"
                              ],
                              "example": "string"
                            },
                            "mobile": {
                              "type": "string",
                              "enum": [
                                "string",
                                "format"
                              ],
                              "example": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "405": {
            "description": "Invalid Method",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_405_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      }
    },
    "/users/{userID}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Профиль пациента",
        "operationId": "PatientProfileView",
        "responses": {
          "200": {
            "description": "Объект профиля пациента",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "$ref": "#/definitions/Profile_object"
                          }
                        ],
                        "x-go-name": "profile-data-item"
                      }
                    }
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_404_data"
                }
              ]
            }
          },
          "405": {
            "description": "Invalid Method",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_405_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Редактирование профиля пациента",
        "operationId": "PatientProfileUpdate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "allOf": [
                {
                  "$ref": "#/definitions/Profile_object"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Объект профиля пациента",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "$ref": "#/definitions/Profile_object"
                          }
                        ],
                        "x-go-name": "profile-data-item"
                      }
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Validation error",
            "schema": {
              "allOf": [
                {
                  "description": "Ошибка валидации",
                  "schema": {
                    "allOf": [
                      {
                        "$ref": "#/definitions/Error_400_data"
                      },
                      {
                        "properties": {
                          "errors": {
                            "properties": {
                              "core": {
                                "type": "string"
                              },
                              "json": {
                                "type": "string"
                              },
                              "validation": {
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "message": {
                            "example": "Authentication failure",
                            "type": "string"
                          }
                        },
                        "required": [
                          "message",
                          "errors"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                },
                {
                  "type": "object"
                },
                {
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {
                        "validation": {
                          "type": "object",
                          "properties": {
                            "firstName": {
                              "type": "string",
                              "enum": [
                                "string"
                              ],
                              "example": "string"
                            },
                            "lastName": {
                              "type": "string",
                              "enum": [
                                "string"
                              ],
                              "example": "string"
                            },
                            "locale": {
                              "type": "string",
                              "enum": [
                                "string",
                                "format"
                              ],
                              "example": "string"
                            },
                            "patronymic": {
                              "type": "string",
                              "enum": [
                                "string"
                              ],
                              "example": "string"
                            },
                            "theme": {
                              "type": "string",
                              "enum": [
                                "string",
                                "oneof"
                              ],
                              "example": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_404_data"
                }
              ]
            }
          },
          "405": {
            "description": "Invalid Method",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_405_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "format": "uuid",
          "description": "Идентификатор пользователя",
          "name": "userID",
          "in": "path",
          "required": true
        }
      ]
    },
    "/users/{userID}/appointments": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Appointment"
        ],
        "summary": "Коллекция назначений",
        "operationId": "AppointmentCollection",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "Идентификатор пользователя",
            "name": "userID",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "date",
            "description": "Дата не ранее чем",
            "name": "dateFrom",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "format": "date",
            "description": "Дата не позднее чем",
            "name": "dateTo",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Кодификатор типа",
            "name": "typeCode",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "enum": [
                "PERFORMED",
                "NOT_PERFORMED",
                "HALF_PERFORMED"
              ],
              "type": "string"
            },
            "description": "Кодификатор статуса",
            "name": "statusCode",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Лимит",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Шаг",
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Коллекция медицинских назначений",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "$ref": "#/definitions/Appointment_object"
                          }
                        ],
                        "x-go-name": "appointment-data-item"
                      }
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Validation error",
            "schema": {
              "allOf": [
                {
                  "description": "Ошибка валидации",
                  "schema": {
                    "allOf": [
                      {
                        "$ref": "#/definitions/Error_400_data"
                      },
                      {
                        "properties": {
                          "errors": {
                            "properties": {
                              "core": {
                                "type": "string"
                              },
                              "json": {
                                "type": "string"
                              },
                              "validation": {
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "message": {
                            "example": "Authentication failure",
                            "type": "string"
                          }
                        },
                        "required": [
                          "message",
                          "errors"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                },
                {
                  "type": "object"
                },
                {
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {
                        "validation": {
                          "type": "object",
                          "properties": {
                            "dateFrom": {
                              "type": "string",
                              "enum": [
                                "format",
                                "required"
                              ],
                              "example": "format"
                            },
                            "dateTo": {
                              "type": "string",
                              "enum": [
                                "format",
                                "required"
                              ],
                              "example": "format"
                            },
                            "statusCode": {
                              "type": "string",
                              "enum": [
                                "oneof"
                              ],
                              "example": "oneof"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_404_data"
                }
              ]
            }
          },
          "405": {
            "description": "Invalid Method",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_405_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      }
    },
    "/users/{userID}/appointments/{appointmentID}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Appointment"
        ],
        "summary": "Информация о назначении",
        "operationId": "AppointmentView",
        "responses": {
          "200": {
            "description": "Коллекция медицинских назначений",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "$ref": "#/definitions/Appointment_object"
                          }
                        ],
                        "x-go-name": "appointment-data-item"
                      }
                    }
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_404_data"
                }
              ]
            }
          },
          "405": {
            "description": "Invalid Method",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_405_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "format": "uuid",
          "description": "Идентификатор пользователя",
          "name": "userID",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "format": "uuid",
          "description": "Идентификатор медицинского назначения",
          "name": "appointmentID",
          "in": "path",
          "required": true
        }
      ]
    },
    "/users/{userID}/appointments/{appointmentID}/params": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Appointment"
        ],
        "summary": "Параметры назначения",
        "operationId": "AppointmentParamsCollection",
        "responses": {
          "200": {
            "description": "Коллекция объектов параметров медицинского назначения",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "$ref": "#/definitions/Appointment_param_object"
                          }
                        ],
                        "x-go-name": "appointment-params-data-item"
                      }
                    }
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_404_data"
                }
              ]
            }
          },
          "405": {
            "description": "Invalid Method",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_405_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "format": "uuid",
          "description": "Идентификатор пользователя",
          "name": "userID",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "format": "uuid",
          "description": "Идентификатор медицинского назначения",
          "name": "appointmentID",
          "in": "path",
          "required": true
        },
        {
          "type": "integer",
          "description": "Лимит",
          "name": "limit",
          "in": "query"
        },
        {
          "type": "integer",
          "description": "Шаг",
          "name": "offset",
          "in": "query"
        }
      ]
    },
    "/users/{userID}/contacts": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Коллекция контактных данных пациента",
        "operationId": "PatientcontactView",
        "responses": {
          "200": {
            "description": "Объект контакта пациента",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "$ref": "#/definitions/Contact_object"
                          }
                        ],
                        "x-go-name": "contact-data-item"
                      }
                    }
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_404_data"
                }
              ]
            }
          },
          "405": {
            "description": "Invalid Method",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_405_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Редактирование контактов пациента",
        "operationId": "PatientContactUpdate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "allOf": [
                {
                  "$ref": "#/definitions/Registration_object"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Объект контакта пациента",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "$ref": "#/definitions/Contact_object"
                          }
                        ],
                        "x-go-name": "contact-data-item"
                      }
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Validation error",
            "schema": {
              "allOf": [
                {
                  "description": "Ошибка валидации",
                  "schema": {
                    "allOf": [
                      {
                        "$ref": "#/definitions/Error_400_data"
                      },
                      {
                        "properties": {
                          "errors": {
                            "properties": {
                              "core": {
                                "type": "string"
                              },
                              "json": {
                                "type": "string"
                              },
                              "validation": {
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "message": {
                            "example": "Authentication failure",
                            "type": "string"
                          }
                        },
                        "required": [
                          "message",
                          "errors"
                        ],
                        "type": "object"
                      }
                    ]
                  }
                },
                {
                  "type": "object"
                },
                {
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {
                        "validation": {
                          "type": "object",
                          "properties": {
                            "email": {
                              "type": "string",
                              "enum": [
                                "string",
                                "format"
                              ],
                              "example": "string"
                            },
                            "mobile": {
                              "type": "string",
                              "enum": [
                                "string",
                                "format"
                              ],
                              "example": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_404_data"
                }
              ]
            }
          },
          "405": {
            "description": "Invalid Method",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_405_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "format": "uuid",
          "description": "Идентификатор пользователя",
          "name": "userID",
          "in": "path",
          "required": true
        }
      ]
    },
    "/users/{userID}/programs": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Program"
        ],
        "summary": "Коллекция программ назначений",
        "operationId": "AppointmentProgramCollection",
        "parameters": [
          {
            "type": "integer",
            "description": "Лимит",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Шаг",
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Коллекция объектов программ медицинских назначений",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "$ref": "#/definitions/Appointment_program_object"
                          }
                        ],
                        "x-go-name": "program-data-item"
                      }
                    }
                  }
                }
              ]
            }
          },
          "401": {
            "description": "Access denied",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_401_data"
                }
              ]
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_404_data"
                }
              ]
            }
          },
          "405": {
            "description": "Invalid Method",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_405_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "format": "uuid",
          "description": "Идентификатор пользователя",
          "name": "userID",
          "in": "path",
          "required": true
        }
      ]
    },
    "/users/{userID}/programs/{programID}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Program"
        ],
        "summary": "Информация о программе назначений",
        "operationId": "AppointmentProgramView",
        "responses": {
          "200": {
            "description": "Коллекция объектов программ медицинских назначений",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Success_data"
                },
                {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "$ref": "#/definitions/Appointment_program_object"
                          }
                        ],
                        "x-go-name": "program-data-item"
                      }
                    }
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_404_data"
                }
              ]
            }
          },
          "405": {
            "description": "Invalid Method",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_405_data"
                }
              ]
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_500_data"
                }
              ]
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "format": "uuid",
          "description": "Идентификатор программы медицинских назначений",
          "name": "programID",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "format": "uuid",
          "description": "Идентификатор пользователя",
          "name": "userID",
          "in": "path",
          "required": true
        }
      ]
    }
  },
  "definitions": {
    "Appointment_object": {
      "title": "Appointment_object",
      "properties": {
        "ID": {
          "description": "Идентификатор назначения",
          "type": "string",
          "format": "uuid",
          "example": "5f253247-92b1-49cb-add9-aaa05b63d58e"
        },
        "comment": {
          "description": "Комментарий врача",
          "type": "string",
          "x-nullable": true,
          "x-omitempty": false,
          "example": "Пример комментария"
        },
        "doctorID": {
          "description": "Идентификатор врача",
          "type": "string",
          "format": "uuid",
          "x-nullable": true,
          "x-omitempty": false,
          "example": "82d8c94f-10f3-40fd-8889-b6f15d2f8d64"
        },
        "duration": {
          "description": "Продолжительность выполнения назанчения",
          "type": "integer",
          "x-nullable": true,
          "x-omitempty": false,
          "example": 300
        },
        "performed": {
          "description": "Фактическая дата выполнения назначения",
          "type": "string",
          "format": "date-time",
          "x-nullable": true,
          "x-omitempty": false,
          "example": "2019-03-08T08:06:54Z"
        },
        "planned": {
          "description": "Плановая дата назначения",
          "type": "string",
          "format": "date-time",
          "example": "2019-03-08T08:06:54Z"
        },
        "programID": {
          "description": "Идентификатор программы лечения",
          "type": "string",
          "format": "uuid",
          "example": "5f253247-92b1-49cb-add9-aaa05b63d58e"
        },
        "statusCode": {
          "description": "Статус выполнения назначения",
          "type": "string",
          "enum": [
            "PERFORMED",
            "NOT_PERFORMED",
            "HALF_PERFORMED"
          ],
          "example": "PERFORMED"
        },
        "typeCode": {
          "description": "Кодификатор типа назначения",
          "type": "string",
          "example": "DRUG"
        }
      }
    },
    "Appointment_param_object": {
      "title": "Appointment_param_object",
      "required": [
        "typeCode",
        "value"
      ],
      "properties": {
        "typeCode": {
          "description": "Кодификатор типа параметра",
          "type": "string",
          "example": "123"
        },
        "value": {
          "description": "Значение параметра",
          "type": "string",
          "example": "123"
        }
      }
    },
    "Appointment_program_object": {
      "title": "Appointment_program_object",
      "properties": {
        "ID": {
          "description": "Идентификатор программы назначений",
          "type": "string",
          "format": "uuid",
          "example": "82d8c94f-10f3-40fd-8889-b6f15d2f8d64"
        },
        "begin": {
          "description": "Дата начала программы назанчения",
          "type": "string",
          "format": "date-time",
          "example": "2019-03-08T08:06:54Z"
        },
        "comment": {
          "description": "Комментарий врача",
          "type": "string",
          "x-nullable": true,
          "x-omitempty": false,
          "example": "пример комментария"
        },
        "doctorID": {
          "description": "Идентификатор врача",
          "type": "string",
          "format": "uuid",
          "x-nullable": true,
          "x-omitempty": false,
          "example": "82d8c94f-10f3-40fd-8889-b6f15d2f8d64"
        },
        "end": {
          "description": "Дата окончания программы назанчения",
          "type": "string",
          "format": "date-time",
          "x-nullable": true,
          "x-omitempty": false,
          "example": "2019-03-08T08:06:54Z"
        },
        "periodicity": {
          "description": "Периодичность",
          "type": "string",
          "x-nullable": true,
          "x-omitempty": false,
          "example": "3 раза в день"
        },
        "statusCode": {
          "description": "Статус программы назначений",
          "type": "string",
          "enum": [
            "OPEN",
            "CLOSED"
          ],
          "example": "OPEN"
        },
        "typeCode": {
          "description": "Тип программы назначений",
          "type": "string"
        }
      }
    },
    "Base_data": {
      "description": "Возвращает статус ответа",
      "type": "object",
      "required": [
        "version"
      ],
      "properties": {
        "version": {
          "description": "Версия ответа сервиса",
          "type": "string",
          "example": "2.0.0"
        }
      }
    },
    "Confirmation_object": {
      "title": "Confirmation_object",
      "required": [
        "code",
        "password"
      ],
      "properties": {
        "code": {
          "description": "Код подтверждения",
          "type": "string",
          "example": "1234"
        },
        "password": {
          "description": "Пароль пользователя",
          "type": "string",
          "example": "example password"
        }
      }
    },
    "Contact_object": {
      "title": "Contact_object",
      "properties": {
        "type": {
          "description": "тип контактных данных",
          "type": "string",
          "enum": [
            "EMAIL",
            "MOBILE"
          ],
          "example": "EMAIL"
        },
        "value": {
          "description": "Контактные данные",
          "type": "string",
          "example": "user@company.com"
        },
        "verified": {
          "description": "Статус подтверждения",
          "type": "boolean",
          "example": true
        }
      }
    },
    "Employee_object": {
      "title": "Employee_object",
      "properties": {
        "ID": {
          "description": "Идентификатор сотрудника клиники",
          "type": "string",
          "format": "uuid",
          "x-nullable": true,
          "x-omitempty": false,
          "example": "3c2713df-690a-4ebf-8364-8caccf806940"
        },
        "firstName": {
          "description": "Имя",
          "type": "string",
          "minLength": 1,
          "example": "Иван"
        },
        "lastName": {
          "description": "Фамилия",
          "type": "string",
          "minLength": 1,
          "example": "Иванов"
        },
        "patronymic": {
          "description": "Отчество",
          "type": "string",
          "minLength": 1,
          "x-nullable": true,
          "x-omitempty": false,
          "example": "Иванович"
        },
        "photoID": {
          "description": "Идентификатор аватара на статик-сервисе",
          "type": "string",
          "format": "uuid",
          "x-nullable": true,
          "x-omitempty": false,
          "example": "82d8c94f-10f3-40fd-8889-b6f15d2f8d64"
        }
      }
    },
    "Error_400_data": {
      "allOf": [
        {
          "$ref": "#/definitions/Error_data"
        },
        {
          "type": "object",
          "title": "Error_Error_400_data",
          "required": [
            "message",
            "errors"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {}
            },
            "message": {
              "type": "string",
              "example": "Validation error"
            }
          }
        }
      ]
    },
    "Error_401_data": {
      "allOf": [
        {
          "$ref": "#/definitions/Error_data"
        },
        {
          "type": "object",
          "title": "Error_401_data",
          "required": [
            "message",
            "errors"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {}
            },
            "message": {
              "description": "сообщение ответа",
              "type": "string",
              "example": "Invalid token"
            }
          }
        }
      ]
    },
    "Error_404_data": {
      "allOf": [
        {
          "$ref": "#/definitions/Error_data"
        },
        {
          "type": "object",
          "title": "Error_Error_404_data",
          "required": [
            "message",
            "errors"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {}
            },
            "message": {
              "description": "сообщение ответа",
              "type": "string",
              "example": "Entity not found"
            }
          }
        }
      ]
    },
    "Error_405_data": {
      "allOf": [
        {
          "$ref": "#/definitions/Error_data"
        },
        {
          "type": "object",
          "title": "Error_Error_405_data",
          "properties": {
            "errors": {},
            "message": {
              "description": "сообщение ответа",
              "type": "string",
              "example": "Method ${METHOD} not allowed"
            }
          }
        }
      ]
    },
    "Error_500_data": {
      "allOf": [
        {
          "$ref": "#/definitions/Error_data"
        },
        {
          "type": "object",
          "title": "Error_Error_500_data",
          "required": [
            "message",
            "errors"
          ],
          "properties": {
            "errors": {},
            "message": {
              "description": "сообщение ответа",
              "type": "string",
              "example": "Internal server error"
            }
          }
        }
      ]
    },
    "Error_data": {
      "description": "Все плохо",
      "allOf": [
        {
          "$ref": "#/definitions/Base_data"
        },
        {
          "type": "object",
          "title": "Error_data",
          "required": [
            "data"
          ],
          "properties": {
            "data": {}
          }
        }
      ]
    },
    "Profile_object": {
      "title": "Screening_object",
      "properties": {
        "firstName": {
          "description": "Имя",
          "type": "string",
          "minLength": 1,
          "example": "Иван"
        },
        "lastName": {
          "description": "Фамилия",
          "type": "string",
          "minLength": 1,
          "example": "Иванов"
        },
        "locale": {
          "description": "Локаль интерфейса",
          "type": "string",
          "minLength": 1,
          "pattern": "^[A-Z]{3}$",
          "example": "RUS"
        },
        "patronymic": {
          "description": "Отчество",
          "type": "string",
          "minLength": 1,
          "example": "Иванович"
        },
        "theme": {
          "description": "Тема интерфейса",
          "type": "string",
          "enum": [
            "DARK",
            "LIGHT"
          ],
          "example": "DARK"
        }
      }
    },
    "Registration_object": {
      "title": "Registration_object",
      "properties": {
        "email": {
          "description": "E-mail адрес",
          "type": "string",
          "format": "email",
          "x-nullable": true,
          "example": "a@b.ru"
        },
        "mobile": {
          "description": "Номер мобильного телефона",
          "type": "string",
          "pattern": "\\d{11}",
          "x-nullable": true,
          "example": "12356789"
        }
      }
    },
    "Success_data": {
      "description": "Все хорошо",
      "allOf": [
        {
          "$ref": "#/definitions/Base_data"
        },
        {
          "type": "object",
          "title": "Success_data",
          "required": [
            "message",
            "errors"
          ],
          "properties": {
            "errors": {
              "type": "array",
              "items": {}
            },
            "message": {
              "description": "сообщение ответа",
              "type": "string",
              "example": "SUCCESS"
            }
          }
        }
      ]
    }
  },
  "parameters": {
    "appointmentID": {
      "type": "string",
      "format": "uuid",
      "description": "Идентификатор медицинского назначения",
      "name": "appointmentID",
      "in": "path",
      "required": true
    },
    "employeeID": {
      "type": "string",
      "format": "uuid",
      "description": "Идентификатор сотрудника клиники",
      "name": "employeeID",
      "in": "path",
      "required": true
    },
    "filter.dateFrom": {
      "type": "string",
      "format": "date",
      "description": "Дата не ранее чем",
      "name": "dateFrom",
      "in": "query",
      "required": true
    },
    "filter.dateTo": {
      "type": "string",
      "format": "date",
      "description": "Дата не позднее чем",
      "name": "dateTo",
      "in": "query",
      "required": true
    },
    "filter.statusCode": {
      "type": "array",
      "items": {
        "enum": [
          "PERFORMED",
          "NOT_PERFORMED",
          "HALF_PERFORMED"
        ],
        "type": "string"
      },
      "description": "Кодификатор статуса",
      "name": "statusCode",
      "in": "query"
    },
    "filter.typeCode": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Кодификатор типа",
      "name": "typeCode",
      "in": "query"
    },
    "limit": {
      "type": "integer",
      "description": "Лимит",
      "name": "limit",
      "in": "query"
    },
    "offset": {
      "type": "integer",
      "description": "Шаг",
      "name": "offset",
      "in": "query"
    },
    "programID": {
      "type": "string",
      "format": "uuid",
      "description": "Идентификатор программы медицинских назначений",
      "name": "programID",
      "in": "path",
      "required": true
    },
    "userID": {
      "type": "string",
      "format": "uuid",
      "description": "Идентификатор пользователя",
      "name": "userID",
      "in": "path",
      "required": true
    }
  },
  "responses": {
    "Appointment_params_response_200": {
      "description": "Коллекция объектов параметров медицинского назначения",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Success_data"
          },
          {
            "type": "object",
            "required": [
              "data"
            ],
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/definitions/Appointment_param_object"
                    }
                  ],
                  "x-go-name": "appointment-params-data-item"
                }
              }
            }
          }
        ]
      }
    },
    "Appointment_program_response_200": {
      "description": "Коллекция объектов программ медицинских назначений",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Success_data"
          },
          {
            "type": "object",
            "required": [
              "data"
            ],
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/definitions/Appointment_program_object"
                    }
                  ],
                  "x-go-name": "program-data-item"
                }
              }
            }
          }
        ]
      }
    },
    "Appointment_response_200": {
      "description": "Коллекция медицинских назначений",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Success_data"
          },
          {
            "type": "object",
            "required": [
              "data"
            ],
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/definitions/Appointment_object"
                    }
                  ],
                  "x-go-name": "appointment-data-item"
                }
              }
            }
          }
        ]
      }
    },
    "Appointment_response_400": {
      "description": "Validation error",
      "schema": {
        "allOf": [
          {
            "description": "Ошибка валидации",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_400_data"
                },
                {
                  "properties": {
                    "errors": {
                      "properties": {
                        "core": {
                          "type": "string"
                        },
                        "json": {
                          "type": "string"
                        },
                        "validation": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "message": {
                      "example": "Authentication failure",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "errors"
                  ],
                  "type": "object"
                }
              ]
            }
          },
          {
            "type": "object"
          },
          {
            "properties": {
              "errors": {
                "type": "object",
                "properties": {
                  "validation": {
                    "type": "object",
                    "properties": {
                      "dateFrom": {
                        "type": "string",
                        "enum": [
                          "format",
                          "required"
                        ],
                        "example": "format"
                      },
                      "dateTo": {
                        "type": "string",
                        "enum": [
                          "format",
                          "required"
                        ],
                        "example": "format"
                      },
                      "statusCode": {
                        "type": "string",
                        "enum": [
                          "oneof"
                        ],
                        "example": "oneof"
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      }
    },
    "Base_response_200": {
      "description": "SUCCESS",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Success_data"
          },
          {
            "type": "object",
            "required": [
              "data"
            ],
            "properties": {
              "data": {
                "type": "array",
                "items": {}
              }
            }
          }
        ]
      }
    },
    "Base_response_400": {
      "description": "Ошибка валидации",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Error_400_data"
          },
          {
            "type": "object",
            "required": [
              "message",
              "errors"
            ],
            "properties": {
              "errors": {
                "type": "object",
                "properties": {
                  "core": {
                    "type": "string"
                  },
                  "json": {
                    "type": "string"
                  },
                  "validation": {
                    "type": "object"
                  }
                }
              },
              "message": {
                "type": "string",
                "example": "Authentication failure"
              }
            }
          }
        ]
      }
    },
    "Base_response_401": {
      "description": "Access denied",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Error_401_data"
          }
        ]
      }
    },
    "Base_response_404": {
      "description": "Not found",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Error_404_data"
          }
        ]
      }
    },
    "Base_response_405": {
      "description": "Invalid Method",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Error_405_data"
          }
        ]
      }
    },
    "Base_response_500": {
      "description": "Internal server error",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Error_500_data"
          }
        ]
      }
    },
    "Confirm_response_400": {
      "description": "Validation error",
      "schema": {
        "allOf": [
          {
            "description": "Ошибка валидации",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_400_data"
                },
                {
                  "properties": {
                    "errors": {
                      "properties": {
                        "core": {
                          "type": "string"
                        },
                        "json": {
                          "type": "string"
                        },
                        "validation": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "message": {
                      "example": "Authentication failure",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "errors"
                  ],
                  "type": "object"
                }
              ]
            }
          },
          {
            "type": "object"
          },
          {
            "properties": {
              "errors": {
                "type": "object",
                "properties": {
                  "validation": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "enum": [
                          "string",
                          "required"
                        ],
                        "example": "string"
                      },
                      "password": {
                        "type": "string",
                        "enum": [
                          "string",
                          "required"
                        ],
                        "example": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      }
    },
    "Contact_response_200": {
      "description": "Объект контакта пациента",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Success_data"
          },
          {
            "type": "object",
            "required": [
              "data"
            ],
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/definitions/Contact_object"
                    }
                  ],
                  "x-go-name": "contact-data-item"
                }
              }
            }
          }
        ]
      }
    },
    "Contact_response_400": {
      "description": "Validation error",
      "schema": {
        "allOf": [
          {
            "description": "Ошибка валидации",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_400_data"
                },
                {
                  "properties": {
                    "errors": {
                      "properties": {
                        "core": {
                          "type": "string"
                        },
                        "json": {
                          "type": "string"
                        },
                        "validation": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "message": {
                      "example": "Authentication failure",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "errors"
                  ],
                  "type": "object"
                }
              ]
            }
          },
          {
            "type": "object"
          },
          {
            "properties": {
              "errors": {
                "type": "object",
                "properties": {
                  "validation": {
                    "type": "object",
                    "properties": {
                      "email": {
                        "type": "string",
                        "enum": [
                          "string",
                          "format"
                        ],
                        "example": "string"
                      },
                      "mobile": {
                        "type": "string",
                        "enum": [
                          "string",
                          "format"
                        ],
                        "example": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      }
    },
    "Employee_response_200": {
      "description": "Объект информации о сотруднике",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Success_data"
          },
          {
            "type": "object",
            "required": [
              "data"
            ],
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/definitions/Employee_object"
                    }
                  ],
                  "x-go-name": "employee-data-item"
                }
              }
            }
          }
        ]
      }
    },
    "Profile_response_200": {
      "description": "Объект профиля пациента",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/Success_data"
          },
          {
            "type": "object",
            "required": [
              "data"
            ],
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/definitions/Profile_object"
                    }
                  ],
                  "x-go-name": "profile-data-item"
                }
              }
            }
          }
        ]
      }
    },
    "Profile_response_400": {
      "description": "Validation error",
      "schema": {
        "allOf": [
          {
            "description": "Ошибка валидации",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_400_data"
                },
                {
                  "properties": {
                    "errors": {
                      "properties": {
                        "core": {
                          "type": "string"
                        },
                        "json": {
                          "type": "string"
                        },
                        "validation": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "message": {
                      "example": "Authentication failure",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "errors"
                  ],
                  "type": "object"
                }
              ]
            }
          },
          {
            "type": "object"
          },
          {
            "properties": {
              "errors": {
                "type": "object",
                "properties": {
                  "validation": {
                    "type": "object",
                    "properties": {
                      "firstName": {
                        "type": "string",
                        "enum": [
                          "string"
                        ],
                        "example": "string"
                      },
                      "lastName": {
                        "type": "string",
                        "enum": [
                          "string"
                        ],
                        "example": "string"
                      },
                      "locale": {
                        "type": "string",
                        "enum": [
                          "string",
                          "format"
                        ],
                        "example": "string"
                      },
                      "patronymic": {
                        "type": "string",
                        "enum": [
                          "string"
                        ],
                        "example": "string"
                      },
                      "theme": {
                        "type": "string",
                        "enum": [
                          "string",
                          "oneof"
                        ],
                        "example": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      }
    },
    "Registration_response_400": {
      "description": "Validation error",
      "schema": {
        "allOf": [
          {
            "description": "Ошибка валидации",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error_400_data"
                },
                {
                  "properties": {
                    "errors": {
                      "properties": {
                        "core": {
                          "type": "string"
                        },
                        "json": {
                          "type": "string"
                        },
                        "validation": {
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "message": {
                      "example": "Authentication failure",
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "errors"
                  ],
                  "type": "object"
                }
              ]
            }
          },
          {
            "type": "object"
          },
          {
            "properties": {
              "errors": {
                "type": "object",
                "properties": {
                  "validation": {
                    "type": "object",
                    "properties": {
                      "email": {
                        "type": "string",
                        "enum": [
                          "string",
                          "format"
                        ],
                        "example": "string"
                      },
                      "mobile": {
                        "type": "string",
                        "enum": [
                          "string",
                          "format"
                        ],
                        "example": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      }
    }
  }
}`))
}
