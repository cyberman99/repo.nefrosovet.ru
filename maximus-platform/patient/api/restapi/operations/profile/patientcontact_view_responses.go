// Code generated by go-swagger; DO NOT EDIT.

package profile

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// PatientcontactViewOKCode is the HTTP code returned for type PatientcontactViewOK
const PatientcontactViewOKCode int = 200

/*PatientcontactViewOK Объект контакта пациента

swagger:response patientcontactViewOK
*/
type PatientcontactViewOK struct {

	/*
	  In: Body
	*/
	Payload *PatientcontactViewOKBody `json:"body,omitempty"`
}

// NewPatientcontactViewOK creates PatientcontactViewOK with default headers values
func NewPatientcontactViewOK() *PatientcontactViewOK {

	return &PatientcontactViewOK{}
}

// WithPayload adds the payload to the patientcontact view o k response
func (o *PatientcontactViewOK) WithPayload(payload *PatientcontactViewOKBody) *PatientcontactViewOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the patientcontact view o k response
func (o *PatientcontactViewOK) SetPayload(payload *PatientcontactViewOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PatientcontactViewOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PatientcontactViewNotFoundCode is the HTTP code returned for type PatientcontactViewNotFound
const PatientcontactViewNotFoundCode int = 404

/*PatientcontactViewNotFound Not found

swagger:response patientcontactViewNotFound
*/
type PatientcontactViewNotFound struct {

	/*
	  In: Body
	*/
	Payload *PatientcontactViewNotFoundBody `json:"body,omitempty"`
}

// NewPatientcontactViewNotFound creates PatientcontactViewNotFound with default headers values
func NewPatientcontactViewNotFound() *PatientcontactViewNotFound {

	return &PatientcontactViewNotFound{}
}

// WithPayload adds the payload to the patientcontact view not found response
func (o *PatientcontactViewNotFound) WithPayload(payload *PatientcontactViewNotFoundBody) *PatientcontactViewNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the patientcontact view not found response
func (o *PatientcontactViewNotFound) SetPayload(payload *PatientcontactViewNotFoundBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PatientcontactViewNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PatientcontactViewMethodNotAllowedCode is the HTTP code returned for type PatientcontactViewMethodNotAllowed
const PatientcontactViewMethodNotAllowedCode int = 405

/*PatientcontactViewMethodNotAllowed Invalid Method

swagger:response patientcontactViewMethodNotAllowed
*/
type PatientcontactViewMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *PatientcontactViewMethodNotAllowedBody `json:"body,omitempty"`
}

// NewPatientcontactViewMethodNotAllowed creates PatientcontactViewMethodNotAllowed with default headers values
func NewPatientcontactViewMethodNotAllowed() *PatientcontactViewMethodNotAllowed {

	return &PatientcontactViewMethodNotAllowed{}
}

// WithPayload adds the payload to the patientcontact view method not allowed response
func (o *PatientcontactViewMethodNotAllowed) WithPayload(payload *PatientcontactViewMethodNotAllowedBody) *PatientcontactViewMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the patientcontact view method not allowed response
func (o *PatientcontactViewMethodNotAllowed) SetPayload(payload *PatientcontactViewMethodNotAllowedBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PatientcontactViewMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PatientcontactViewInternalServerErrorCode is the HTTP code returned for type PatientcontactViewInternalServerError
const PatientcontactViewInternalServerErrorCode int = 500

/*PatientcontactViewInternalServerError Internal server error

swagger:response patientcontactViewInternalServerError
*/
type PatientcontactViewInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *PatientcontactViewInternalServerErrorBody `json:"body,omitempty"`
}

// NewPatientcontactViewInternalServerError creates PatientcontactViewInternalServerError with default headers values
func NewPatientcontactViewInternalServerError() *PatientcontactViewInternalServerError {

	return &PatientcontactViewInternalServerError{}
}

// WithPayload adds the payload to the patientcontact view internal server error response
func (o *PatientcontactViewInternalServerError) WithPayload(payload *PatientcontactViewInternalServerErrorBody) *PatientcontactViewInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the patientcontact view internal server error response
func (o *PatientcontactViewInternalServerError) SetPayload(payload *PatientcontactViewInternalServerErrorBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PatientcontactViewInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
