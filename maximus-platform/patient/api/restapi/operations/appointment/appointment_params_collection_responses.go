// Code generated by go-swagger; DO NOT EDIT.

package appointment

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// AppointmentParamsCollectionOKCode is the HTTP code returned for type AppointmentParamsCollectionOK
const AppointmentParamsCollectionOKCode int = 200

/*AppointmentParamsCollectionOK Коллекция объектов параметров медицинского назначения

swagger:response appointmentParamsCollectionOK
*/
type AppointmentParamsCollectionOK struct {

	/*
	  In: Body
	*/
	Payload *AppointmentParamsCollectionOKBody `json:"body,omitempty"`
}

// NewAppointmentParamsCollectionOK creates AppointmentParamsCollectionOK with default headers values
func NewAppointmentParamsCollectionOK() *AppointmentParamsCollectionOK {

	return &AppointmentParamsCollectionOK{}
}

// WithPayload adds the payload to the appointment params collection o k response
func (o *AppointmentParamsCollectionOK) WithPayload(payload *AppointmentParamsCollectionOKBody) *AppointmentParamsCollectionOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the appointment params collection o k response
func (o *AppointmentParamsCollectionOK) SetPayload(payload *AppointmentParamsCollectionOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AppointmentParamsCollectionOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AppointmentParamsCollectionNotFoundCode is the HTTP code returned for type AppointmentParamsCollectionNotFound
const AppointmentParamsCollectionNotFoundCode int = 404

/*AppointmentParamsCollectionNotFound Not found

swagger:response appointmentParamsCollectionNotFound
*/
type AppointmentParamsCollectionNotFound struct {

	/*
	  In: Body
	*/
	Payload *AppointmentParamsCollectionNotFoundBody `json:"body,omitempty"`
}

// NewAppointmentParamsCollectionNotFound creates AppointmentParamsCollectionNotFound with default headers values
func NewAppointmentParamsCollectionNotFound() *AppointmentParamsCollectionNotFound {

	return &AppointmentParamsCollectionNotFound{}
}

// WithPayload adds the payload to the appointment params collection not found response
func (o *AppointmentParamsCollectionNotFound) WithPayload(payload *AppointmentParamsCollectionNotFoundBody) *AppointmentParamsCollectionNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the appointment params collection not found response
func (o *AppointmentParamsCollectionNotFound) SetPayload(payload *AppointmentParamsCollectionNotFoundBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AppointmentParamsCollectionNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AppointmentParamsCollectionMethodNotAllowedCode is the HTTP code returned for type AppointmentParamsCollectionMethodNotAllowed
const AppointmentParamsCollectionMethodNotAllowedCode int = 405

/*AppointmentParamsCollectionMethodNotAllowed Invalid Method

swagger:response appointmentParamsCollectionMethodNotAllowed
*/
type AppointmentParamsCollectionMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *AppointmentParamsCollectionMethodNotAllowedBody `json:"body,omitempty"`
}

// NewAppointmentParamsCollectionMethodNotAllowed creates AppointmentParamsCollectionMethodNotAllowed with default headers values
func NewAppointmentParamsCollectionMethodNotAllowed() *AppointmentParamsCollectionMethodNotAllowed {

	return &AppointmentParamsCollectionMethodNotAllowed{}
}

// WithPayload adds the payload to the appointment params collection method not allowed response
func (o *AppointmentParamsCollectionMethodNotAllowed) WithPayload(payload *AppointmentParamsCollectionMethodNotAllowedBody) *AppointmentParamsCollectionMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the appointment params collection method not allowed response
func (o *AppointmentParamsCollectionMethodNotAllowed) SetPayload(payload *AppointmentParamsCollectionMethodNotAllowedBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AppointmentParamsCollectionMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AppointmentParamsCollectionInternalServerErrorCode is the HTTP code returned for type AppointmentParamsCollectionInternalServerError
const AppointmentParamsCollectionInternalServerErrorCode int = 500

/*AppointmentParamsCollectionInternalServerError Internal server error

swagger:response appointmentParamsCollectionInternalServerError
*/
type AppointmentParamsCollectionInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *AppointmentParamsCollectionInternalServerErrorBody `json:"body,omitempty"`
}

// NewAppointmentParamsCollectionInternalServerError creates AppointmentParamsCollectionInternalServerError with default headers values
func NewAppointmentParamsCollectionInternalServerError() *AppointmentParamsCollectionInternalServerError {

	return &AppointmentParamsCollectionInternalServerError{}
}

// WithPayload adds the payload to the appointment params collection internal server error response
func (o *AppointmentParamsCollectionInternalServerError) WithPayload(payload *AppointmentParamsCollectionInternalServerErrorBody) *AppointmentParamsCollectionInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the appointment params collection internal server error response
func (o *AppointmentParamsCollectionInternalServerError) SetPayload(payload *AppointmentParamsCollectionInternalServerErrorBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AppointmentParamsCollectionInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
