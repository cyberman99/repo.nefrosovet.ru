// Code generated by go-swagger; DO NOT EDIT.

package access

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// PatientRegistrationOKCode is the HTTP code returned for type PatientRegistrationOK
const PatientRegistrationOKCode int = 200

/*PatientRegistrationOK SUCCESS

swagger:response patientRegistrationOK
*/
type PatientRegistrationOK struct {

	/*
	  In: Body
	*/
	Payload *PatientRegistrationOKBody `json:"body,omitempty"`
}

// NewPatientRegistrationOK creates PatientRegistrationOK with default headers values
func NewPatientRegistrationOK() *PatientRegistrationOK {

	return &PatientRegistrationOK{}
}

// WithPayload adds the payload to the patient registration o k response
func (o *PatientRegistrationOK) WithPayload(payload *PatientRegistrationOKBody) *PatientRegistrationOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the patient registration o k response
func (o *PatientRegistrationOK) SetPayload(payload *PatientRegistrationOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PatientRegistrationOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PatientRegistrationBadRequestCode is the HTTP code returned for type PatientRegistrationBadRequest
const PatientRegistrationBadRequestCode int = 400

/*PatientRegistrationBadRequest Validation error

swagger:response patientRegistrationBadRequest
*/
type PatientRegistrationBadRequest struct {

	/*
	  In: Body
	*/
	Payload *PatientRegistrationBadRequestBody `json:"body,omitempty"`
}

// NewPatientRegistrationBadRequest creates PatientRegistrationBadRequest with default headers values
func NewPatientRegistrationBadRequest() *PatientRegistrationBadRequest {

	return &PatientRegistrationBadRequest{}
}

// WithPayload adds the payload to the patient registration bad request response
func (o *PatientRegistrationBadRequest) WithPayload(payload *PatientRegistrationBadRequestBody) *PatientRegistrationBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the patient registration bad request response
func (o *PatientRegistrationBadRequest) SetPayload(payload *PatientRegistrationBadRequestBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PatientRegistrationBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PatientRegistrationMethodNotAllowedCode is the HTTP code returned for type PatientRegistrationMethodNotAllowed
const PatientRegistrationMethodNotAllowedCode int = 405

/*PatientRegistrationMethodNotAllowed Invalid Method

swagger:response patientRegistrationMethodNotAllowed
*/
type PatientRegistrationMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *PatientRegistrationMethodNotAllowedBody `json:"body,omitempty"`
}

// NewPatientRegistrationMethodNotAllowed creates PatientRegistrationMethodNotAllowed with default headers values
func NewPatientRegistrationMethodNotAllowed() *PatientRegistrationMethodNotAllowed {

	return &PatientRegistrationMethodNotAllowed{}
}

// WithPayload adds the payload to the patient registration method not allowed response
func (o *PatientRegistrationMethodNotAllowed) WithPayload(payload *PatientRegistrationMethodNotAllowedBody) *PatientRegistrationMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the patient registration method not allowed response
func (o *PatientRegistrationMethodNotAllowed) SetPayload(payload *PatientRegistrationMethodNotAllowedBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PatientRegistrationMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PatientRegistrationInternalServerErrorCode is the HTTP code returned for type PatientRegistrationInternalServerError
const PatientRegistrationInternalServerErrorCode int = 500

/*PatientRegistrationInternalServerError Internal server error

swagger:response patientRegistrationInternalServerError
*/
type PatientRegistrationInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *PatientRegistrationInternalServerErrorBody `json:"body,omitempty"`
}

// NewPatientRegistrationInternalServerError creates PatientRegistrationInternalServerError with default headers values
func NewPatientRegistrationInternalServerError() *PatientRegistrationInternalServerError {

	return &PatientRegistrationInternalServerError{}
}

// WithPayload adds the payload to the patient registration internal server error response
func (o *PatientRegistrationInternalServerError) WithPayload(payload *PatientRegistrationInternalServerErrorBody) *PatientRegistrationInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the patient registration internal server error response
func (o *PatientRegistrationInternalServerError) SetPayload(payload *PatientRegistrationInternalServerErrorBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PatientRegistrationInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
