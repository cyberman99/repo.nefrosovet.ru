// Code generated by go-swagger; DO NOT EDIT.

package employee

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// EmployeeViewOKCode is the HTTP code returned for type EmployeeViewOK
const EmployeeViewOKCode int = 200

/*EmployeeViewOK Объект информации о сотруднике

swagger:response employeeViewOK
*/
type EmployeeViewOK struct {

	/*
	  In: Body
	*/
	Payload *EmployeeViewOKBody `json:"body,omitempty"`
}

// NewEmployeeViewOK creates EmployeeViewOK with default headers values
func NewEmployeeViewOK() *EmployeeViewOK {

	return &EmployeeViewOK{}
}

// WithPayload adds the payload to the employee view o k response
func (o *EmployeeViewOK) WithPayload(payload *EmployeeViewOKBody) *EmployeeViewOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the employee view o k response
func (o *EmployeeViewOK) SetPayload(payload *EmployeeViewOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *EmployeeViewOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// EmployeeViewNotFoundCode is the HTTP code returned for type EmployeeViewNotFound
const EmployeeViewNotFoundCode int = 404

/*EmployeeViewNotFound Not found

swagger:response employeeViewNotFound
*/
type EmployeeViewNotFound struct {

	/*
	  In: Body
	*/
	Payload *EmployeeViewNotFoundBody `json:"body,omitempty"`
}

// NewEmployeeViewNotFound creates EmployeeViewNotFound with default headers values
func NewEmployeeViewNotFound() *EmployeeViewNotFound {

	return &EmployeeViewNotFound{}
}

// WithPayload adds the payload to the employee view not found response
func (o *EmployeeViewNotFound) WithPayload(payload *EmployeeViewNotFoundBody) *EmployeeViewNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the employee view not found response
func (o *EmployeeViewNotFound) SetPayload(payload *EmployeeViewNotFoundBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *EmployeeViewNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// EmployeeViewMethodNotAllowedCode is the HTTP code returned for type EmployeeViewMethodNotAllowed
const EmployeeViewMethodNotAllowedCode int = 405

/*EmployeeViewMethodNotAllowed Invalid Method

swagger:response employeeViewMethodNotAllowed
*/
type EmployeeViewMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *EmployeeViewMethodNotAllowedBody `json:"body,omitempty"`
}

// NewEmployeeViewMethodNotAllowed creates EmployeeViewMethodNotAllowed with default headers values
func NewEmployeeViewMethodNotAllowed() *EmployeeViewMethodNotAllowed {

	return &EmployeeViewMethodNotAllowed{}
}

// WithPayload adds the payload to the employee view method not allowed response
func (o *EmployeeViewMethodNotAllowed) WithPayload(payload *EmployeeViewMethodNotAllowedBody) *EmployeeViewMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the employee view method not allowed response
func (o *EmployeeViewMethodNotAllowed) SetPayload(payload *EmployeeViewMethodNotAllowedBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *EmployeeViewMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// EmployeeViewInternalServerErrorCode is the HTTP code returned for type EmployeeViewInternalServerError
const EmployeeViewInternalServerErrorCode int = 500

/*EmployeeViewInternalServerError Internal server error

swagger:response employeeViewInternalServerError
*/
type EmployeeViewInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *EmployeeViewInternalServerErrorBody `json:"body,omitempty"`
}

// NewEmployeeViewInternalServerError creates EmployeeViewInternalServerError with default headers values
func NewEmployeeViewInternalServerError() *EmployeeViewInternalServerError {

	return &EmployeeViewInternalServerError{}
}

// WithPayload adds the payload to the employee view internal server error response
func (o *EmployeeViewInternalServerError) WithPayload(payload *EmployeeViewInternalServerErrorBody) *EmployeeViewInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the employee view internal server error response
func (o *EmployeeViewInternalServerError) SetPayload(payload *EmployeeViewInternalServerErrorBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *EmployeeViewInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
