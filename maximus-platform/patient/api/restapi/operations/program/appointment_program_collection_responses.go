// Code generated by go-swagger; DO NOT EDIT.

package program

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// AppointmentProgramCollectionOKCode is the HTTP code returned for type AppointmentProgramCollectionOK
const AppointmentProgramCollectionOKCode int = 200

/*AppointmentProgramCollectionOK Коллекция объектов программ медицинских назначений

swagger:response appointmentProgramCollectionOK
*/
type AppointmentProgramCollectionOK struct {

	/*
	  In: Body
	*/
	Payload *AppointmentProgramCollectionOKBody `json:"body,omitempty"`
}

// NewAppointmentProgramCollectionOK creates AppointmentProgramCollectionOK with default headers values
func NewAppointmentProgramCollectionOK() *AppointmentProgramCollectionOK {

	return &AppointmentProgramCollectionOK{}
}

// WithPayload adds the payload to the appointment program collection o k response
func (o *AppointmentProgramCollectionOK) WithPayload(payload *AppointmentProgramCollectionOKBody) *AppointmentProgramCollectionOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the appointment program collection o k response
func (o *AppointmentProgramCollectionOK) SetPayload(payload *AppointmentProgramCollectionOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AppointmentProgramCollectionOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AppointmentProgramCollectionUnauthorizedCode is the HTTP code returned for type AppointmentProgramCollectionUnauthorized
const AppointmentProgramCollectionUnauthorizedCode int = 401

/*AppointmentProgramCollectionUnauthorized Access denied

swagger:response appointmentProgramCollectionUnauthorized
*/
type AppointmentProgramCollectionUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *AppointmentProgramCollectionUnauthorizedBody `json:"body,omitempty"`
}

// NewAppointmentProgramCollectionUnauthorized creates AppointmentProgramCollectionUnauthorized with default headers values
func NewAppointmentProgramCollectionUnauthorized() *AppointmentProgramCollectionUnauthorized {

	return &AppointmentProgramCollectionUnauthorized{}
}

// WithPayload adds the payload to the appointment program collection unauthorized response
func (o *AppointmentProgramCollectionUnauthorized) WithPayload(payload *AppointmentProgramCollectionUnauthorizedBody) *AppointmentProgramCollectionUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the appointment program collection unauthorized response
func (o *AppointmentProgramCollectionUnauthorized) SetPayload(payload *AppointmentProgramCollectionUnauthorizedBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AppointmentProgramCollectionUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AppointmentProgramCollectionNotFoundCode is the HTTP code returned for type AppointmentProgramCollectionNotFound
const AppointmentProgramCollectionNotFoundCode int = 404

/*AppointmentProgramCollectionNotFound Not found

swagger:response appointmentProgramCollectionNotFound
*/
type AppointmentProgramCollectionNotFound struct {

	/*
	  In: Body
	*/
	Payload *AppointmentProgramCollectionNotFoundBody `json:"body,omitempty"`
}

// NewAppointmentProgramCollectionNotFound creates AppointmentProgramCollectionNotFound with default headers values
func NewAppointmentProgramCollectionNotFound() *AppointmentProgramCollectionNotFound {

	return &AppointmentProgramCollectionNotFound{}
}

// WithPayload adds the payload to the appointment program collection not found response
func (o *AppointmentProgramCollectionNotFound) WithPayload(payload *AppointmentProgramCollectionNotFoundBody) *AppointmentProgramCollectionNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the appointment program collection not found response
func (o *AppointmentProgramCollectionNotFound) SetPayload(payload *AppointmentProgramCollectionNotFoundBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AppointmentProgramCollectionNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AppointmentProgramCollectionMethodNotAllowedCode is the HTTP code returned for type AppointmentProgramCollectionMethodNotAllowed
const AppointmentProgramCollectionMethodNotAllowedCode int = 405

/*AppointmentProgramCollectionMethodNotAllowed Invalid Method

swagger:response appointmentProgramCollectionMethodNotAllowed
*/
type AppointmentProgramCollectionMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *AppointmentProgramCollectionMethodNotAllowedBody `json:"body,omitempty"`
}

// NewAppointmentProgramCollectionMethodNotAllowed creates AppointmentProgramCollectionMethodNotAllowed with default headers values
func NewAppointmentProgramCollectionMethodNotAllowed() *AppointmentProgramCollectionMethodNotAllowed {

	return &AppointmentProgramCollectionMethodNotAllowed{}
}

// WithPayload adds the payload to the appointment program collection method not allowed response
func (o *AppointmentProgramCollectionMethodNotAllowed) WithPayload(payload *AppointmentProgramCollectionMethodNotAllowedBody) *AppointmentProgramCollectionMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the appointment program collection method not allowed response
func (o *AppointmentProgramCollectionMethodNotAllowed) SetPayload(payload *AppointmentProgramCollectionMethodNotAllowedBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AppointmentProgramCollectionMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AppointmentProgramCollectionInternalServerErrorCode is the HTTP code returned for type AppointmentProgramCollectionInternalServerError
const AppointmentProgramCollectionInternalServerErrorCode int = 500

/*AppointmentProgramCollectionInternalServerError Internal server error

swagger:response appointmentProgramCollectionInternalServerError
*/
type AppointmentProgramCollectionInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *AppointmentProgramCollectionInternalServerErrorBody `json:"body,omitempty"`
}

// NewAppointmentProgramCollectionInternalServerError creates AppointmentProgramCollectionInternalServerError with default headers values
func NewAppointmentProgramCollectionInternalServerError() *AppointmentProgramCollectionInternalServerError {

	return &AppointmentProgramCollectionInternalServerError{}
}

// WithPayload adds the payload to the appointment program collection internal server error response
func (o *AppointmentProgramCollectionInternalServerError) WithPayload(payload *AppointmentProgramCollectionInternalServerErrorBody) *AppointmentProgramCollectionInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the appointment program collection internal server error response
func (o *AppointmentProgramCollectionInternalServerError) SetPayload(payload *AppointmentProgramCollectionInternalServerErrorBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AppointmentProgramCollectionInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
