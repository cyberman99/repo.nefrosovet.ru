// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"repo.nefrosovet.ru/go-lms/api-video/ent/subscriber"
	"repo.nefrosovet.ru/go-lms/api-video/ent/useraccount"
	"repo.nefrosovet.ru/go-lms/api-video/ent/webinaruser"

	"github.com/facebookincubator/ent/dialect/sql/schema"
	"github.com/facebookincubator/ent/schema/field"
)

var (
	// AccountKeysColumns holds the columns for the "account_keys" table.
	AccountKeysColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "account_id", Type: field.TypeInt16},
		{Name: "key", Type: field.TypeString, Size: 255},
		{Name: "options", Type: field.TypeString, Nullable: true},
		{Name: "meta_data", Type: field.TypeString},
		{Name: "user_account_accountkeys", Type: field.TypeInt, Nullable: true},
	}
	// AccountKeysTable holds the schema information for the "account_keys" table.
	AccountKeysTable = &schema.Table{
		Name:       "account_keys",
		Columns:    AccountKeysColumns,
		PrimaryKey: []*schema.Column{AccountKeysColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "account_keys_user_accounts_accountkeys",
				Columns: []*schema.Column{AccountKeysColumns[7]},

				RefColumns: []*schema.Column{UserAccountsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// SubscribersColumns holds the columns for the "subscribers" table.
	SubscribersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "username", Type: field.TypeString, Size: 64, Default: subscriber.DefaultUsername},
		{Name: "domain", Type: field.TypeString, Size: 64, Default: subscriber.DefaultDomain},
		{Name: "ha1", Type: field.TypeString, Size: 64, Default: subscriber.DefaultHa1},
		{Name: "ha1b", Type: field.TypeString, Size: 64, Default: subscriber.DefaultHa1b},
		{Name: "user_subscriber", Type: field.TypeInt, Unique: true, Nullable: true},
	}
	// SubscribersTable holds the schema information for the "subscribers" table.
	SubscribersTable = &schema.Table{
		Name:       "subscribers",
		Columns:    SubscribersColumns,
		PrimaryKey: []*schema.Column{SubscribersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "subscribers_users_subscriber",
				Columns: []*schema.Column{SubscribersColumns[5]},

				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "meta_data", Type: field.TypeString, Size: 2147483647},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:        "users",
		Columns:     UsersColumns,
		PrimaryKey:  []*schema.Column{UsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// UserAccountsColumns holds the columns for the "user_accounts" table.
	UserAccountsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "username", Type: field.TypeString, Unique: true, Size: 50},
		{Name: "password", Type: field.TypeString, Size: 100},
		{Name: "remember_token", Type: field.TypeString, Nullable: true, Size: 100},
		{Name: "active", Type: field.TypeInt16, Default: useraccount.DefaultActive},
		{Name: "event_channel", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "did_prefix", Type: field.TypeString, Size: 45, Default: useraccount.DefaultDidPrefix},
		{Name: "use_kamalio", Type: field.TypeInt16, Default: useraccount.DefaultUseKamalio},
		{Name: "user_useraccount", Type: field.TypeInt, Unique: true, Nullable: true},
	}
	// UserAccountsTable holds the schema information for the "user_accounts" table.
	UserAccountsTable = &schema.Table{
		Name:       "user_accounts",
		Columns:    UserAccountsColumns,
		PrimaryKey: []*schema.Column{UserAccountsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "user_accounts_users_useraccount",
				Columns: []*schema.Column{UserAccountsColumns[8]},

				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// WebinarUsersColumns holds the columns for the "webinar_users" table.
	WebinarUsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "user_id", Type: field.TypeInt},
		{Name: "webinar_id", Type: field.TypeInt},
		{Name: "status", Type: field.TypeEnum, Nullable: true, Enums: []string{"WAIT", "OFFLINE", "ONLINE", "BANNED"}},
		{Name: "medooze_id", Type: field.TypeInt, Nullable: true},
		{Name: "old_medooze_id", Type: field.TypeInt, Nullable: true},
		{Name: "mic", Type: field.TypeInt16, Default: webinaruser.DefaultMic},
		{Name: "sound", Type: field.TypeInt16, Default: webinaruser.DefaultSound},
	}
	// WebinarUsersTable holds the schema information for the "webinar_users" table.
	WebinarUsersTable = &schema.Table{
		Name:        "webinar_users",
		Columns:     WebinarUsersColumns,
		PrimaryKey:  []*schema.Column{WebinarUsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AccountKeysTable,
		SubscribersTable,
		UsersTable,
		UserAccountsTable,
		WebinarUsersTable,
	}
)

func init() {
	AccountKeysTable.ForeignKeys[0].RefTable = UserAccountsTable
	SubscribersTable.ForeignKeys[0].RefTable = UsersTable
	UserAccountsTable.ForeignKeys[0].RefTable = UsersTable
}
