// Code generated by entc, DO NOT EDIT.

package accountkey

import (
	"repo.nefrosovet.ru/go-lms/api-video/ent/schema"
)

const (
	// Label holds the string label denoting the accountkey type in the database.
	Label = "account_key"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at vertex property in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at vertex property in the database.
	FieldUpdatedAt = "updated_at"
	// FieldAccountID holds the string denoting the account_id vertex property in the database.
	FieldAccountID = "account_id"
	// FieldKey holds the string denoting the key vertex property in the database.
	FieldKey = "key"
	// FieldOptions holds the string denoting the options vertex property in the database.
	FieldOptions = "options"
	// FieldMetaData holds the string denoting the meta_data vertex property in the database.
	FieldMetaData = "meta_data"

	// Table holds the table name of the accountkey in the database.
	Table = "account_keys"
	// UseraccountTable is the table the holds the useraccount relation/edge.
	UseraccountTable = "account_keys"
	// UseraccountInverseTable is the table name for the UserAccount entity.
	// It exists in this package in order to avoid circular dependency with the "useraccount" package.
	UseraccountInverseTable = "user_accounts"
	// UseraccountColumn is the table column denoting the useraccount relation/edge.
	UseraccountColumn = "user_account_accountkeys"
)

// Columns holds all SQL columns for accountkey fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldAccountID,
	FieldKey,
	FieldOptions,
	FieldMetaData,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the AccountKey type.
var ForeignKeys = []string{
	"user_account_accountkeys",
}

var (
	fields = schema.AccountKey{}.Fields()

	// descKey is the schema descriptor for key field.
	descKey = fields[3].Descriptor()
	// KeyValidator is a validator for the "key" field. It is called by the builders before save.
	KeyValidator = descKey.Validators[0].(func(string) error)
)
