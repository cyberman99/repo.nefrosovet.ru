// Code generated by entc, DO NOT EDIT.

package subscriber

import (
	"repo.nefrosovet.ru/go-lms/api-video/ent/schema"
)

const (
	// Label holds the string label denoting the subscriber type in the database.
	Label = "subscriber"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldUsername holds the string denoting the username vertex property in the database.
	FieldUsername = "username"
	// FieldDomain holds the string denoting the domain vertex property in the database.
	FieldDomain = "domain"
	// FieldHa1 holds the string denoting the ha1 vertex property in the database.
	FieldHa1 = "ha1"
	// FieldHa1b holds the string denoting the ha1b vertex property in the database.
	FieldHa1b = "ha1b"

	// Table holds the table name of the subscriber in the database.
	Table = "subscribers"
	// UserTable is the table the holds the user relation/edge.
	UserTable = "subscribers"
	// UserInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	UserInverseTable = "users"
	// UserColumn is the table column denoting the user relation/edge.
	UserColumn = "user_subscriber"
)

// Columns holds all SQL columns for subscriber fields.
var Columns = []string{
	FieldID,
	FieldUsername,
	FieldDomain,
	FieldHa1,
	FieldHa1b,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the Subscriber type.
var ForeignKeys = []string{
	"user_subscriber",
}

var (
	fields = schema.Subscriber{}.Fields()

	// descUsername is the schema descriptor for username field.
	descUsername = fields[0].Descriptor()
	// DefaultUsername holds the default value on creation for the username field.
	DefaultUsername = descUsername.Default.(string)
	// UsernameValidator is a validator for the "username" field. It is called by the builders before save.
	UsernameValidator = descUsername.Validators[0].(func(string) error)

	// descDomain is the schema descriptor for domain field.
	descDomain = fields[1].Descriptor()
	// DefaultDomain holds the default value on creation for the domain field.
	DefaultDomain = descDomain.Default.(string)
	// DomainValidator is a validator for the "domain" field. It is called by the builders before save.
	DomainValidator = descDomain.Validators[0].(func(string) error)

	// descHa1 is the schema descriptor for ha1 field.
	descHa1 = fields[2].Descriptor()
	// DefaultHa1 holds the default value on creation for the ha1 field.
	DefaultHa1 = descHa1.Default.(string)
	// Ha1Validator is a validator for the "ha1" field. It is called by the builders before save.
	Ha1Validator = descHa1.Validators[0].(func(string) error)

	// descHa1b is the schema descriptor for ha1b field.
	descHa1b = fields[3].Descriptor()
	// DefaultHa1b holds the default value on creation for the ha1b field.
	DefaultHa1b = descHa1b.Default.(string)
	// Ha1bValidator is a validator for the "ha1b" field. It is called by the builders before save.
	Ha1bValidator = descHa1b.Validators[0].(func(string) error)
)
