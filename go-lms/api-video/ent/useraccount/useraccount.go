// Code generated by entc, DO NOT EDIT.

package useraccount

import (
	"repo.nefrosovet.ru/go-lms/api-video/ent/schema"
)

const (
	// Label holds the string label denoting the useraccount type in the database.
	Label = "user_account"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldUsername holds the string denoting the username vertex property in the database.
	FieldUsername = "username"
	// FieldPassword holds the string denoting the password vertex property in the database.
	FieldPassword = "password"
	// FieldRememberToken holds the string denoting the remember_token vertex property in the database.
	FieldRememberToken = "remember_token"
	// FieldActive holds the string denoting the active vertex property in the database.
	FieldActive = "active"
	// FieldEventChannel holds the string denoting the event_channel vertex property in the database.
	FieldEventChannel = "event_channel"
	// FieldDidPrefix holds the string denoting the did_prefix vertex property in the database.
	FieldDidPrefix = "did_prefix"
	// FieldUseKamalio holds the string denoting the use_kamalio vertex property in the database.
	FieldUseKamalio = "use_kamalio"

	// Table holds the table name of the useraccount in the database.
	Table = "user_accounts"
	// UserTable is the table the holds the user relation/edge.
	UserTable = "user_accounts"
	// UserInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	UserInverseTable = "users"
	// UserColumn is the table column denoting the user relation/edge.
	UserColumn = "user_useraccount"
	// AccountkeysTable is the table the holds the accountkeys relation/edge.
	AccountkeysTable = "account_keys"
	// AccountkeysInverseTable is the table name for the AccountKey entity.
	// It exists in this package in order to avoid circular dependency with the "accountkey" package.
	AccountkeysInverseTable = "account_keys"
	// AccountkeysColumn is the table column denoting the accountkeys relation/edge.
	AccountkeysColumn = "user_account_accountkeys"
)

// Columns holds all SQL columns for useraccount fields.
var Columns = []string{
	FieldID,
	FieldUsername,
	FieldPassword,
	FieldRememberToken,
	FieldActive,
	FieldEventChannel,
	FieldDidPrefix,
	FieldUseKamalio,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the UserAccount type.
var ForeignKeys = []string{
	"user_useraccount",
}

var (
	fields = schema.UserAccount{}.Fields()

	// descUsername is the schema descriptor for username field.
	descUsername = fields[0].Descriptor()
	// UsernameValidator is a validator for the "username" field. It is called by the builders before save.
	UsernameValidator = descUsername.Validators[0].(func(string) error)

	// descPassword is the schema descriptor for password field.
	descPassword = fields[1].Descriptor()
	// PasswordValidator is a validator for the "password" field. It is called by the builders before save.
	PasswordValidator = descPassword.Validators[0].(func(string) error)

	// descRememberToken is the schema descriptor for remember_token field.
	descRememberToken = fields[2].Descriptor()
	// RememberTokenValidator is a validator for the "remember_token" field. It is called by the builders before save.
	RememberTokenValidator = descRememberToken.Validators[0].(func(string) error)

	// descActive is the schema descriptor for active field.
	descActive = fields[3].Descriptor()
	// DefaultActive holds the default value on creation for the active field.
	DefaultActive = descActive.Default.(int16)

	// descEventChannel is the schema descriptor for event_channel field.
	descEventChannel = fields[4].Descriptor()
	// EventChannelValidator is a validator for the "event_channel" field. It is called by the builders before save.
	EventChannelValidator = descEventChannel.Validators[0].(func(string) error)

	// descDidPrefix is the schema descriptor for did_prefix field.
	descDidPrefix = fields[5].Descriptor()
	// DefaultDidPrefix holds the default value on creation for the did_prefix field.
	DefaultDidPrefix = descDidPrefix.Default.(string)
	// DidPrefixValidator is a validator for the "did_prefix" field. It is called by the builders before save.
	DidPrefixValidator = descDidPrefix.Validators[0].(func(string) error)

	// descUseKamalio is the schema descriptor for use_kamalio field.
	descUseKamalio = fields[6].Descriptor()
	// DefaultUseKamalio holds the default value on creation for the use_kamalio field.
	DefaultUseKamalio = descUseKamalio.Default.(int16)
)
